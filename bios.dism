[
    Instruction {
        val: Unprefixed(
            49,
        ),
        opcode: LD_SP(
            65279,
        ),
        span: Span {
            start: 0,
            end: 3,
        },
    },
    Instruction {
        val: Unprefixed(
            62,
        ),
        opcode: LD {
            src: N8(
                2,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 3,
            end: 5,
        },
    },
    Instruction {
        val: Unprefixed(
            195,
        ),
        opcode: JP {
            cc: None,
            n16: 31744,
        },
        span: Span {
            start: 5,
            end: 8,
        },
    },
    Instruction {
        val: Unprefixed(
            211,
        ),
        opcode: Invalid(
            211,
        ),
        span: Span {
            start: 8,
            end: 9,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 9,
            end: 10,
        },
    },
    Instruction {
        val: Unprefixed(
            152,
        ),
        opcode: SBC(
            Register(
                B,
            ),
        ),
        span: Span {
            start: 10,
            end: 11,
        },
    },
    Instruction {
        val: Unprefixed(
            160,
        ),
        opcode: AND(
            Register(
                B,
            ),
        ),
        span: Span {
            start: 11,
            end: 12,
        },
    },
    Instruction {
        val: Unprefixed(
            18,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: MEM_R16(
                DE,
            ),
        },
        span: Span {
            start: 12,
            end: 13,
        },
    },
    Instruction {
        val: Unprefixed(
            211,
        ),
        opcode: Invalid(
            211,
        ),
        span: Span {
            start: 13,
            end: 14,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 14,
            end: 15,
        },
    },
    Instruction {
        val: Unprefixed(
            128,
        ),
        opcode: ADD(
            Register(
                B,
            ),
        ),
        span: Span {
            start: 15,
            end: 16,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 16,
            end: 17,
        },
    },
    Instruction {
        val: Unprefixed(
            64,
        ),
        opcode: LD {
            src: R8(
                B,
            ),
            dest: R8(
                B,
            ),
        },
        span: Span {
            start: 17,
            end: 18,
        },
    },
    Instruction {
        val: Unprefixed(
            30,
        ),
        opcode: LD {
            src: N8(
                83,
            ),
            dest: R8(
                E,
            ),
        },
        span: Span {
            start: 18,
            end: 20,
        },
    },
    Instruction {
        val: Unprefixed(
            208,
        ),
        opcode: RET(
            Some(
                NC,
            ),
        ),
        span: Span {
            start: 20,
            end: 21,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 21,
            end: 22,
        },
    },
    Instruction {
        val: Unprefixed(
            31,
        ),
        opcode: RRA,
        span: Span {
            start: 22,
            end: 23,
        },
    },
    Instruction {
        val: Unprefixed(
            66,
        ),
        opcode: LD {
            src: R8(
                D,
            ),
            dest: R8(
                B,
            ),
        },
        span: Span {
            start: 23,
            end: 24,
        },
    },
    Instruction {
        val: Unprefixed(
            28,
        ),
        opcode: INC(
            R8(
                E,
            ),
        ),
        span: Span {
            start: 24,
            end: 25,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 25,
            end: 26,
        },
    },
    Instruction {
        val: Unprefixed(
            20,
        ),
        opcode: INC(
            R8(
                D,
            ),
        ),
        span: Span {
            start: 26,
            end: 27,
        },
    },
    Instruction {
        val: Unprefixed(
            42,
        ),
        opcode: LD {
            src: MEM_HLI,
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 27,
            end: 28,
        },
    },
    Instruction {
        val: Unprefixed(
            77,
        ),
        opcode: LD {
            src: R8(
                L,
            ),
            dest: R8(
                C,
            ),
        },
        span: Span {
            start: 28,
            end: 29,
        },
    },
    Instruction {
        val: Unprefixed(
            25,
        ),
        opcode: ADD_HL(
            DE,
        ),
        span: Span {
            start: 29,
            end: 30,
        },
    },
    Instruction {
        val: Unprefixed(
            140,
        ),
        opcode: ADC(
            Register(
                H,
            ),
        ),
        span: Span {
            start: 30,
            end: 31,
        },
    },
    Instruction {
        val: Unprefixed(
            126,
        ),
        opcode: LD {
            src: R8(
                HL,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 31,
            end: 32,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 32,
            end: 33,
        },
    },
    Instruction {
        val: Unprefixed(
            124,
        ),
        opcode: LD {
            src: R8(
                H,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 33,
            end: 34,
        },
    },
    Instruction {
        val: Unprefixed(
            49,
        ),
        opcode: LD_SP(
            28234,
        ),
        span: Span {
            start: 34,
            end: 37,
        },
    },
    Instruction {
        val: Unprefixed(
            69,
        ),
        opcode: LD {
            src: R8(
                L,
            ),
            dest: R8(
                B,
            ),
        },
        span: Span {
            start: 37,
            end: 38,
        },
    },
    Instruction {
        val: Unprefixed(
            82,
        ),
        opcode: LD {
            src: R8(
                D,
            ),
            dest: R8(
                D,
            ),
        },
        span: Span {
            start: 38,
            end: 39,
        },
    },
    Instruction {
        val: Unprefixed(
            74,
        ),
        opcode: LD {
            src: R8(
                D,
            ),
            dest: R8(
                C,
            ),
        },
        span: Span {
            start: 39,
            end: 40,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 40,
            end: 41,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 41,
            end: 42,
        },
    },
    Instruction {
        val: Unprefixed(
            255,
        ),
        opcode: RST(
            56,
        ),
        span: Span {
            start: 42,
            end: 43,
        },
    },
    Instruction {
        val: Unprefixed(
            83,
        ),
        opcode: LD {
            src: R8(
                E,
            ),
            dest: R8(
                D,
            ),
        },
        span: Span {
            start: 43,
            end: 44,
        },
    },
    Instruction {
        val: Unprefixed(
            31,
        ),
        opcode: RRA,
        span: Span {
            start: 44,
            end: 45,
        },
    },
    Instruction {
        val: Unprefixed(
            124,
        ),
        opcode: LD {
            src: R8(
                H,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 45,
            end: 46,
        },
    },
    Instruction {
        val: Unprefixed(
            255,
        ),
        opcode: RST(
            56,
        ),
        span: Span {
            start: 46,
            end: 47,
        },
    },
    Instruction {
        val: Unprefixed(
            3,
        ),
        opcode: INC(
            R16(
                BC,
            ),
        ),
        span: Span {
            start: 47,
            end: 48,
        },
    },
    Instruction {
        val: Unprefixed(
            31,
        ),
        opcode: RRA,
        span: Span {
            start: 48,
            end: 49,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 49,
            end: 50,
        },
    },
    Instruction {
        val: Unprefixed(
            255,
        ),
        opcode: RST(
            56,
        ),
        span: Span {
            start: 50,
            end: 51,
        },
    },
    Instruction {
        val: Unprefixed(
            31,
        ),
        opcode: RRA,
        span: Span {
            start: 51,
            end: 52,
        },
    },
    Instruction {
        val: Unprefixed(
            167,
        ),
        opcode: AND(
            Register(
                A,
            ),
        ),
        span: Span {
            start: 52,
            end: 53,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 53,
            end: 54,
        },
    },
    Instruction {
        val: Unprefixed(
            239,
        ),
        opcode: RST(
            40,
        ),
        span: Span {
            start: 54,
            end: 55,
        },
    },
    Instruction {
        val: Unprefixed(
            27,
        ),
        opcode: DEC(
            R16(
                DE,
            ),
        ),
        span: Span {
            start: 55,
            end: 56,
        },
    },
    Instruction {
        val: Unprefixed(
            31,
        ),
        opcode: RRA,
        span: Span {
            start: 56,
            end: 57,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 57,
            end: 58,
        },
    },
    Instruction {
        val: Unprefixed(
            239,
        ),
        opcode: RST(
            40,
        ),
        span: Span {
            start: 58,
            end: 59,
        },
    },
    Instruction {
        val: Unprefixed(
            27,
        ),
        opcode: DEC(
            R16(
                DE,
            ),
        ),
        span: Span {
            start: 59,
            end: 60,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 60,
            end: 61,
        },
    },
    Instruction {
        val: Unprefixed(
            124,
        ),
        opcode: LD {
            src: R8(
                H,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 61,
            end: 62,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 62,
            end: 63,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 63,
            end: 64,
        },
    },
    Instruction {
        val: Unprefixed(
            255,
        ),
        opcode: RST(
            56,
        ),
        span: Span {
            start: 64,
            end: 65,
        },
    },
    Instruction {
        val: Unprefixed(
            3,
        ),
        opcode: INC(
            R16(
                BC,
            ),
        ),
        span: Span {
            start: 65,
            end: 66,
        },
    },
    Instruction {
        val: Unprefixed(
            206,
        ),
        opcode: ADC(
            Constant(
                237,
            ),
        ),
        span: Span {
            start: 66,
            end: 68,
        },
    },
    Instruction {
        val: Unprefixed(
            102,
        ),
        opcode: LD {
            src: R8(
                HL,
            ),
            dest: R8(
                H,
            ),
        },
        span: Span {
            start: 68,
            end: 69,
        },
    },
    Instruction {
        val: Unprefixed(
            102,
        ),
        opcode: LD {
            src: R8(
                HL,
            ),
            dest: R8(
                H,
            ),
        },
        span: Span {
            start: 69,
            end: 70,
        },
    },
    Instruction {
        val: Unprefixed(
            204,
        ),
        opcode: CALL {
            cc: Some(
                Z,
            ),
            n16: 3328,
        },
        span: Span {
            start: 70,
            end: 73,
        },
    },
    Instruction {
        val: Unprefixed(
            11,
        ),
        opcode: DEC(
            R16(
                BC,
            ),
        ),
        span: Span {
            start: 73,
            end: 74,
        },
    },
    Instruction {
        val: Unprefixed(
            3,
        ),
        opcode: INC(
            R16(
                BC,
            ),
        ),
        span: Span {
            start: 74,
            end: 75,
        },
    },
    Instruction {
        val: Unprefixed(
            115,
        ),
        opcode: LD {
            src: R8(
                E,
            ),
            dest: R8(
                HL,
            ),
        },
        span: Span {
            start: 75,
            end: 76,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 76,
            end: 77,
        },
    },
    Instruction {
        val: Unprefixed(
            131,
        ),
        opcode: ADD(
            Register(
                E,
            ),
        ),
        span: Span {
            start: 77,
            end: 78,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 78,
            end: 79,
        },
    },
    Instruction {
        val: Unprefixed(
            12,
        ),
        opcode: INC(
            R8(
                C,
            ),
        ),
        span: Span {
            start: 79,
            end: 80,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 80,
            end: 81,
        },
    },
    Instruction {
        val: Unprefixed(
            13,
        ),
        opcode: DEC(
            R8(
                C,
            ),
        ),
        span: Span {
            start: 81,
            end: 82,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 82,
            end: 83,
        },
    },
    Instruction {
        val: Unprefixed(
            8,
        ),
        opcode: LD_SP(
            4383,
        ),
        span: Span {
            start: 83,
            end: 86,
        },
    },
    Instruction {
        val: Unprefixed(
            136,
        ),
        opcode: ADC(
            Register(
                B,
            ),
        ),
        span: Span {
            start: 86,
            end: 87,
        },
    },
    Instruction {
        val: Unprefixed(
            137,
        ),
        opcode: ADC(
            Register(
                C,
            ),
        ),
        span: Span {
            start: 87,
            end: 88,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 88,
            end: 89,
        },
    },
    Instruction {
        val: Unprefixed(
            14,
        ),
        opcode: LD {
            src: N8(
                220,
            ),
            dest: R8(
                C,
            ),
        },
        span: Span {
            start: 89,
            end: 91,
        },
    },
    Instruction {
        val: Unprefixed(
            204,
        ),
        opcode: CALL {
            cc: Some(
                Z,
            ),
            n16: 28390,
        },
        span: Span {
            start: 91,
            end: 94,
        },
    },
    Instruction {
        val: Unprefixed(
            221,
        ),
        opcode: Invalid(
            221,
        ),
        span: Span {
            start: 94,
            end: 95,
        },
    },
    Instruction {
        val: Unprefixed(
            221,
        ),
        opcode: Invalid(
            221,
        ),
        span: Span {
            start: 95,
            end: 96,
        },
    },
    Instruction {
        val: Unprefixed(
            217,
        ),
        opcode: RETI,
        span: Span {
            start: 96,
            end: 97,
        },
    },
    Instruction {
        val: Unprefixed(
            153,
        ),
        opcode: SBC(
            Register(
                C,
            ),
        ),
        span: Span {
            start: 97,
            end: 98,
        },
    },
    Instruction {
        val: Unprefixed(
            187,
        ),
        opcode: CP(
            Register(
                E,
            ),
        ),
        span: Span {
            start: 98,
            end: 99,
        },
    },
    Instruction {
        val: Unprefixed(
            187,
        ),
        opcode: CP(
            Register(
                E,
            ),
        ),
        span: Span {
            start: 99,
            end: 100,
        },
    },
    Instruction {
        val: Unprefixed(
            103,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: R8(
                H,
            ),
        },
        span: Span {
            start: 100,
            end: 101,
        },
    },
    Instruction {
        val: Unprefixed(
            99,
        ),
        opcode: LD {
            src: R8(
                E,
            ),
            dest: R8(
                H,
            ),
        },
        span: Span {
            start: 101,
            end: 102,
        },
    },
    Instruction {
        val: Unprefixed(
            110,
        ),
        opcode: LD {
            src: R8(
                HL,
            ),
            dest: R8(
                L,
            ),
        },
        span: Span {
            start: 102,
            end: 103,
        },
    },
    Instruction {
        val: Unprefixed(
            14,
        ),
        opcode: LD {
            src: N8(
                236,
            ),
            dest: R8(
                C,
            ),
        },
        span: Span {
            start: 103,
            end: 105,
        },
    },
    Instruction {
        val: Unprefixed(
            204,
        ),
        opcode: CALL {
            cc: Some(
                Z,
            ),
            n16: 56796,
        },
        span: Span {
            start: 105,
            end: 108,
        },
    },
    Instruction {
        val: Unprefixed(
            153,
        ),
        opcode: SBC(
            Register(
                C,
            ),
        ),
        span: Span {
            start: 108,
            end: 109,
        },
    },
    Instruction {
        val: Unprefixed(
            159,
        ),
        opcode: SBC(
            Register(
                A,
            ),
        ),
        span: Span {
            start: 109,
            end: 110,
        },
    },
    Instruction {
        val: Unprefixed(
            187,
        ),
        opcode: CP(
            Register(
                E,
            ),
        ),
        span: Span {
            start: 110,
            end: 111,
        },
    },
    Instruction {
        val: Unprefixed(
            185,
        ),
        opcode: CP(
            Register(
                C,
            ),
        ),
        span: Span {
            start: 111,
            end: 112,
        },
    },
    Instruction {
        val: Unprefixed(
            51,
        ),
        opcode: INC(
            SP,
        ),
        span: Span {
            start: 112,
            end: 113,
        },
    },
    Instruction {
        val: Unprefixed(
            62,
        ),
        opcode: LD {
            src: N8(
                60,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 113,
            end: 115,
        },
    },
    Instruction {
        val: Unprefixed(
            66,
        ),
        opcode: LD {
            src: R8(
                D,
            ),
            dest: R8(
                B,
            ),
        },
        span: Span {
            start: 115,
            end: 116,
        },
    },
    Instruction {
        val: Unprefixed(
            185,
        ),
        opcode: CP(
            Register(
                C,
            ),
        ),
        span: Span {
            start: 116,
            end: 117,
        },
    },
    Instruction {
        val: Unprefixed(
            165,
        ),
        opcode: AND(
            Register(
                L,
            ),
        ),
        span: Span {
            start: 117,
            end: 118,
        },
    },
    Instruction {
        val: Unprefixed(
            185,
        ),
        opcode: CP(
            Register(
                C,
            ),
        ),
        span: Span {
            start: 118,
            end: 119,
        },
    },
    Instruction {
        val: Unprefixed(
            165,
        ),
        opcode: AND(
            Register(
                L,
            ),
        ),
        span: Span {
            start: 119,
            end: 120,
        },
    },
    Instruction {
        val: Unprefixed(
            66,
        ),
        opcode: LD {
            src: R8(
                D,
            ),
            dest: R8(
                B,
            ),
        },
        span: Span {
            start: 120,
            end: 121,
        },
    },
    Instruction {
        val: Unprefixed(
            60,
        ),
        opcode: INC(
            R8(
                A,
            ),
        ),
        span: Span {
            start: 121,
            end: 122,
        },
    },
    Instruction {
        val: Unprefixed(
            88,
        ),
        opcode: LD {
            src: R8(
                B,
            ),
            dest: R8(
                E,
            ),
        },
        span: Span {
            start: 122,
            end: 123,
        },
    },
    Instruction {
        val: Unprefixed(
            67,
        ),
        opcode: LD {
            src: R8(
                E,
            ),
            dest: R8(
                B,
            ),
        },
        span: Span {
            start: 123,
            end: 124,
        },
    },
    Instruction {
        val: Unprefixed(
            224,
        ),
        opcode: LDH {
            src: MEM_N16(
                65392,
            ),
            dest: A,
        },
        span: Span {
            start: 124,
            end: 126,
        },
    },
    Instruction {
        val: Unprefixed(
            62,
        ),
        opcode: LD {
            src: N8(
                252,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 126,
            end: 128,
        },
    },
    Instruction {
        val: Unprefixed(
            224,
        ),
        opcode: LDH {
            src: MEM_N16(
                65351,
            ),
            dest: A,
        },
        span: Span {
            start: 128,
            end: 130,
        },
    },
    Instruction {
        val: Unprefixed(
            205,
        ),
        opcode: CALL {
            cc: None,
            n16: 29954,
        },
        span: Span {
            start: 130,
            end: 133,
        },
    },
    Instruction {
        val: Unprefixed(
            205,
        ),
        opcode: CALL {
            cc: None,
            n16: 2,
        },
        span: Span {
            start: 133,
            end: 136,
        },
    },
    Instruction {
        val: Unprefixed(
            38,
        ),
        opcode: LD {
            src: N8(
                208,
            ),
            dest: R8(
                H,
            ),
        },
        span: Span {
            start: 136,
            end: 138,
        },
    },
    Instruction {
        val: Unprefixed(
            205,
        ),
        opcode: CALL {
            cc: None,
            n16: 770,
        },
        span: Span {
            start: 138,
            end: 141,
        },
    },
    Instruction {
        val: Unprefixed(
            33,
        ),
        opcode: LD {
            src: N16(
                254,
            ),
            dest: R16(
                HL,
            ),
        },
        span: Span {
            start: 141,
            end: 144,
        },
    },
    Instruction {
        val: Unprefixed(
            14,
        ),
        opcode: LD {
            src: N8(
                160,
            ),
            dest: R8(
                C,
            ),
        },
        span: Span {
            start: 144,
            end: 146,
        },
    },
    Instruction {
        val: Unprefixed(
            175,
        ),
        opcode: XOR(
            Register(
                A,
            ),
        ),
        span: Span {
            start: 146,
            end: 147,
        },
    },
    Instruction {
        val: Unprefixed(
            34,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: MEM_HLI,
        },
        span: Span {
            start: 147,
            end: 148,
        },
    },
    Instruction {
        val: Unprefixed(
            13,
        ),
        opcode: DEC(
            R8(
                C,
            ),
        ),
        span: Span {
            start: 148,
            end: 149,
        },
    },
    Instruction {
        val: Unprefixed(
            32,
        ),
        opcode: JR {
            cc: Some(
                NZ,
            ),
            e8: -4,
        },
        span: Span {
            start: 149,
            end: 151,
        },
    },
    Instruction {
        val: Unprefixed(
            17,
        ),
        opcode: LD {
            src: N16(
                1025,
            ),
            dest: R16(
                DE,
            ),
        },
        span: Span {
            start: 151,
            end: 154,
        },
    },
    Instruction {
        val: Unprefixed(
            33,
        ),
        opcode: LD {
            src: N16(
                4224,
            ),
            dest: R16(
                HL,
            ),
        },
        span: Span {
            start: 154,
            end: 157,
        },
    },
    Instruction {
        val: Unprefixed(
            76,
        ),
        opcode: LD {
            src: R8(
                H,
            ),
            dest: R8(
                C,
            ),
        },
        span: Span {
            start: 157,
            end: 158,
        },
    },
    Instruction {
        val: Unprefixed(
            26,
        ),
        opcode: LD {
            src: MEM_R16(
                DE,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 158,
            end: 159,
        },
    },
    Instruction {
        val: Unprefixed(
            226,
        ),
        opcode: LDH {
            src: MEM_C,
            dest: A,
        },
        span: Span {
            start: 159,
            end: 161,
        },
    },
    Instruction {
        val: Unprefixed(
            205,
        ),
        opcode: CALL {
            cc: None,
            n16: 50691,
        },
        span: Span {
            start: 161,
            end: 164,
        },
    },
    Instruction {
        val: Unprefixed(
            205,
        ),
        opcode: CALL {
            cc: None,
            n16: 50947,
        },
        span: Span {
            start: 164,
            end: 167,
        },
    },
    Instruction {
        val: Unprefixed(
            19,
        ),
        opcode: INC(
            R16(
                DE,
            ),
        ),
        span: Span {
            start: 167,
            end: 168,
        },
    },
    Instruction {
        val: Unprefixed(
            123,
        ),
        opcode: LD {
            src: R8(
                E,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 168,
            end: 169,
        },
    },
    Instruction {
        val: Unprefixed(
            254,
        ),
        opcode: CP(
            Constant(
                52,
            ),
        ),
        span: Span {
            start: 169,
            end: 171,
        },
    },
    Instruction {
        val: Unprefixed(
            32,
        ),
        opcode: JR {
            cc: Some(
                NZ,
            ),
            e8: -15,
        },
        span: Span {
            start: 171,
            end: 173,
        },
    },
    Instruction {
        val: Unprefixed(
            17,
        ),
        opcode: LD {
            src: N16(
                29184,
            ),
            dest: R16(
                DE,
            ),
        },
        span: Span {
            start: 173,
            end: 176,
        },
    },
    Instruction {
        val: Unprefixed(
            6,
        ),
        opcode: LD {
            src: N8(
                8,
            ),
            dest: R8(
                B,
            ),
        },
        span: Span {
            start: 176,
            end: 178,
        },
    },
    Instruction {
        val: Unprefixed(
            26,
        ),
        opcode: LD {
            src: MEM_R16(
                DE,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 178,
            end: 179,
        },
    },
    Instruction {
        val: Unprefixed(
            19,
        ),
        opcode: INC(
            R16(
                DE,
            ),
        ),
        span: Span {
            start: 179,
            end: 180,
        },
    },
    Instruction {
        val: Unprefixed(
            34,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: MEM_HLI,
        },
        span: Span {
            start: 180,
            end: 181,
        },
    },
    Instruction {
        val: Unprefixed(
            35,
        ),
        opcode: INC(
            R16(
                HL,
            ),
        ),
        span: Span {
            start: 181,
            end: 182,
        },
    },
    Instruction {
        val: Unprefixed(
            5,
        ),
        opcode: DEC(
            R8(
                B,
            ),
        ),
        span: Span {
            start: 182,
            end: 183,
        },
    },
    Instruction {
        val: Unprefixed(
            32,
        ),
        opcode: JR {
            cc: Some(
                NZ,
            ),
            e8: -7,
        },
        span: Span {
            start: 183,
            end: 185,
        },
    },
    Instruction {
        val: Unprefixed(
            205,
        ),
        opcode: CALL {
            cc: None,
            n16: 61443,
        },
        span: Span {
            start: 185,
            end: 188,
        },
    },
    Instruction {
        val: Unprefixed(
            62,
        ),
        opcode: LD {
            src: N8(
                1,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 188,
            end: 190,
        },
    },
    Instruction {
        val: Unprefixed(
            224,
        ),
        opcode: LDH {
            src: MEM_N16(
                65359,
            ),
            dest: A,
        },
        span: Span {
            start: 190,
            end: 192,
        },
    },
    Instruction {
        val: Unprefixed(
            62,
        ),
        opcode: LD {
            src: N8(
                145,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 192,
            end: 194,
        },
    },
    Instruction {
        val: Unprefixed(
            224,
        ),
        opcode: LDH {
            src: MEM_N16(
                65344,
            ),
            dest: A,
        },
        span: Span {
            start: 194,
            end: 196,
        },
    },
    Instruction {
        val: Unprefixed(
            33,
        ),
        opcode: LD {
            src: N16(
                45720,
            ),
            dest: R16(
                HL,
            ),
        },
        span: Span {
            start: 196,
            end: 199,
        },
    },
    Instruction {
        val: Unprefixed(
            6,
        ),
        opcode: LD {
            src: N8(
                78,
            ),
            dest: R8(
                B,
            ),
        },
        span: Span {
            start: 199,
            end: 201,
        },
    },
    Instruction {
        val: Unprefixed(
            14,
        ),
        opcode: LD {
            src: N8(
                68,
            ),
            dest: R8(
                C,
            ),
        },
        span: Span {
            start: 201,
            end: 203,
        },
    },
    Instruction {
        val: Unprefixed(
            205,
        ),
        opcode: CALL {
            cc: None,
            n16: 37122,
        },
        span: Span {
            start: 203,
            end: 206,
        },
    },
    Instruction {
        val: Unprefixed(
            175,
        ),
        opcode: XOR(
            Register(
                A,
            ),
        ),
        span: Span {
            start: 206,
            end: 207,
        },
    },
    Instruction {
        val: Unprefixed(
            224,
        ),
        opcode: LDH {
            src: MEM_N16(
                65359,
            ),
            dest: A,
        },
        span: Span {
            start: 207,
            end: 209,
        },
    },
    Instruction {
        val: Unprefixed(
            14,
        ),
        opcode: LD {
            src: N8(
                128,
            ),
            dest: R8(
                C,
            ),
        },
        span: Span {
            start: 209,
            end: 211,
        },
    },
    Instruction {
        val: Unprefixed(
            33,
        ),
        opcode: LD {
            src: N16(
                16896,
            ),
            dest: R16(
                HL,
            ),
        },
        span: Span {
            start: 211,
            end: 214,
        },
    },
    Instruction {
        val: Unprefixed(
            6,
        ),
        opcode: LD {
            src: N8(
                24,
            ),
            dest: R8(
                B,
            ),
        },
        span: Span {
            start: 214,
            end: 216,
        },
    },
    Instruction {
        val: Unprefixed(
            242,
        ),
        opcode: LDH {
            src: A,
            dest: MEM_C,
        },
        span: Span {
            start: 216,
            end: 218,
        },
    },
    Instruction {
        val: Unprefixed(
            190,
        ),
        opcode: CP(
            Register(
                HL,
            ),
        ),
        span: Span {
            start: 218,
            end: 219,
        },
    },
    Instruction {
        val: Unprefixed(
            32,
        ),
        opcode: JR {
            cc: Some(
                NZ,
            ),
            e8: -2,
        },
        span: Span {
            start: 219,
            end: 221,
        },
    },
    Instruction {
        val: Unprefixed(
            35,
        ),
        opcode: INC(
            R16(
                HL,
            ),
        ),
        span: Span {
            start: 221,
            end: 222,
        },
    },
    Instruction {
        val: Unprefixed(
            5,
        ),
        opcode: DEC(
            R8(
                B,
            ),
        ),
        span: Span {
            start: 222,
            end: 223,
        },
    },
    Instruction {
        val: Unprefixed(
            32,
        ),
        opcode: JR {
            cc: Some(
                NZ,
            ),
            e8: -9,
        },
        span: Span {
            start: 223,
            end: 225,
        },
    },
    Instruction {
        val: Unprefixed(
            33,
        ),
        opcode: LD {
            src: N16(
                13313,
            ),
            dest: R16(
                HL,
            ),
        },
        span: Span {
            start: 225,
            end: 228,
        },
    },
    Instruction {
        val: Unprefixed(
            6,
        ),
        opcode: LD {
            src: N8(
                25,
            ),
            dest: R8(
                B,
            ),
        },
        span: Span {
            start: 228,
            end: 230,
        },
    },
    Instruction {
        val: Unprefixed(
            120,
        ),
        opcode: LD {
            src: R8(
                B,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 230,
            end: 231,
        },
    },
    Instruction {
        val: Unprefixed(
            134,
        ),
        opcode: ADD(
            Register(
                HL,
            ),
        ),
        span: Span {
            start: 231,
            end: 232,
        },
    },
    Instruction {
        val: Unprefixed(
            44,
        ),
        opcode: INC(
            R8(
                L,
            ),
        ),
        span: Span {
            start: 232,
            end: 233,
        },
    },
    Instruction {
        val: Unprefixed(
            5,
        ),
        opcode: DEC(
            R8(
                B,
            ),
        ),
        span: Span {
            start: 233,
            end: 234,
        },
    },
    Instruction {
        val: Unprefixed(
            32,
        ),
        opcode: JR {
            cc: Some(
                NZ,
            ),
            e8: -5,
        },
        span: Span {
            start: 234,
            end: 236,
        },
    },
    Instruction {
        val: Unprefixed(
            134,
        ),
        opcode: ADD(
            Register(
                HL,
            ),
        ),
        span: Span {
            start: 236,
            end: 237,
        },
    },
    Instruction {
        val: Unprefixed(
            32,
        ),
        opcode: JR {
            cc: Some(
                NZ,
            ),
            e8: -2,
        },
        span: Span {
            start: 237,
            end: 239,
        },
    },
    Instruction {
        val: Unprefixed(
            205,
        ),
        opcode: CALL {
            cc: None,
            n16: 7171,
        },
        span: Span {
            start: 239,
            end: 242,
        },
    },
    Instruction {
        val: Unprefixed(
            24,
        ),
        opcode: JR {
            cc: None,
            e8: 2,
        },
        span: Span {
            start: 242,
            end: 244,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 244,
            end: 245,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 245,
            end: 246,
        },
    },
    Instruction {
        val: Unprefixed(
            205,
        ),
        opcode: CALL {
            cc: None,
            n16: 53253,
        },
        span: Span {
            start: 246,
            end: 249,
        },
    },
    Instruction {
        val: Unprefixed(
            175,
        ),
        opcode: XOR(
            Register(
                A,
            ),
        ),
        span: Span {
            start: 249,
            end: 250,
        },
    },
    Instruction {
        val: Unprefixed(
            224,
        ),
        opcode: LDH {
            src: MEM_N16(
                65392,
            ),
            dest: A,
        },
        span: Span {
            start: 250,
            end: 252,
        },
    },
    Instruction {
        val: Unprefixed(
            62,
        ),
        opcode: LD {
            src: N8(
                17,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 252,
            end: 254,
        },
    },
    Instruction {
        val: Unprefixed(
            224,
        ),
        opcode: LDH {
            src: MEM_N16(
                65360,
            ),
            dest: A,
        },
        span: Span {
            start: 254,
            end: 256,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 256,
            end: 257,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 257,
            end: 258,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 258,
            end: 259,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 259,
            end: 260,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 260,
            end: 261,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 261,
            end: 262,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 262,
            end: 263,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 263,
            end: 264,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 264,
            end: 265,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 265,
            end: 266,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 266,
            end: 267,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 267,
            end: 268,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 268,
            end: 269,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 269,
            end: 270,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 270,
            end: 271,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 271,
            end: 272,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 272,
            end: 273,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 273,
            end: 274,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 274,
            end: 275,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 275,
            end: 276,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 276,
            end: 277,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 277,
            end: 278,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 278,
            end: 279,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 279,
            end: 280,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 280,
            end: 281,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 281,
            end: 282,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 282,
            end: 283,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 283,
            end: 284,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 284,
            end: 285,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 285,
            end: 286,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 286,
            end: 287,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 287,
            end: 288,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 288,
            end: 289,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 289,
            end: 290,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 290,
            end: 291,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 291,
            end: 292,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 292,
            end: 293,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 293,
            end: 294,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 294,
            end: 295,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 295,
            end: 296,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 296,
            end: 297,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 297,
            end: 298,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 298,
            end: 299,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 299,
            end: 300,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 300,
            end: 301,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 301,
            end: 302,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 302,
            end: 303,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 303,
            end: 304,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 304,
            end: 305,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 305,
            end: 306,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 306,
            end: 307,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 307,
            end: 308,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 308,
            end: 309,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 309,
            end: 310,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 310,
            end: 311,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 311,
            end: 312,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 312,
            end: 313,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 313,
            end: 314,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 314,
            end: 315,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 315,
            end: 316,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 316,
            end: 317,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 317,
            end: 318,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 318,
            end: 319,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 319,
            end: 320,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 320,
            end: 321,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 321,
            end: 322,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 322,
            end: 323,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 323,
            end: 324,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 324,
            end: 325,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 325,
            end: 326,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 326,
            end: 327,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 327,
            end: 328,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 328,
            end: 329,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 329,
            end: 330,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 330,
            end: 331,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 331,
            end: 332,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 332,
            end: 333,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 333,
            end: 334,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 334,
            end: 335,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 335,
            end: 336,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 336,
            end: 337,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 337,
            end: 338,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 338,
            end: 339,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 339,
            end: 340,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 340,
            end: 341,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 341,
            end: 342,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 342,
            end: 343,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 343,
            end: 344,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 344,
            end: 345,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 345,
            end: 346,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 346,
            end: 347,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 347,
            end: 348,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 348,
            end: 349,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 349,
            end: 350,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 350,
            end: 351,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 351,
            end: 352,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 352,
            end: 353,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 353,
            end: 354,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 354,
            end: 355,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 355,
            end: 356,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 356,
            end: 357,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 357,
            end: 358,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 358,
            end: 359,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 359,
            end: 360,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 360,
            end: 361,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 361,
            end: 362,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 362,
            end: 363,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 363,
            end: 364,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 364,
            end: 365,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 365,
            end: 366,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 366,
            end: 367,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 367,
            end: 368,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 368,
            end: 369,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 369,
            end: 370,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 370,
            end: 371,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 371,
            end: 372,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 372,
            end: 373,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 373,
            end: 374,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 374,
            end: 375,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 375,
            end: 376,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 376,
            end: 377,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 377,
            end: 378,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 378,
            end: 379,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 379,
            end: 380,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 380,
            end: 381,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 381,
            end: 382,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 382,
            end: 383,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 383,
            end: 384,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 384,
            end: 385,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 385,
            end: 386,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 386,
            end: 387,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 387,
            end: 388,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 388,
            end: 389,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 389,
            end: 390,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 390,
            end: 391,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 391,
            end: 392,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 392,
            end: 393,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 393,
            end: 394,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 394,
            end: 395,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 395,
            end: 396,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 396,
            end: 397,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 397,
            end: 398,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 398,
            end: 399,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 399,
            end: 400,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 400,
            end: 401,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 401,
            end: 402,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 402,
            end: 403,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 403,
            end: 404,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 404,
            end: 405,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 405,
            end: 406,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 406,
            end: 407,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 407,
            end: 408,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 408,
            end: 409,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 409,
            end: 410,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 410,
            end: 411,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 411,
            end: 412,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 412,
            end: 413,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 413,
            end: 414,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 414,
            end: 415,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 415,
            end: 416,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 416,
            end: 417,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 417,
            end: 418,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 418,
            end: 419,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 419,
            end: 420,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 420,
            end: 421,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 421,
            end: 422,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 422,
            end: 423,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 423,
            end: 424,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 424,
            end: 425,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 425,
            end: 426,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 426,
            end: 427,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 427,
            end: 428,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 428,
            end: 429,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 429,
            end: 430,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 430,
            end: 431,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 431,
            end: 432,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 432,
            end: 433,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 433,
            end: 434,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 434,
            end: 435,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 435,
            end: 436,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 436,
            end: 437,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 437,
            end: 438,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 438,
            end: 439,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 439,
            end: 440,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 440,
            end: 441,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 441,
            end: 442,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 442,
            end: 443,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 443,
            end: 444,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 444,
            end: 445,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 445,
            end: 446,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 446,
            end: 447,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 447,
            end: 448,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 448,
            end: 449,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 449,
            end: 450,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 450,
            end: 451,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 451,
            end: 452,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 452,
            end: 453,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 453,
            end: 454,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 454,
            end: 455,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 455,
            end: 456,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 456,
            end: 457,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 457,
            end: 458,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 458,
            end: 459,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 459,
            end: 460,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 460,
            end: 461,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 461,
            end: 462,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 462,
            end: 463,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 463,
            end: 464,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 464,
            end: 465,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 465,
            end: 466,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 466,
            end: 467,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 467,
            end: 468,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 468,
            end: 469,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 469,
            end: 470,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 470,
            end: 471,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 471,
            end: 472,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 472,
            end: 473,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 473,
            end: 474,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 474,
            end: 475,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 475,
            end: 476,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 476,
            end: 477,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 477,
            end: 478,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 478,
            end: 479,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 479,
            end: 480,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 480,
            end: 481,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 481,
            end: 482,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 482,
            end: 483,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 483,
            end: 484,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 484,
            end: 485,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 485,
            end: 486,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 486,
            end: 487,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 487,
            end: 488,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 488,
            end: 489,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 489,
            end: 490,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 490,
            end: 491,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 491,
            end: 492,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 492,
            end: 493,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 493,
            end: 494,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 494,
            end: 495,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 495,
            end: 496,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 496,
            end: 497,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 497,
            end: 498,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 498,
            end: 499,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 499,
            end: 500,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 500,
            end: 501,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 501,
            end: 502,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 502,
            end: 503,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 503,
            end: 504,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 504,
            end: 505,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 505,
            end: 506,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 506,
            end: 507,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 507,
            end: 508,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 508,
            end: 509,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 509,
            end: 510,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 510,
            end: 511,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 511,
            end: 512,
        },
    },
    Instruction {
        val: Unprefixed(
            33,
        ),
        opcode: LD {
            src: N16(
                128,
            ),
            dest: R16(
                HL,
            ),
        },
        span: Span {
            start: 512,
            end: 515,
        },
    },
    Instruction {
        val: Unprefixed(
            175,
        ),
        opcode: XOR(
            Register(
                A,
            ),
        ),
        span: Span {
            start: 515,
            end: 516,
        },
    },
    Instruction {
        val: Unprefixed(
            34,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: MEM_HLI,
        },
        span: Span {
            start: 516,
            end: 517,
        },
    },
    Instruction {
        val: Prefixed(
            203,
        ),
        opcode: SET(
            BitArg {
                bit: 1,
                register: E,
            },
        ),
        span: Span {
            start: 517,
            end: 518,
        },
    },
    Instruction {
        val: Unprefixed(
            108,
        ),
        opcode: LD {
            src: R8(
                H,
            ),
            dest: R8(
                L,
            ),
        },
        span: Span {
            start: 518,
            end: 519,
        },
    },
    Instruction {
        val: Unprefixed(
            40,
        ),
        opcode: JR {
            cc: Some(
                Z,
            ),
            e8: -5,
        },
        span: Span {
            start: 519,
            end: 521,
        },
    },
    Instruction {
        val: Unprefixed(
            201,
        ),
        opcode: RET(
            None,
        ),
        span: Span {
            start: 521,
            end: 522,
        },
    },
    Instruction {
        val: Unprefixed(
            42,
        ),
        opcode: LD {
            src: MEM_HLI,
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 522,
            end: 523,
        },
    },
    Instruction {
        val: Unprefixed(
            18,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: MEM_R16(
                DE,
            ),
        },
        span: Span {
            start: 523,
            end: 524,
        },
    },
    Instruction {
        val: Unprefixed(
            19,
        ),
        opcode: INC(
            R16(
                DE,
            ),
        ),
        span: Span {
            start: 524,
            end: 525,
        },
    },
    Instruction {
        val: Unprefixed(
            13,
        ),
        opcode: DEC(
            R8(
                C,
            ),
        ),
        span: Span {
            start: 525,
            end: 526,
        },
    },
    Instruction {
        val: Unprefixed(
            32,
        ),
        opcode: JR {
            cc: Some(
                NZ,
            ),
            e8: -6,
        },
        span: Span {
            start: 526,
            end: 528,
        },
    },
    Instruction {
        val: Unprefixed(
            201,
        ),
        opcode: RET(
            None,
        ),
        span: Span {
            start: 528,
            end: 529,
        },
    },
    Instruction {
        val: Unprefixed(
            229,
        ),
        opcode: PUSH(
            HL,
        ),
        span: Span {
            start: 529,
            end: 530,
        },
    },
    Instruction {
        val: Unprefixed(
            33,
        ),
        opcode: LD {
            src: N16(
                4095,
            ),
            dest: R16(
                HL,
            ),
        },
        span: Span {
            start: 530,
            end: 533,
        },
    },
    Instruction {
        val: Prefixed(
            203,
        ),
        opcode: SET(
            BitArg {
                bit: 1,
                register: E,
            },
        ),
        span: Span {
            start: 533,
            end: 534,
        },
    },
    Instruction {
        val: Unprefixed(
            134,
        ),
        opcode: ADD(
            Register(
                HL,
            ),
        ),
        span: Span {
            start: 534,
            end: 535,
        },
    },
    Instruction {
        val: Prefixed(
            203,
        ),
        opcode: SET(
            BitArg {
                bit: 1,
                register: E,
            },
        ),
        span: Span {
            start: 535,
            end: 536,
        },
    },
    Instruction {
        val: Unprefixed(
            70,
        ),
        opcode: LD {
            src: R8(
                HL,
            ),
            dest: R8(
                B,
            ),
        },
        span: Span {
            start: 536,
            end: 537,
        },
    },
    Instruction {
        val: Unprefixed(
            40,
        ),
        opcode: JR {
            cc: Some(
                Z,
            ),
            e8: -4,
        },
        span: Span {
            start: 537,
            end: 539,
        },
    },
    Instruction {
        val: Unprefixed(
            225,
        ),
        opcode: POP(
            HL,
        ),
        span: Span {
            start: 539,
            end: 540,
        },
    },
    Instruction {
        val: Unprefixed(
            201,
        ),
        opcode: RET(
            None,
        ),
        span: Span {
            start: 540,
            end: 541,
        },
    },
    Instruction {
        val: Unprefixed(
            17,
        ),
        opcode: LD {
            src: N16(
                255,
            ),
            dest: R16(
                DE,
            ),
        },
        span: Span {
            start: 541,
            end: 544,
        },
    },
    Instruction {
        val: Unprefixed(
            33,
        ),
        opcode: LD {
            src: N16(
                976,
            ),
            dest: R16(
                HL,
            ),
        },
        span: Span {
            start: 544,
            end: 547,
        },
    },
    Instruction {
        val: Unprefixed(
            14,
        ),
        opcode: LD {
            src: N8(
                15,
            ),
            dest: R8(
                C,
            ),
        },
        span: Span {
            start: 547,
            end: 549,
        },
    },
    Instruction {
        val: Unprefixed(
            62,
        ),
        opcode: LD {
            src: N8(
                48,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 549,
            end: 551,
        },
    },
    Instruction {
        val: Unprefixed(
            18,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: MEM_R16(
                DE,
            ),
        },
        span: Span {
            start: 551,
            end: 552,
        },
    },
    Instruction {
        val: Unprefixed(
            62,
        ),
        opcode: LD {
            src: N8(
                32,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 552,
            end: 554,
        },
    },
    Instruction {
        val: Unprefixed(
            18,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: MEM_R16(
                DE,
            ),
        },
        span: Span {
            start: 554,
            end: 555,
        },
    },
    Instruction {
        val: Unprefixed(
            26,
        ),
        opcode: LD {
            src: MEM_R16(
                DE,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 555,
            end: 556,
        },
    },
    Instruction {
        val: Unprefixed(
            47,
        ),
        opcode: CPL,
        span: Span {
            start: 556,
            end: 557,
        },
    },
    Instruction {
        val: Unprefixed(
            161,
        ),
        opcode: AND(
            Register(
                C,
            ),
        ),
        span: Span {
            start: 557,
            end: 558,
        },
    },
    Instruction {
        val: Prefixed(
            203,
        ),
        opcode: SET(
            BitArg {
                bit: 1,
                register: E,
            },
        ),
        span: Span {
            start: 558,
            end: 559,
        },
    },
    Instruction {
        val: Unprefixed(
            55,
        ),
        opcode: SCF,
        span: Span {
            start: 559,
            end: 560,
        },
    },
    Instruction {
        val: Unprefixed(
            71,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: R8(
                B,
            ),
        },
        span: Span {
            start: 560,
            end: 561,
        },
    },
    Instruction {
        val: Unprefixed(
            62,
        ),
        opcode: LD {
            src: N8(
                16,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 561,
            end: 563,
        },
    },
    Instruction {
        val: Unprefixed(
            18,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: MEM_R16(
                DE,
            ),
        },
        span: Span {
            start: 563,
            end: 564,
        },
    },
    Instruction {
        val: Unprefixed(
            26,
        ),
        opcode: LD {
            src: MEM_R16(
                DE,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 564,
            end: 565,
        },
    },
    Instruction {
        val: Unprefixed(
            47,
        ),
        opcode: CPL,
        span: Span {
            start: 565,
            end: 566,
        },
    },
    Instruction {
        val: Unprefixed(
            161,
        ),
        opcode: AND(
            Register(
                C,
            ),
        ),
        span: Span {
            start: 566,
            end: 567,
        },
    },
    Instruction {
        val: Unprefixed(
            176,
        ),
        opcode: OR(
            Register(
                B,
            ),
        ),
        span: Span {
            start: 567,
            end: 568,
        },
    },
    Instruction {
        val: Unprefixed(
            79,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: R8(
                C,
            ),
        },
        span: Span {
            start: 568,
            end: 569,
        },
    },
    Instruction {
        val: Unprefixed(
            126,
        ),
        opcode: LD {
            src: R8(
                HL,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 569,
            end: 570,
        },
    },
    Instruction {
        val: Unprefixed(
            169,
        ),
        opcode: XOR(
            Register(
                C,
            ),
        ),
        span: Span {
            start: 570,
            end: 571,
        },
    },
    Instruction {
        val: Unprefixed(
            230,
        ),
        opcode: AND(
            Constant(
                240,
            ),
        ),
        span: Span {
            start: 571,
            end: 573,
        },
    },
    Instruction {
        val: Unprefixed(
            71,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: R8(
                B,
            ),
        },
        span: Span {
            start: 573,
            end: 574,
        },
    },
    Instruction {
        val: Unprefixed(
            42,
        ),
        opcode: LD {
            src: MEM_HLI,
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 574,
            end: 575,
        },
    },
    Instruction {
        val: Unprefixed(
            169,
        ),
        opcode: XOR(
            Register(
                C,
            ),
        ),
        span: Span {
            start: 575,
            end: 576,
        },
    },
    Instruction {
        val: Unprefixed(
            161,
        ),
        opcode: AND(
            Register(
                C,
            ),
        ),
        span: Span {
            start: 576,
            end: 577,
        },
    },
    Instruction {
        val: Unprefixed(
            176,
        ),
        opcode: OR(
            Register(
                B,
            ),
        ),
        span: Span {
            start: 577,
            end: 578,
        },
    },
    Instruction {
        val: Unprefixed(
            50,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: MEM_HLD,
        },
        span: Span {
            start: 578,
            end: 579,
        },
    },
    Instruction {
        val: Unprefixed(
            71,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: R8(
                B,
            ),
        },
        span: Span {
            start: 579,
            end: 580,
        },
    },
    Instruction {
        val: Unprefixed(
            121,
        ),
        opcode: LD {
            src: R8(
                C,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 580,
            end: 581,
        },
    },
    Instruction {
        val: Unprefixed(
            119,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: R8(
                HL,
            ),
        },
        span: Span {
            start: 581,
            end: 582,
        },
    },
    Instruction {
        val: Unprefixed(
            62,
        ),
        opcode: LD {
            src: N8(
                48,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 582,
            end: 584,
        },
    },
    Instruction {
        val: Unprefixed(
            18,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: MEM_R16(
                DE,
            ),
        },
        span: Span {
            start: 584,
            end: 585,
        },
    },
    Instruction {
        val: Unprefixed(
            201,
        ),
        opcode: RET(
            None,
        ),
        span: Span {
            start: 585,
            end: 586,
        },
    },
    Instruction {
        val: Unprefixed(
            62,
        ),
        opcode: LD {
            src: N8(
                128,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 586,
            end: 588,
        },
    },
    Instruction {
        val: Unprefixed(
            224,
        ),
        opcode: LDH {
            src: MEM_N16(
                65384,
            ),
            dest: A,
        },
        span: Span {
            start: 588,
            end: 590,
        },
    },
    Instruction {
        val: Unprefixed(
            224,
        ),
        opcode: LDH {
            src: MEM_N16(
                65386,
            ),
            dest: A,
        },
        span: Span {
            start: 590,
            end: 592,
        },
    },
    Instruction {
        val: Unprefixed(
            14,
        ),
        opcode: LD {
            src: N8(
                107,
            ),
            dest: R8(
                C,
            ),
        },
        span: Span {
            start: 592,
            end: 594,
        },
    },
    Instruction {
        val: Unprefixed(
            42,
        ),
        opcode: LD {
            src: MEM_HLI,
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 594,
            end: 595,
        },
    },
    Instruction {
        val: Unprefixed(
            226,
        ),
        opcode: LDH {
            src: MEM_C,
            dest: A,
        },
        span: Span {
            start: 595,
            end: 597,
        },
    },
    Instruction {
        val: Unprefixed(
            32,
        ),
        opcode: JR {
            cc: Some(
                NZ,
            ),
            e8: -5,
        },
        span: Span {
            start: 597,
            end: 599,
        },
    },
    Instruction {
        val: Unprefixed(
            74,
        ),
        opcode: LD {
            src: R8(
                D,
            ),
            dest: R8(
                C,
            ),
        },
        span: Span {
            start: 599,
            end: 600,
        },
    },
    Instruction {
        val: Unprefixed(
            9,
        ),
        opcode: ADD_HL(
            BC,
        ),
        span: Span {
            start: 600,
            end: 601,
        },
    },
    Instruction {
        val: Unprefixed(
            67,
        ),
        opcode: LD {
            src: R8(
                E,
            ),
            dest: R8(
                B,
            ),
        },
        span: Span {
            start: 601,
            end: 602,
        },
    },
    Instruction {
        val: Unprefixed(
            14,
        ),
        opcode: LD {
            src: N8(
                105,
            ),
            dest: R8(
                C,
            ),
        },
        span: Span {
            start: 602,
            end: 604,
        },
    },
    Instruction {
        val: Unprefixed(
            42,
        ),
        opcode: LD {
            src: MEM_HLI,
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 604,
            end: 605,
        },
    },
    Instruction {
        val: Unprefixed(
            226,
        ),
        opcode: LDH {
            src: MEM_C,
            dest: A,
        },
        span: Span {
            start: 605,
            end: 607,
        },
    },
    Instruction {
        val: Unprefixed(
            32,
        ),
        opcode: JR {
            cc: Some(
                NZ,
            ),
            e8: -5,
        },
        span: Span {
            start: 607,
            end: 609,
        },
    },
    Instruction {
        val: Unprefixed(
            201,
        ),
        opcode: RET(
            None,
        ),
        span: Span {
            start: 609,
            end: 610,
        },
    },
    Instruction {
        val: Unprefixed(
            197,
        ),
        opcode: PUSH(
            BC,
        ),
        span: Span {
            start: 610,
            end: 611,
        },
    },
    Instruction {
        val: Unprefixed(
            213,
        ),
        opcode: PUSH(
            DE,
        ),
        span: Span {
            start: 611,
            end: 612,
        },
    },
    Instruction {
        val: Unprefixed(
            229,
        ),
        opcode: PUSH(
            HL,
        ),
        span: Span {
            start: 612,
            end: 613,
        },
    },
    Instruction {
        val: Unprefixed(
            33,
        ),
        opcode: LD {
            src: N16(
                216,
            ),
            dest: R16(
                HL,
            ),
        },
        span: Span {
            start: 613,
            end: 616,
        },
    },
    Instruction {
        val: Unprefixed(
            6,
        ),
        opcode: LD {
            src: N8(
                1,
            ),
            dest: R8(
                B,
            ),
        },
        span: Span {
            start: 616,
            end: 618,
        },
    },
    Instruction {
        val: Unprefixed(
            22,
        ),
        opcode: LD {
            src: N8(
                63,
            ),
            dest: R8(
                D,
            ),
        },
        span: Span {
            start: 618,
            end: 620,
        },
    },
    Instruction {
        val: Unprefixed(
            30,
        ),
        opcode: LD {
            src: N8(
                64,
            ),
            dest: R8(
                E,
            ),
        },
        span: Span {
            start: 620,
            end: 622,
        },
    },
    Instruction {
        val: Unprefixed(
            205,
        ),
        opcode: CALL {
            cc: None,
            n16: 18946,
        },
        span: Span {
            start: 622,
            end: 625,
        },
    },
    Instruction {
        val: Unprefixed(
            225,
        ),
        opcode: POP(
            HL,
        ),
        span: Span {
            start: 625,
            end: 626,
        },
    },
    Instruction {
        val: Unprefixed(
            209,
        ),
        opcode: POP(
            DE,
        ),
        span: Span {
            start: 626,
            end: 627,
        },
    },
    Instruction {
        val: Unprefixed(
            193,
        ),
        opcode: POP(
            BC,
        ),
        span: Span {
            start: 627,
            end: 628,
        },
    },
    Instruction {
        val: Unprefixed(
            201,
        ),
        opcode: RET(
            None,
        ),
        span: Span {
            start: 628,
            end: 629,
        },
    },
    Instruction {
        val: Unprefixed(
            62,
        ),
        opcode: LD {
            src: N8(
                128,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 629,
            end: 631,
        },
    },
    Instruction {
        val: Unprefixed(
            224,
        ),
        opcode: LDH {
            src: MEM_N16(
                65318,
            ),
            dest: A,
        },
        span: Span {
            start: 631,
            end: 633,
        },
    },
    Instruction {
        val: Unprefixed(
            224,
        ),
        opcode: LDH {
            src: MEM_N16(
                65297,
            ),
            dest: A,
        },
        span: Span {
            start: 633,
            end: 635,
        },
    },
    Instruction {
        val: Unprefixed(
            62,
        ),
        opcode: LD {
            src: N8(
                243,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 635,
            end: 637,
        },
    },
    Instruction {
        val: Unprefixed(
            224,
        ),
        opcode: LDH {
            src: MEM_N16(
                65298,
            ),
            dest: A,
        },
        span: Span {
            start: 637,
            end: 639,
        },
    },
    Instruction {
        val: Unprefixed(
            224,
        ),
        opcode: LDH {
            src: MEM_N16(
                65317,
            ),
            dest: A,
        },
        span: Span {
            start: 639,
            end: 641,
        },
    },
    Instruction {
        val: Unprefixed(
            62,
        ),
        opcode: LD {
            src: N8(
                119,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 641,
            end: 643,
        },
    },
    Instruction {
        val: Unprefixed(
            224,
        ),
        opcode: LDH {
            src: MEM_N16(
                65316,
            ),
            dest: A,
        },
        span: Span {
            start: 643,
            end: 645,
        },
    },
    Instruction {
        val: Unprefixed(
            33,
        ),
        opcode: LD {
            src: N16(
                12543,
            ),
            dest: R16(
                HL,
            ),
        },
        span: Span {
            start: 645,
            end: 648,
        },
    },
    Instruction {
        val: Unprefixed(
            175,
        ),
        opcode: XOR(
            Register(
                A,
            ),
        ),
        span: Span {
            start: 648,
            end: 649,
        },
    },
    Instruction {
        val: Unprefixed(
            14,
        ),
        opcode: LD {
            src: N8(
                16,
            ),
            dest: R8(
                C,
            ),
        },
        span: Span {
            start: 649,
            end: 651,
        },
    },
    Instruction {
        val: Unprefixed(
            34,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: MEM_HLI,
        },
        span: Span {
            start: 651,
            end: 652,
        },
    },
    Instruction {
        val: Unprefixed(
            47,
        ),
        opcode: CPL,
        span: Span {
            start: 652,
            end: 653,
        },
    },
    Instruction {
        val: Unprefixed(
            13,
        ),
        opcode: DEC(
            R8(
                C,
            ),
        ),
        span: Span {
            start: 653,
            end: 654,
        },
    },
    Instruction {
        val: Unprefixed(
            32,
        ),
        opcode: JR {
            cc: Some(
                NZ,
            ),
            e8: -5,
        },
        span: Span {
            start: 654,
            end: 656,
        },
    },
    Instruction {
        val: Unprefixed(
            201,
        ),
        opcode: RET(
            None,
        ),
        span: Span {
            start: 656,
            end: 657,
        },
    },
    Instruction {
        val: Unprefixed(
            205,
        ),
        opcode: CALL {
            cc: None,
            n16: 4354,
        },
        span: Span {
            start: 657,
            end: 660,
        },
    },
    Instruction {
        val: Unprefixed(
            205,
        ),
        opcode: CALL {
            cc: None,
            n16: 25090,
        },
        span: Span {
            start: 660,
            end: 663,
        },
    },
    Instruction {
        val: Unprefixed(
            121,
        ),
        opcode: LD {
            src: R8(
                C,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 663,
            end: 664,
        },
    },
    Instruction {
        val: Unprefixed(
            254,
        ),
        opcode: CP(
            Constant(
                56,
            ),
        ),
        span: Span {
            start: 664,
            end: 666,
        },
    },
    Instruction {
        val: Unprefixed(
            32,
        ),
        opcode: JR {
            cc: Some(
                NZ,
            ),
            e8: 20,
        },
        span: Span {
            start: 666,
            end: 668,
        },
    },
    Instruction {
        val: Unprefixed(
            229,
        ),
        opcode: PUSH(
            HL,
        ),
        span: Span {
            start: 668,
            end: 669,
        },
    },
    Instruction {
        val: Unprefixed(
            175,
        ),
        opcode: XOR(
            Register(
                A,
            ),
        ),
        span: Span {
            start: 669,
            end: 670,
        },
    },
    Instruction {
        val: Unprefixed(
            224,
        ),
        opcode: LDH {
            src: MEM_N16(
                65359,
            ),
            dest: A,
        },
        span: Span {
            start: 670,
            end: 672,
        },
    },
    Instruction {
        val: Unprefixed(
            33,
        ),
        opcode: LD {
            src: N16(
                42905,
            ),
            dest: R16(
                HL,
            ),
        },
        span: Span {
            start: 672,
            end: 675,
        },
    },
    Instruction {
        val: Unprefixed(
            62,
        ),
        opcode: LD {
            src: N8(
                56,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 675,
            end: 677,
        },
    },
    Instruction {
        val: Unprefixed(
            34,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: MEM_HLI,
        },
        span: Span {
            start: 677,
            end: 678,
        },
    },
    Instruction {
        val: Unprefixed(
            60,
        ),
        opcode: INC(
            R8(
                A,
            ),
        ),
        span: Span {
            start: 678,
            end: 679,
        },
    },
    Instruction {
        val: Unprefixed(
            254,
        ),
        opcode: CP(
            Constant(
                63,
            ),
        ),
        span: Span {
            start: 679,
            end: 681,
        },
    },
    Instruction {
        val: Unprefixed(
            32,
        ),
        opcode: JR {
            cc: Some(
                NZ,
            ),
            e8: -6,
        },
        span: Span {
            start: 681,
            end: 683,
        },
    },
    Instruction {
        val: Unprefixed(
            62,
        ),
        opcode: LD {
            src: N8(
                1,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 683,
            end: 685,
        },
    },
    Instruction {
        val: Unprefixed(
            224,
        ),
        opcode: LDH {
            src: MEM_N16(
                65359,
            ),
            dest: A,
        },
        span: Span {
            start: 685,
            end: 687,
        },
    },
    Instruction {
        val: Unprefixed(
            225,
        ),
        opcode: POP(
            HL,
        ),
        span: Span {
            start: 687,
            end: 688,
        },
    },
    Instruction {
        val: Unprefixed(
            197,
        ),
        opcode: PUSH(
            BC,
        ),
        span: Span {
            start: 688,
            end: 689,
        },
    },
    Instruction {
        val: Unprefixed(
            229,
        ),
        opcode: PUSH(
            HL,
        ),
        span: Span {
            start: 689,
            end: 690,
        },
    },
    Instruction {
        val: Unprefixed(
            33,
        ),
        opcode: LD {
            src: N16(
                17153,
            ),
            dest: R16(
                HL,
            ),
        },
        span: Span {
            start: 690,
            end: 693,
        },
    },
    Instruction {
        val: Prefixed(
            203,
        ),
        opcode: SET(
            BitArg {
                bit: 1,
                register: E,
            },
        ),
        span: Span {
            start: 693,
            end: 694,
        },
    },
    Instruction {
        val: Unprefixed(
            126,
        ),
        opcode: LD {
            src: R8(
                HL,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 694,
            end: 695,
        },
    },
    Instruction {
        val: Unprefixed(
            204,
        ),
        opcode: CALL {
            cc: Some(
                Z,
            ),
            n16: 35077,
        },
        span: Span {
            start: 695,
            end: 698,
        },
    },
    Instruction {
        val: Unprefixed(
            225,
        ),
        opcode: POP(
            HL,
        ),
        span: Span {
            start: 698,
            end: 699,
        },
    },
    Instruction {
        val: Unprefixed(
            193,
        ),
        opcode: POP(
            BC,
        ),
        span: Span {
            start: 699,
            end: 700,
        },
    },
    Instruction {
        val: Unprefixed(
            205,
        ),
        opcode: CALL {
            cc: None,
            n16: 4354,
        },
        span: Span {
            start: 700,
            end: 703,
        },
    },
    Instruction {
        val: Unprefixed(
            121,
        ),
        opcode: LD {
            src: R8(
                C,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 703,
            end: 704,
        },
    },
    Instruction {
        val: Unprefixed(
            214,
        ),
        opcode: SUB(
            Constant(
                48,
            ),
        ),
        span: Span {
            start: 704,
            end: 706,
        },
    },
    Instruction {
        val: Unprefixed(
            210,
        ),
        opcode: JP {
            cc: Some(
                NC,
            ),
            n16: 1539,
        },
        span: Span {
            start: 706,
            end: 709,
        },
    },
    Instruction {
        val: Unprefixed(
            121,
        ),
        opcode: LD {
            src: R8(
                C,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 709,
            end: 710,
        },
    },
    Instruction {
        val: Unprefixed(
            254,
        ),
        opcode: CP(
            Constant(
                1,
            ),
        ),
        span: Span {
            start: 710,
            end: 712,
        },
    },
    Instruction {
        val: Unprefixed(
            202,
        ),
        opcode: JP {
            cc: Some(
                Z,
            ),
            n16: 1539,
        },
        span: Span {
            start: 712,
            end: 715,
        },
    },
    Instruction {
        val: Unprefixed(
            125,
        ),
        opcode: LD {
            src: R8(
                L,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 715,
            end: 716,
        },
    },
    Instruction {
        val: Unprefixed(
            254,
        ),
        opcode: CP(
            Constant(
                209,
            ),
        ),
        span: Span {
            start: 716,
            end: 718,
        },
    },
    Instruction {
        val: Unprefixed(
            40,
        ),
        opcode: JR {
            cc: Some(
                Z,
            ),
            e8: 33,
        },
        span: Span {
            start: 718,
            end: 720,
        },
    },
    Instruction {
        val: Unprefixed(
            197,
        ),
        opcode: PUSH(
            BC,
        ),
        span: Span {
            start: 720,
            end: 721,
        },
    },
    Instruction {
        val: Unprefixed(
            6,
        ),
        opcode: LD {
            src: N8(
                3,
            ),
            dest: R8(
                B,
            ),
        },
        span: Span {
            start: 721,
            end: 723,
        },
    },
    Instruction {
        val: Unprefixed(
            14,
        ),
        opcode: LD {
            src: N8(
                1,
            ),
            dest: R8(
                C,
            ),
        },
        span: Span {
            start: 723,
            end: 725,
        },
    },
    Instruction {
        val: Unprefixed(
            22,
        ),
        opcode: LD {
            src: N8(
                3,
            ),
            dest: R8(
                D,
            ),
        },
        span: Span {
            start: 725,
            end: 727,
        },
    },
    Instruction {
        val: Unprefixed(
            126,
        ),
        opcode: LD {
            src: R8(
                HL,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 727,
            end: 728,
        },
    },
    Instruction {
        val: Unprefixed(
            230,
        ),
        opcode: AND(
            Constant(
                248,
            ),
        ),
        span: Span {
            start: 728,
            end: 730,
        },
    },
    Instruction {
        val: Unprefixed(
            177,
        ),
        opcode: OR(
            Register(
                C,
            ),
        ),
        span: Span {
            start: 730,
            end: 731,
        },
    },
    Instruction {
        val: Unprefixed(
            34,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: MEM_HLI,
        },
        span: Span {
            start: 731,
            end: 732,
        },
    },
    Instruction {
        val: Unprefixed(
            21,
        ),
        opcode: DEC(
            R8(
                D,
            ),
        ),
        span: Span {
            start: 732,
            end: 733,
        },
    },
    Instruction {
        val: Unprefixed(
            32,
        ),
        opcode: JR {
            cc: Some(
                NZ,
            ),
            e8: -8,
        },
        span: Span {
            start: 733,
            end: 735,
        },
    },
    Instruction {
        val: Unprefixed(
            12,
        ),
        opcode: INC(
            R8(
                C,
            ),
        ),
        span: Span {
            start: 735,
            end: 736,
        },
    },
    Instruction {
        val: Unprefixed(
            121,
        ),
        opcode: LD {
            src: R8(
                C,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 736,
            end: 737,
        },
    },
    Instruction {
        val: Unprefixed(
            254,
        ),
        opcode: CP(
            Constant(
                6,
            ),
        ),
        span: Span {
            start: 737,
            end: 739,
        },
    },
    Instruction {
        val: Unprefixed(
            32,
        ),
        opcode: JR {
            cc: Some(
                NZ,
            ),
            e8: -16,
        },
        span: Span {
            start: 739,
            end: 741,
        },
    },
    Instruction {
        val: Unprefixed(
            17,
        ),
        opcode: LD {
            src: N16(
                4352,
            ),
            dest: R16(
                DE,
            ),
        },
        span: Span {
            start: 741,
            end: 744,
        },
    },
    Instruction {
        val: Unprefixed(
            25,
        ),
        opcode: ADD_HL(
            DE,
        ),
        span: Span {
            start: 744,
            end: 745,
        },
    },
    Instruction {
        val: Unprefixed(
            5,
        ),
        opcode: DEC(
            R8(
                B,
            ),
        ),
        span: Span {
            start: 745,
            end: 746,
        },
    },
    Instruction {
        val: Unprefixed(
            32,
        ),
        opcode: JR {
            cc: Some(
                NZ,
            ),
            e8: -25,
        },
        span: Span {
            start: 746,
            end: 748,
        },
    },
    Instruction {
        val: Unprefixed(
            17,
        ),
        opcode: LD {
            src: N16(
                41471,
            ),
            dest: R16(
                DE,
            ),
        },
        span: Span {
            start: 748,
            end: 751,
        },
    },
    Instruction {
        val: Unprefixed(
            25,
        ),
        opcode: ADD_HL(
            DE,
        ),
        span: Span {
            start: 751,
            end: 752,
        },
    },
    Instruction {
        val: Unprefixed(
            193,
        ),
        opcode: POP(
            BC,
        ),
        span: Span {
            start: 752,
            end: 753,
        },
    },
    Instruction {
        val: Unprefixed(
            4,
        ),
        opcode: INC(
            R8(
                B,
            ),
        ),
        span: Span {
            start: 753,
            end: 754,
        },
    },
    Instruction {
        val: Unprefixed(
            120,
        ),
        opcode: LD {
            src: R8(
                B,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 754,
            end: 755,
        },
    },
    Instruction {
        val: Unprefixed(
            30,
        ),
        opcode: LD {
            src: N8(
                131,
            ),
            dest: R8(
                E,
            ),
        },
        span: Span {
            start: 755,
            end: 757,
        },
    },
    Instruction {
        val: Unprefixed(
            254,
        ),
        opcode: CP(
            Constant(
                98,
            ),
        ),
        span: Span {
            start: 757,
            end: 759,
        },
    },
    Instruction {
        val: Unprefixed(
            40,
        ),
        opcode: JR {
            cc: Some(
                Z,
            ),
            e8: 6,
        },
        span: Span {
            start: 759,
            end: 761,
        },
    },
    Instruction {
        val: Unprefixed(
            30,
        ),
        opcode: LD {
            src: N8(
                193,
            ),
            dest: R8(
                E,
            ),
        },
        span: Span {
            start: 761,
            end: 763,
        },
    },
    Instruction {
        val: Unprefixed(
            254,
        ),
        opcode: CP(
            Constant(
                100,
            ),
        ),
        span: Span {
            start: 763,
            end: 765,
        },
    },
    Instruction {
        val: Unprefixed(
            32,
        ),
        opcode: JR {
            cc: Some(
                NZ,
            ),
            e8: 7,
        },
        span: Span {
            start: 765,
            end: 767,
        },
    },
    Instruction {
        val: Unprefixed(
            123,
        ),
        opcode: LD {
            src: R8(
                E,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 767,
            end: 768,
        },
    },
    Instruction {
        val: Unprefixed(
            224,
        ),
        opcode: LDH {
            src: MEM_N16(
                65299,
            ),
            dest: A,
        },
        span: Span {
            start: 768,
            end: 770,
        },
    },
    Instruction {
        val: Unprefixed(
            62,
        ),
        opcode: LD {
            src: N8(
                135,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 770,
            end: 772,
        },
    },
    Instruction {
        val: Unprefixed(
            224,
        ),
        opcode: LDH {
            src: MEM_N16(
                65300,
            ),
            dest: A,
        },
        span: Span {
            start: 772,
            end: 774,
        },
    },
    Instruction {
        val: Unprefixed(
            250,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: N16(
                720,
            ),
        },
        span: Span {
            start: 774,
            end: 777,
        },
    },
    Instruction {
        val: Unprefixed(
            254,
        ),
        opcode: CP(
            Constant(
                0,
            ),
        ),
        span: Span {
            start: 777,
            end: 779,
        },
    },
    Instruction {
        val: Unprefixed(
            40,
        ),
        opcode: JR {
            cc: Some(
                Z,
            ),
            e8: 10,
        },
        span: Span {
            start: 779,
            end: 781,
        },
    },
    Instruction {
        val: Unprefixed(
            61,
        ),
        opcode: DEC(
            R8(
                A,
            ),
        ),
        span: Span {
            start: 781,
            end: 782,
        },
    },
    Instruction {
        val: Unprefixed(
            234,
        ),
        opcode: LD {
            src: N16(
                720,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 782,
            end: 785,
        },
    },
    Instruction {
        val: Unprefixed(
            121,
        ),
        opcode: LD {
            src: R8(
                C,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 785,
            end: 786,
        },
    },
    Instruction {
        val: Unprefixed(
            254,
        ),
        opcode: CP(
            Constant(
                1,
            ),
        ),
        span: Span {
            start: 786,
            end: 788,
        },
    },
    Instruction {
        val: Unprefixed(
            202,
        ),
        opcode: JP {
            cc: Some(
                Z,
            ),
            n16: 37122,
        },
        span: Span {
            start: 788,
            end: 791,
        },
    },
    Instruction {
        val: Unprefixed(
            13,
        ),
        opcode: DEC(
            R8(
                C,
            ),
        ),
        span: Span {
            start: 791,
            end: 792,
        },
    },
    Instruction {
        val: Unprefixed(
            194,
        ),
        opcode: JP {
            cc: Some(
                NZ,
            ),
            n16: 37122,
        },
        span: Span {
            start: 792,
            end: 795,
        },
    },
    Instruction {
        val: Unprefixed(
            201,
        ),
        opcode: RET(
            None,
        ),
        span: Span {
            start: 795,
            end: 796,
        },
    },
    Instruction {
        val: Unprefixed(
            14,
        ),
        opcode: LD {
            src: N8(
                38,
            ),
            dest: R8(
                C,
            ),
        },
        span: Span {
            start: 796,
            end: 798,
        },
    },
    Instruction {
        val: Unprefixed(
            205,
        ),
        opcode: CALL {
            cc: None,
            n16: 18947,
        },
        span: Span {
            start: 798,
            end: 801,
        },
    },
    Instruction {
        val: Unprefixed(
            205,
        ),
        opcode: CALL {
            cc: None,
            n16: 4354,
        },
        span: Span {
            start: 801,
            end: 804,
        },
    },
    Instruction {
        val: Unprefixed(
            205,
        ),
        opcode: CALL {
            cc: None,
            n16: 25090,
        },
        span: Span {
            start: 804,
            end: 807,
        },
    },
    Instruction {
        val: Unprefixed(
            13,
        ),
        opcode: DEC(
            R8(
                C,
            ),
        ),
        span: Span {
            start: 807,
            end: 808,
        },
    },
    Instruction {
        val: Unprefixed(
            32,
        ),
        opcode: JR {
            cc: Some(
                NZ,
            ),
            e8: -12,
        },
        span: Span {
            start: 808,
            end: 810,
        },
    },
    Instruction {
        val: Unprefixed(
            205,
        ),
        opcode: CALL {
            cc: None,
            n16: 4354,
        },
        span: Span {
            start: 810,
            end: 813,
        },
    },
    Instruction {
        val: Unprefixed(
            62,
        ),
        opcode: LD {
            src: N8(
                1,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 813,
            end: 815,
        },
    },
    Instruction {
        val: Unprefixed(
            224,
        ),
        opcode: LDH {
            src: MEM_N16(
                65359,
            ),
            dest: A,
        },
        span: Span {
            start: 815,
            end: 817,
        },
    },
    Instruction {
        val: Unprefixed(
            205,
        ),
        opcode: CALL {
            cc: None,
            n16: 15875,
        },
        span: Span {
            start: 817,
            end: 820,
        },
    },
    Instruction {
        val: Unprefixed(
            205,
        ),
        opcode: CALL {
            cc: None,
            n16: 16643,
        },
        span: Span {
            start: 820,
            end: 823,
        },
    },
    Instruction {
        val: Unprefixed(
            175,
        ),
        opcode: XOR(
            Register(
                A,
            ),
        ),
        span: Span {
            start: 823,
            end: 824,
        },
    },
    Instruction {
        val: Unprefixed(
            224,
        ),
        opcode: LDH {
            src: MEM_N16(
                65359,
            ),
            dest: A,
        },
        span: Span {
            start: 824,
            end: 826,
        },
    },
    Instruction {
        val: Unprefixed(
            205,
        ),
        opcode: CALL {
            cc: None,
            n16: 15875,
        },
        span: Span {
            start: 826,
            end: 829,
        },
    },
    Instruction {
        val: Unprefixed(
            201,
        ),
        opcode: RET(
            None,
        ),
        span: Span {
            start: 829,
            end: 830,
        },
    },
    Instruction {
        val: Unprefixed(
            33,
        ),
        opcode: LD {
            src: N16(
                2048,
            ),
            dest: R16(
                HL,
            ),
        },
        span: Span {
            start: 830,
            end: 833,
        },
    },
    Instruction {
        val: Unprefixed(
            17,
        ),
        opcode: LD {
            src: N16(
                20991,
            ),
            dest: R16(
                DE,
            ),
        },
        span: Span {
            start: 833,
            end: 836,
        },
    },
    Instruction {
        val: Unprefixed(
            14,
        ),
        opcode: LD {
            src: N8(
                5,
            ),
            dest: R8(
                C,
            ),
        },
        span: Span {
            start: 836,
            end: 838,
        },
    },
    Instruction {
        val: Unprefixed(
            205,
        ),
        opcode: CALL {
            cc: None,
            n16: 2562,
        },
        span: Span {
            start: 838,
            end: 841,
        },
    },
    Instruction {
        val: Unprefixed(
            201,
        ),
        opcode: RET(
            None,
        ),
        span: Span {
            start: 841,
            end: 842,
        },
    },
    Instruction {
        val: Unprefixed(
            197,
        ),
        opcode: PUSH(
            BC,
        ),
        span: Span {
            start: 842,
            end: 843,
        },
    },
    Instruction {
        val: Unprefixed(
            213,
        ),
        opcode: PUSH(
            DE,
        ),
        span: Span {
            start: 843,
            end: 844,
        },
    },
    Instruction {
        val: Unprefixed(
            229,
        ),
        opcode: PUSH(
            HL,
        ),
        span: Span {
            start: 844,
            end: 845,
        },
    },
    Instruction {
        val: Unprefixed(
            33,
        ),
        opcode: LD {
            src: N16(
                16600,
            ),
            dest: R16(
                HL,
            ),
        },
        span: Span {
            start: 845,
            end: 848,
        },
    },
    Instruction {
        val: Unprefixed(
            14,
        ),
        opcode: LD {
            src: N8(
                32,
            ),
            dest: R8(
                C,
            ),
        },
        span: Span {
            start: 848,
            end: 850,
        },
    },
    Instruction {
        val: Unprefixed(
            126,
        ),
        opcode: LD {
            src: R8(
                HL,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 850,
            end: 851,
        },
    },
    Instruction {
        val: Unprefixed(
            230,
        ),
        opcode: AND(
            Constant(
                31,
            ),
        ),
        span: Span {
            start: 851,
            end: 853,
        },
    },
    Instruction {
        val: Unprefixed(
            254,
        ),
        opcode: CP(
            Constant(
                31,
            ),
        ),
        span: Span {
            start: 853,
            end: 855,
        },
    },
    Instruction {
        val: Unprefixed(
            40,
        ),
        opcode: JR {
            cc: Some(
                Z,
            ),
            e8: 1,
        },
        span: Span {
            start: 855,
            end: 857,
        },
    },
    Instruction {
        val: Unprefixed(
            60,
        ),
        opcode: INC(
            R8(
                A,
            ),
        ),
        span: Span {
            start: 857,
            end: 858,
        },
    },
    Instruction {
        val: Unprefixed(
            87,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: R8(
                D,
            ),
        },
        span: Span {
            start: 858,
            end: 859,
        },
    },
    Instruction {
        val: Unprefixed(
            42,
        ),
        opcode: LD {
            src: MEM_HLI,
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 859,
            end: 860,
        },
    },
    Instruction {
        val: Unprefixed(
            7,
        ),
        opcode: RLCA,
        span: Span {
            start: 860,
            end: 861,
        },
    },
    Instruction {
        val: Unprefixed(
            7,
        ),
        opcode: RLCA,
        span: Span {
            start: 861,
            end: 862,
        },
    },
    Instruction {
        val: Unprefixed(
            7,
        ),
        opcode: RLCA,
        span: Span {
            start: 862,
            end: 863,
        },
    },
    Instruction {
        val: Unprefixed(
            230,
        ),
        opcode: AND(
            Constant(
                7,
            ),
        ),
        span: Span {
            start: 863,
            end: 865,
        },
    },
    Instruction {
        val: Unprefixed(
            71,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: R8(
                B,
            ),
        },
        span: Span {
            start: 865,
            end: 866,
        },
    },
    Instruction {
        val: Unprefixed(
            58,
        ),
        opcode: LD {
            src: MEM_HLD,
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 866,
            end: 867,
        },
    },
    Instruction {
        val: Unprefixed(
            7,
        ),
        opcode: RLCA,
        span: Span {
            start: 867,
            end: 868,
        },
    },
    Instruction {
        val: Unprefixed(
            7,
        ),
        opcode: RLCA,
        span: Span {
            start: 868,
            end: 869,
        },
    },
    Instruction {
        val: Unprefixed(
            7,
        ),
        opcode: RLCA,
        span: Span {
            start: 869,
            end: 870,
        },
    },
    Instruction {
        val: Unprefixed(
            230,
        ),
        opcode: AND(
            Constant(
                24,
            ),
        ),
        span: Span {
            start: 870,
            end: 872,
        },
    },
    Instruction {
        val: Unprefixed(
            176,
        ),
        opcode: OR(
            Register(
                B,
            ),
        ),
        span: Span {
            start: 872,
            end: 873,
        },
    },
    Instruction {
        val: Unprefixed(
            254,
        ),
        opcode: CP(
            Constant(
                31,
            ),
        ),
        span: Span {
            start: 873,
            end: 875,
        },
    },
    Instruction {
        val: Unprefixed(
            40,
        ),
        opcode: JR {
            cc: Some(
                Z,
            ),
            e8: 1,
        },
        span: Span {
            start: 875,
            end: 877,
        },
    },
    Instruction {
        val: Unprefixed(
            60,
        ),
        opcode: INC(
            R8(
                A,
            ),
        ),
        span: Span {
            start: 877,
            end: 878,
        },
    },
    Instruction {
        val: Unprefixed(
            15,
        ),
        opcode: RRCA,
        span: Span {
            start: 878,
            end: 879,
        },
    },
    Instruction {
        val: Unprefixed(
            15,
        ),
        opcode: RRCA,
        span: Span {
            start: 879,
            end: 880,
        },
    },
    Instruction {
        val: Unprefixed(
            15,
        ),
        opcode: RRCA,
        span: Span {
            start: 880,
            end: 881,
        },
    },
    Instruction {
        val: Unprefixed(
            71,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: R8(
                B,
            ),
        },
        span: Span {
            start: 881,
            end: 882,
        },
    },
    Instruction {
        val: Unprefixed(
            230,
        ),
        opcode: AND(
            Constant(
                224,
            ),
        ),
        span: Span {
            start: 882,
            end: 884,
        },
    },
    Instruction {
        val: Unprefixed(
            178,
        ),
        opcode: OR(
            Register(
                D,
            ),
        ),
        span: Span {
            start: 884,
            end: 885,
        },
    },
    Instruction {
        val: Unprefixed(
            34,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: MEM_HLI,
        },
        span: Span {
            start: 885,
            end: 886,
        },
    },
    Instruction {
        val: Unprefixed(
            120,
        ),
        opcode: LD {
            src: R8(
                B,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 886,
            end: 887,
        },
    },
    Instruction {
        val: Unprefixed(
            230,
        ),
        opcode: AND(
            Constant(
                3,
            ),
        ),
        span: Span {
            start: 887,
            end: 889,
        },
    },
    Instruction {
        val: Unprefixed(
            95,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: R8(
                E,
            ),
        },
        span: Span {
            start: 889,
            end: 890,
        },
    },
    Instruction {
        val: Unprefixed(
            126,
        ),
        opcode: LD {
            src: R8(
                HL,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 890,
            end: 891,
        },
    },
    Instruction {
        val: Unprefixed(
            15,
        ),
        opcode: RRCA,
        span: Span {
            start: 891,
            end: 892,
        },
    },
    Instruction {
        val: Unprefixed(
            15,
        ),
        opcode: RRCA,
        span: Span {
            start: 892,
            end: 893,
        },
    },
    Instruction {
        val: Unprefixed(
            230,
        ),
        opcode: AND(
            Constant(
                31,
            ),
        ),
        span: Span {
            start: 893,
            end: 895,
        },
    },
    Instruction {
        val: Unprefixed(
            254,
        ),
        opcode: CP(
            Constant(
                31,
            ),
        ),
        span: Span {
            start: 895,
            end: 897,
        },
    },
    Instruction {
        val: Unprefixed(
            40,
        ),
        opcode: JR {
            cc: Some(
                Z,
            ),
            e8: 1,
        },
        span: Span {
            start: 897,
            end: 899,
        },
    },
    Instruction {
        val: Unprefixed(
            60,
        ),
        opcode: INC(
            R8(
                A,
            ),
        ),
        span: Span {
            start: 899,
            end: 900,
        },
    },
    Instruction {
        val: Unprefixed(
            7,
        ),
        opcode: RLCA,
        span: Span {
            start: 900,
            end: 901,
        },
    },
    Instruction {
        val: Unprefixed(
            7,
        ),
        opcode: RLCA,
        span: Span {
            start: 901,
            end: 902,
        },
    },
    Instruction {
        val: Unprefixed(
            179,
        ),
        opcode: OR(
            Register(
                E,
            ),
        ),
        span: Span {
            start: 902,
            end: 903,
        },
    },
    Instruction {
        val: Unprefixed(
            34,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: MEM_HLI,
        },
        span: Span {
            start: 903,
            end: 904,
        },
    },
    Instruction {
        val: Unprefixed(
            13,
        ),
        opcode: DEC(
            R8(
                C,
            ),
        ),
        span: Span {
            start: 904,
            end: 905,
        },
    },
    Instruction {
        val: Unprefixed(
            32,
        ),
        opcode: JR {
            cc: Some(
                NZ,
            ),
            e8: -57,
        },
        span: Span {
            start: 905,
            end: 907,
        },
    },
    Instruction {
        val: Unprefixed(
            225,
        ),
        opcode: POP(
            HL,
        ),
        span: Span {
            start: 907,
            end: 908,
        },
    },
    Instruction {
        val: Unprefixed(
            209,
        ),
        opcode: POP(
            DE,
        ),
        span: Span {
            start: 908,
            end: 909,
        },
    },
    Instruction {
        val: Unprefixed(
            193,
        ),
        opcode: POP(
            BC,
        ),
        span: Span {
            start: 909,
            end: 910,
        },
    },
    Instruction {
        val: Unprefixed(
            201,
        ),
        opcode: RET(
            None,
        ),
        span: Span {
            start: 910,
            end: 911,
        },
    },
    Instruction {
        val: Unprefixed(
            14,
        ),
        opcode: LD {
            src: N8(
                0,
            ),
            dest: R8(
                C,
            ),
        },
        span: Span {
            start: 911,
            end: 913,
        },
    },
    Instruction {
        val: Unprefixed(
            26,
        ),
        opcode: LD {
            src: MEM_R16(
                DE,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 913,
            end: 914,
        },
    },
    Instruction {
        val: Unprefixed(
            230,
        ),
        opcode: AND(
            Constant(
                240,
            ),
        ),
        span: Span {
            start: 914,
            end: 916,
        },
    },
    Instruction {
        val: Prefixed(
            203,
        ),
        opcode: SET(
            BitArg {
                bit: 1,
                register: E,
            },
        ),
        span: Span {
            start: 916,
            end: 917,
        },
    },
    Instruction {
        val: Unprefixed(
            73,
        ),
        opcode: LD {
            src: R8(
                C,
            ),
            dest: R8(
                C,
            ),
        },
        span: Span {
            start: 917,
            end: 918,
        },
    },
    Instruction {
        val: Unprefixed(
            40,
        ),
        opcode: JR {
            cc: Some(
                Z,
            ),
            e8: 2,
        },
        span: Span {
            start: 918,
            end: 920,
        },
    },
    Instruction {
        val: Prefixed(
            203,
        ),
        opcode: SET(
            BitArg {
                bit: 1,
                register: E,
            },
        ),
        span: Span {
            start: 920,
            end: 921,
        },
    },
    Instruction {
        val: Unprefixed(
            55,
        ),
        opcode: SCF,
        span: Span {
            start: 921,
            end: 922,
        },
    },
    Instruction {
        val: Unprefixed(
            71,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: R8(
                B,
            ),
        },
        span: Span {
            start: 922,
            end: 923,
        },
    },
    Instruction {
        val: Unprefixed(
            35,
        ),
        opcode: INC(
            R16(
                HL,
            ),
        ),
        span: Span {
            start: 923,
            end: 924,
        },
    },
    Instruction {
        val: Unprefixed(
            126,
        ),
        opcode: LD {
            src: R8(
                HL,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 924,
            end: 925,
        },
    },
    Instruction {
        val: Unprefixed(
            176,
        ),
        opcode: OR(
            Register(
                B,
            ),
        ),
        span: Span {
            start: 925,
            end: 926,
        },
    },
    Instruction {
        val: Unprefixed(
            34,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: MEM_HLI,
        },
        span: Span {
            start: 926,
            end: 927,
        },
    },
    Instruction {
        val: Unprefixed(
            26,
        ),
        opcode: LD {
            src: MEM_R16(
                DE,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 927,
            end: 928,
        },
    },
    Instruction {
        val: Unprefixed(
            230,
        ),
        opcode: AND(
            Constant(
                15,
            ),
        ),
        span: Span {
            start: 928,
            end: 930,
        },
    },
    Instruction {
        val: Prefixed(
            203,
        ),
        opcode: SET(
            BitArg {
                bit: 1,
                register: E,
            },
        ),
        span: Span {
            start: 930,
            end: 931,
        },
    },
    Instruction {
        val: Unprefixed(
            73,
        ),
        opcode: LD {
            src: R8(
                C,
            ),
            dest: R8(
                C,
            ),
        },
        span: Span {
            start: 931,
            end: 932,
        },
    },
    Instruction {
        val: Unprefixed(
            32,
        ),
        opcode: JR {
            cc: Some(
                NZ,
            ),
            e8: 2,
        },
        span: Span {
            start: 932,
            end: 934,
        },
    },
    Instruction {
        val: Prefixed(
            203,
        ),
        opcode: SET(
            BitArg {
                bit: 1,
                register: E,
            },
        ),
        span: Span {
            start: 934,
            end: 935,
        },
    },
    Instruction {
        val: Unprefixed(
            55,
        ),
        opcode: SCF,
        span: Span {
            start: 935,
            end: 936,
        },
    },
    Instruction {
        val: Unprefixed(
            71,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: R8(
                B,
            ),
        },
        span: Span {
            start: 936,
            end: 937,
        },
    },
    Instruction {
        val: Unprefixed(
            35,
        ),
        opcode: INC(
            R16(
                HL,
            ),
        ),
        span: Span {
            start: 937,
            end: 938,
        },
    },
    Instruction {
        val: Unprefixed(
            126,
        ),
        opcode: LD {
            src: R8(
                HL,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 938,
            end: 939,
        },
    },
    Instruction {
        val: Unprefixed(
            176,
        ),
        opcode: OR(
            Register(
                B,
            ),
        ),
        span: Span {
            start: 939,
            end: 940,
        },
    },
    Instruction {
        val: Unprefixed(
            34,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: MEM_HLI,
        },
        span: Span {
            start: 940,
            end: 941,
        },
    },
    Instruction {
        val: Unprefixed(
            19,
        ),
        opcode: INC(
            R16(
                DE,
            ),
        ),
        span: Span {
            start: 941,
            end: 942,
        },
    },
    Instruction {
        val: Prefixed(
            203,
        ),
        opcode: SET(
            BitArg {
                bit: 1,
                register: E,
            },
        ),
        span: Span {
            start: 942,
            end: 943,
        },
    },
    Instruction {
        val: Unprefixed(
            65,
        ),
        opcode: LD {
            src: R8(
                C,
            ),
            dest: R8(
                B,
            ),
        },
        span: Span {
            start: 943,
            end: 944,
        },
    },
    Instruction {
        val: Unprefixed(
            40,
        ),
        opcode: JR {
            cc: Some(
                Z,
            ),
            e8: 13,
        },
        span: Span {
            start: 944,
            end: 946,
        },
    },
    Instruction {
        val: Unprefixed(
            213,
        ),
        opcode: PUSH(
            DE,
        ),
        span: Span {
            start: 946,
            end: 947,
        },
    },
    Instruction {
        val: Unprefixed(
            17,
        ),
        opcode: LD {
            src: N16(
                63743,
            ),
            dest: R16(
                DE,
            ),
        },
        span: Span {
            start: 947,
            end: 950,
        },
    },
    Instruction {
        val: Prefixed(
            203,
        ),
        opcode: SET(
            BitArg {
                bit: 1,
                register: E,
            },
        ),
        span: Span {
            start: 950,
            end: 951,
        },
    },
    Instruction {
        val: Unprefixed(
            73,
        ),
        opcode: LD {
            src: R8(
                C,
            ),
            dest: R8(
                C,
            ),
        },
        span: Span {
            start: 951,
            end: 952,
        },
    },
    Instruction {
        val: Unprefixed(
            40,
        ),
        opcode: JR {
            cc: Some(
                Z,
            ),
            e8: 3,
        },
        span: Span {
            start: 952,
            end: 954,
        },
    },
    Instruction {
        val: Unprefixed(
            17,
        ),
        opcode: LD {
            src: N16(
                2048,
            ),
            dest: R16(
                DE,
            ),
        },
        span: Span {
            start: 954,
            end: 957,
        },
    },
    Instruction {
        val: Unprefixed(
            25,
        ),
        opcode: ADD_HL(
            DE,
        ),
        span: Span {
            start: 957,
            end: 958,
        },
    },
    Instruction {
        val: Unprefixed(
            209,
        ),
        opcode: POP(
            DE,
        ),
        span: Span {
            start: 958,
            end: 959,
        },
    },
    Instruction {
        val: Unprefixed(
            12,
        ),
        opcode: INC(
            R8(
                C,
            ),
        ),
        span: Span {
            start: 959,
            end: 960,
        },
    },
    Instruction {
        val: Unprefixed(
            121,
        ),
        opcode: LD {
            src: R8(
                C,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 960,
            end: 961,
        },
    },
    Instruction {
        val: Unprefixed(
            254,
        ),
        opcode: CP(
            Constant(
                24,
            ),
        ),
        span: Span {
            start: 961,
            end: 963,
        },
    },
    Instruction {
        val: Unprefixed(
            32,
        ),
        opcode: JR {
            cc: Some(
                NZ,
            ),
            e8: -52,
        },
        span: Span {
            start: 963,
            end: 965,
        },
    },
    Instruction {
        val: Unprefixed(
            201,
        ),
        opcode: RET(
            None,
        ),
        span: Span {
            start: 965,
            end: 966,
        },
    },
    Instruction {
        val: Unprefixed(
            71,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: R8(
                B,
            ),
        },
        span: Span {
            start: 966,
            end: 967,
        },
    },
    Instruction {
        val: Unprefixed(
            213,
        ),
        opcode: PUSH(
            DE,
        ),
        span: Span {
            start: 967,
            end: 968,
        },
    },
    Instruction {
        val: Unprefixed(
            22,
        ),
        opcode: LD {
            src: N8(
                4,
            ),
            dest: R8(
                D,
            ),
        },
        span: Span {
            start: 968,
            end: 970,
        },
    },
    Instruction {
        val: Unprefixed(
            88,
        ),
        opcode: LD {
            src: R8(
                B,
            ),
            dest: R8(
                E,
            ),
        },
        span: Span {
            start: 970,
            end: 971,
        },
    },
    Instruction {
        val: Prefixed(
            203,
        ),
        opcode: SET(
            BitArg {
                bit: 1,
                register: E,
            },
        ),
        span: Span {
            start: 971,
            end: 972,
        },
    },
    Instruction {
        val: Unprefixed(
            16,
        ),
        opcode: STOP,
        span: Span {
            start: 972,
            end: 973,
        },
    },
    Instruction {
        val: Unprefixed(
            23,
        ),
        opcode: RLA,
        span: Span {
            start: 973,
            end: 974,
        },
    },
    Instruction {
        val: Prefixed(
            203,
        ),
        opcode: SET(
            BitArg {
                bit: 1,
                register: E,
            },
        ),
        span: Span {
            start: 974,
            end: 975,
        },
    },
    Instruction {
        val: Unprefixed(
            19,
        ),
        opcode: INC(
            R16(
                DE,
            ),
        ),
        span: Span {
            start: 975,
            end: 976,
        },
    },
    Instruction {
        val: Unprefixed(
            23,
        ),
        opcode: RLA,
        span: Span {
            start: 976,
            end: 977,
        },
    },
    Instruction {
        val: Unprefixed(
            21,
        ),
        opcode: DEC(
            R8(
                D,
            ),
        ),
        span: Span {
            start: 977,
            end: 978,
        },
    },
    Instruction {
        val: Unprefixed(
            32,
        ),
        opcode: JR {
            cc: Some(
                NZ,
            ),
            e8: -10,
        },
        span: Span {
            start: 978,
            end: 980,
        },
    },
    Instruction {
        val: Unprefixed(
            209,
        ),
        opcode: POP(
            DE,
        ),
        span: Span {
            start: 980,
            end: 981,
        },
    },
    Instruction {
        val: Unprefixed(
            34,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: MEM_HLI,
        },
        span: Span {
            start: 981,
            end: 982,
        },
    },
    Instruction {
        val: Unprefixed(
            35,
        ),
        opcode: INC(
            R16(
                HL,
            ),
        ),
        span: Span {
            start: 982,
            end: 983,
        },
    },
    Instruction {
        val: Unprefixed(
            34,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: MEM_HLI,
        },
        span: Span {
            start: 983,
            end: 984,
        },
    },
    Instruction {
        val: Unprefixed(
            35,
        ),
        opcode: INC(
            R16(
                HL,
            ),
        ),
        span: Span {
            start: 984,
            end: 985,
        },
    },
    Instruction {
        val: Unprefixed(
            201,
        ),
        opcode: RET(
            None,
        ),
        span: Span {
            start: 985,
            end: 986,
        },
    },
    Instruction {
        val: Unprefixed(
            62,
        ),
        opcode: LD {
            src: N8(
                25,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 986,
            end: 988,
        },
    },
    Instruction {
        val: Unprefixed(
            234,
        ),
        opcode: LD {
            src: N16(
                4249,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 988,
            end: 991,
        },
    },
    Instruction {
        val: Unprefixed(
            33,
        ),
        opcode: LD {
            src: N16(
                12185,
            ),
            dest: R16(
                HL,
            ),
        },
        span: Span {
            start: 991,
            end: 994,
        },
    },
    Instruction {
        val: Unprefixed(
            14,
        ),
        opcode: LD {
            src: N8(
                12,
            ),
            dest: R8(
                C,
            ),
        },
        span: Span {
            start: 994,
            end: 996,
        },
    },
    Instruction {
        val: Unprefixed(
            61,
        ),
        opcode: DEC(
            R8(
                A,
            ),
        ),
        span: Span {
            start: 996,
            end: 997,
        },
    },
    Instruction {
        val: Unprefixed(
            40,
        ),
        opcode: JR {
            cc: Some(
                Z,
            ),
            e8: 8,
        },
        span: Span {
            start: 997,
            end: 999,
        },
    },
    Instruction {
        val: Unprefixed(
            50,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: MEM_HLD,
        },
        span: Span {
            start: 999,
            end: 1000,
        },
    },
    Instruction {
        val: Unprefixed(
            13,
        ),
        opcode: DEC(
            R8(
                C,
            ),
        ),
        span: Span {
            start: 1000,
            end: 1001,
        },
    },
    Instruction {
        val: Unprefixed(
            32,
        ),
        opcode: JR {
            cc: Some(
                NZ,
            ),
            e8: -7,
        },
        span: Span {
            start: 1001,
            end: 1003,
        },
    },
    Instruction {
        val: Unprefixed(
            46,
        ),
        opcode: LD {
            src: N8(
                15,
            ),
            dest: R8(
                L,
            ),
        },
        span: Span {
            start: 1003,
            end: 1005,
        },
    },
    Instruction {
        val: Unprefixed(
            24,
        ),
        opcode: JR {
            cc: None,
            e8: -13,
        },
        span: Span {
            start: 1005,
            end: 1007,
        },
    },
    Instruction {
        val: Unprefixed(
            201,
        ),
        opcode: RET(
            None,
        ),
        span: Span {
            start: 1007,
            end: 1008,
        },
    },
    Instruction {
        val: Unprefixed(
            62,
        ),
        opcode: LD {
            src: N8(
                1,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1008,
            end: 1010,
        },
    },
    Instruction {
        val: Unprefixed(
            224,
        ),
        opcode: LDH {
            src: MEM_N16(
                65359,
            ),
            dest: A,
        },
        span: Span {
            start: 1010,
            end: 1012,
        },
    },
    Instruction {
        val: Unprefixed(
            205,
        ),
        opcode: CALL {
            cc: None,
            n16: 2,
        },
        span: Span {
            start: 1012,
            end: 1015,
        },
    },
    Instruction {
        val: Unprefixed(
            17,
        ),
        opcode: LD {
            src: N16(
                1798,
            ),
            dest: R16(
                DE,
            ),
        },
        span: Span {
            start: 1015,
            end: 1018,
        },
    },
    Instruction {
        val: Unprefixed(
            33,
        ),
        opcode: LD {
            src: N16(
                32896,
            ),
            dest: R16(
                HL,
            ),
        },
        span: Span {
            start: 1018,
            end: 1021,
        },
    },
    Instruction {
        val: Unprefixed(
            14,
        ),
        opcode: LD {
            src: N8(
                192,
            ),
            dest: R8(
                C,
            ),
        },
        span: Span {
            start: 1021,
            end: 1023,
        },
    },
    Instruction {
        val: Unprefixed(
            26,
        ),
        opcode: LD {
            src: MEM_R16(
                DE,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1023,
            end: 1024,
        },
    },
    Instruction {
        val: Unprefixed(
            34,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: MEM_HLI,
        },
        span: Span {
            start: 1024,
            end: 1025,
        },
    },
    Instruction {
        val: Unprefixed(
            35,
        ),
        opcode: INC(
            R16(
                HL,
            ),
        ),
        span: Span {
            start: 1025,
            end: 1026,
        },
    },
    Instruction {
        val: Unprefixed(
            34,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: MEM_HLI,
        },
        span: Span {
            start: 1026,
            end: 1027,
        },
    },
    Instruction {
        val: Unprefixed(
            35,
        ),
        opcode: INC(
            R16(
                HL,
            ),
        ),
        span: Span {
            start: 1027,
            end: 1028,
        },
    },
    Instruction {
        val: Unprefixed(
            19,
        ),
        opcode: INC(
            R16(
                DE,
            ),
        ),
        span: Span {
            start: 1028,
            end: 1029,
        },
    },
    Instruction {
        val: Unprefixed(
            13,
        ),
        opcode: DEC(
            R8(
                C,
            ),
        ),
        span: Span {
            start: 1029,
            end: 1030,
        },
    },
    Instruction {
        val: Unprefixed(
            32,
        ),
        opcode: JR {
            cc: Some(
                NZ,
            ),
            e8: -9,
        },
        span: Span {
            start: 1030,
            end: 1032,
        },
    },
    Instruction {
        val: Unprefixed(
            17,
        ),
        opcode: LD {
            src: N16(
                1025,
            ),
            dest: R16(
                DE,
            ),
        },
        span: Span {
            start: 1032,
            end: 1035,
        },
    },
    Instruction {
        val: Unprefixed(
            205,
        ),
        opcode: CALL {
            cc: None,
            n16: 36611,
        },
        span: Span {
            start: 1035,
            end: 1038,
        },
    },
    Instruction {
        val: Unprefixed(
            1,
        ),
        opcode: LD {
            src: N16(
                43263,
            ),
            dest: R16(
                BC,
            ),
        },
        span: Span {
            start: 1038,
            end: 1041,
        },
    },
    Instruction {
        val: Unprefixed(
            9,
        ),
        opcode: ADD_HL(
            BC,
        ),
        span: Span {
            start: 1041,
            end: 1042,
        },
    },
    Instruction {
        val: Unprefixed(
            205,
        ),
        opcode: CALL {
            cc: None,
            n16: 36611,
        },
        span: Span {
            start: 1042,
            end: 1045,
        },
    },
    Instruction {
        val: Unprefixed(
            1,
        ),
        opcode: LD {
            src: N16(
                63743,
            ),
            dest: R16(
                BC,
            ),
        },
        span: Span {
            start: 1045,
            end: 1048,
        },
    },
    Instruction {
        val: Unprefixed(
            9,
        ),
        opcode: ADD_HL(
            BC,
        ),
        span: Span {
            start: 1048,
            end: 1049,
        },
    },
    Instruction {
        val: Unprefixed(
            17,
        ),
        opcode: LD {
            src: N16(
                29184,
            ),
            dest: R16(
                DE,
            ),
        },
        span: Span {
            start: 1049,
            end: 1052,
        },
    },
    Instruction {
        val: Unprefixed(
            14,
        ),
        opcode: LD {
            src: N8(
                8,
            ),
            dest: R8(
                C,
            ),
        },
        span: Span {
            start: 1052,
            end: 1054,
        },
    },
    Instruction {
        val: Unprefixed(
            35,
        ),
        opcode: INC(
            R16(
                HL,
            ),
        ),
        span: Span {
            start: 1054,
            end: 1055,
        },
    },
    Instruction {
        val: Unprefixed(
            26,
        ),
        opcode: LD {
            src: MEM_R16(
                DE,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1055,
            end: 1056,
        },
    },
    Instruction {
        val: Unprefixed(
            34,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: MEM_HLI,
        },
        span: Span {
            start: 1056,
            end: 1057,
        },
    },
    Instruction {
        val: Unprefixed(
            19,
        ),
        opcode: INC(
            R16(
                DE,
            ),
        ),
        span: Span {
            start: 1057,
            end: 1058,
        },
    },
    Instruction {
        val: Unprefixed(
            13,
        ),
        opcode: DEC(
            R8(
                C,
            ),
        ),
        span: Span {
            start: 1058,
            end: 1059,
        },
    },
    Instruction {
        val: Unprefixed(
            32,
        ),
        opcode: JR {
            cc: Some(
                NZ,
            ),
            e8: -7,
        },
        span: Span {
            start: 1059,
            end: 1061,
        },
    },
    Instruction {
        val: Unprefixed(
            33,
        ),
        opcode: LD {
            src: N16(
                49816,
            ),
            dest: R16(
                HL,
            ),
        },
        span: Span {
            start: 1061,
            end: 1064,
        },
    },
    Instruction {
        val: Unprefixed(
            6,
        ),
        opcode: LD {
            src: N8(
                8,
            ),
            dest: R8(
                B,
            ),
        },
        span: Span {
            start: 1064,
            end: 1066,
        },
    },
    Instruction {
        val: Unprefixed(
            62,
        ),
        opcode: LD {
            src: N8(
                8,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1066,
            end: 1068,
        },
    },
    Instruction {
        val: Unprefixed(
            14,
        ),
        opcode: LD {
            src: N8(
                16,
            ),
            dest: R8(
                C,
            ),
        },
        span: Span {
            start: 1068,
            end: 1070,
        },
    },
    Instruction {
        val: Unprefixed(
            34,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: MEM_HLI,
        },
        span: Span {
            start: 1070,
            end: 1071,
        },
    },
    Instruction {
        val: Unprefixed(
            13,
        ),
        opcode: DEC(
            R8(
                C,
            ),
        ),
        span: Span {
            start: 1071,
            end: 1072,
        },
    },
    Instruction {
        val: Unprefixed(
            32,
        ),
        opcode: JR {
            cc: Some(
                NZ,
            ),
            e8: -4,
        },
        span: Span {
            start: 1072,
            end: 1074,
        },
    },
    Instruction {
        val: Unprefixed(
            17,
        ),
        opcode: LD {
            src: N16(
                4096,
            ),
            dest: R16(
                DE,
            ),
        },
        span: Span {
            start: 1074,
            end: 1077,
        },
    },
    Instruction {
        val: Unprefixed(
            25,
        ),
        opcode: ADD_HL(
            DE,
        ),
        span: Span {
            start: 1077,
            end: 1078,
        },
    },
    Instruction {
        val: Unprefixed(
            5,
        ),
        opcode: DEC(
            R8(
                B,
            ),
        ),
        span: Span {
            start: 1078,
            end: 1079,
        },
    },
    Instruction {
        val: Unprefixed(
            32,
        ),
        opcode: JR {
            cc: Some(
                NZ,
            ),
            e8: -13,
        },
        span: Span {
            start: 1079,
            end: 1081,
        },
    },
    Instruction {
        val: Unprefixed(
            175,
        ),
        opcode: XOR(
            Register(
                A,
            ),
        ),
        span: Span {
            start: 1081,
            end: 1082,
        },
    },
    Instruction {
        val: Unprefixed(
            224,
        ),
        opcode: LDH {
            src: MEM_N16(
                65359,
            ),
            dest: A,
        },
        span: Span {
            start: 1082,
            end: 1084,
        },
    },
    Instruction {
        val: Unprefixed(
            33,
        ),
        opcode: LD {
            src: N16(
                49816,
            ),
            dest: R16(
                HL,
            ),
        },
        span: Span {
            start: 1084,
            end: 1087,
        },
    },
    Instruction {
        val: Unprefixed(
            62,
        ),
        opcode: LD {
            src: N8(
                8,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1087,
            end: 1089,
        },
    },
    Instruction {
        val: Unprefixed(
            34,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: MEM_HLI,
        },
        span: Span {
            start: 1089,
            end: 1090,
        },
    },
    Instruction {
        val: Unprefixed(
            60,
        ),
        opcode: INC(
            R8(
                A,
            ),
        ),
        span: Span {
            start: 1090,
            end: 1091,
        },
    },
    Instruction {
        val: Unprefixed(
            254,
        ),
        opcode: CP(
            Constant(
                24,
            ),
        ),
        span: Span {
            start: 1091,
            end: 1093,
        },
    },
    Instruction {
        val: Unprefixed(
            32,
        ),
        opcode: JR {
            cc: Some(
                NZ,
            ),
            e8: 2,
        },
        span: Span {
            start: 1093,
            end: 1095,
        },
    },
    Instruction {
        val: Unprefixed(
            46,
        ),
        opcode: LD {
            src: N8(
                226,
            ),
            dest: R8(
                L,
            ),
        },
        span: Span {
            start: 1095,
            end: 1097,
        },
    },
    Instruction {
        val: Unprefixed(
            254,
        ),
        opcode: CP(
            Constant(
                40,
            ),
        ),
        span: Span {
            start: 1097,
            end: 1099,
        },
    },
    Instruction {
        val: Unprefixed(
            32,
        ),
        opcode: JR {
            cc: Some(
                NZ,
            ),
            e8: 3,
        },
        span: Span {
            start: 1099,
            end: 1101,
        },
    },
    Instruction {
        val: Unprefixed(
            33,
        ),
        opcode: LD {
            src: N16(
                665,
            ),
            dest: R16(
                HL,
            ),
        },
        span: Span {
            start: 1101,
            end: 1104,
        },
    },
    Instruction {
        val: Unprefixed(
            254,
        ),
        opcode: CP(
            Constant(
                56,
            ),
        ),
        span: Span {
            start: 1104,
            end: 1106,
        },
    },
    Instruction {
        val: Unprefixed(
            32,
        ),
        opcode: JR {
            cc: Some(
                NZ,
            ),
            e8: -19,
        },
        span: Span {
            start: 1106,
            end: 1108,
        },
    },
    Instruction {
        val: Unprefixed(
            33,
        ),
        opcode: LD {
            src: N16(
                55304,
            ),
            dest: R16(
                HL,
            ),
        },
        span: Span {
            start: 1108,
            end: 1111,
        },
    },
    Instruction {
        val: Unprefixed(
            17,
        ),
        opcode: LD {
            src: N16(
                16600,
            ),
            dest: R16(
                DE,
            ),
        },
        span: Span {
            start: 1111,
            end: 1114,
        },
    },
    Instruction {
        val: Unprefixed(
            6,
        ),
        opcode: LD {
            src: N8(
                8,
            ),
            dest: R8(
                B,
            ),
        },
        span: Span {
            start: 1114,
            end: 1116,
        },
    },
    Instruction {
        val: Unprefixed(
            62,
        ),
        opcode: LD {
            src: N8(
                255,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1116,
            end: 1118,
        },
    },
    Instruction {
        val: Unprefixed(
            18,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: MEM_R16(
                DE,
            ),
        },
        span: Span {
            start: 1118,
            end: 1119,
        },
    },
    Instruction {
        val: Unprefixed(
            19,
        ),
        opcode: INC(
            R16(
                DE,
            ),
        ),
        span: Span {
            start: 1119,
            end: 1120,
        },
    },
    Instruction {
        val: Unprefixed(
            18,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: MEM_R16(
                DE,
            ),
        },
        span: Span {
            start: 1120,
            end: 1121,
        },
    },
    Instruction {
        val: Unprefixed(
            19,
        ),
        opcode: INC(
            R16(
                DE,
            ),
        ),
        span: Span {
            start: 1121,
            end: 1122,
        },
    },
    Instruction {
        val: Unprefixed(
            14,
        ),
        opcode: LD {
            src: N8(
                2,
            ),
            dest: R8(
                C,
            ),
        },
        span: Span {
            start: 1122,
            end: 1124,
        },
    },
    Instruction {
        val: Unprefixed(
            205,
        ),
        opcode: CALL {
            cc: None,
            n16: 2562,
        },
        span: Span {
            start: 1124,
            end: 1127,
        },
    },
    Instruction {
        val: Unprefixed(
            62,
        ),
        opcode: LD {
            src: N8(
                0,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1127,
            end: 1129,
        },
    },
    Instruction {
        val: Unprefixed(
            18,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: MEM_R16(
                DE,
            ),
        },
        span: Span {
            start: 1129,
            end: 1130,
        },
    },
    Instruction {
        val: Unprefixed(
            19,
        ),
        opcode: INC(
            R16(
                DE,
            ),
        ),
        span: Span {
            start: 1130,
            end: 1131,
        },
    },
    Instruction {
        val: Unprefixed(
            18,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: MEM_R16(
                DE,
            ),
        },
        span: Span {
            start: 1131,
            end: 1132,
        },
    },
    Instruction {
        val: Unprefixed(
            19,
        ),
        opcode: INC(
            R16(
                DE,
            ),
        ),
        span: Span {
            start: 1132,
            end: 1133,
        },
    },
    Instruction {
        val: Unprefixed(
            19,
        ),
        opcode: INC(
            R16(
                DE,
            ),
        ),
        span: Span {
            start: 1133,
            end: 1134,
        },
    },
    Instruction {
        val: Unprefixed(
            19,
        ),
        opcode: INC(
            R16(
                DE,
            ),
        ),
        span: Span {
            start: 1134,
            end: 1135,
        },
    },
    Instruction {
        val: Unprefixed(
            5,
        ),
        opcode: DEC(
            R8(
                B,
            ),
        ),
        span: Span {
            start: 1135,
            end: 1136,
        },
    },
    Instruction {
        val: Unprefixed(
            32,
        ),
        opcode: JR {
            cc: Some(
                NZ,
            ),
            e8: -22,
        },
        span: Span {
            start: 1136,
            end: 1138,
        },
    },
    Instruction {
        val: Unprefixed(
            205,
        ),
        opcode: CALL {
            cc: None,
            n16: 25090,
        },
        span: Span {
            start: 1138,
            end: 1141,
        },
    },
    Instruction {
        val: Unprefixed(
            33,
        ),
        opcode: LD {
            src: N16(
                19201,
            ),
            dest: R16(
                HL,
            ),
        },
        span: Span {
            start: 1141,
            end: 1144,
        },
    },
    Instruction {
        val: Unprefixed(
            126,
        ),
        opcode: LD {
            src: R8(
                HL,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1144,
            end: 1145,
        },
    },
    Instruction {
        val: Unprefixed(
            254,
        ),
        opcode: CP(
            Constant(
                51,
            ),
        ),
        span: Span {
            start: 1145,
            end: 1147,
        },
    },
    Instruction {
        val: Unprefixed(
            32,
        ),
        opcode: JR {
            cc: Some(
                NZ,
            ),
            e8: 11,
        },
        span: Span {
            start: 1147,
            end: 1149,
        },
    },
    Instruction {
        val: Unprefixed(
            46,
        ),
        opcode: LD {
            src: N8(
                68,
            ),
            dest: R8(
                L,
            ),
        },
        span: Span {
            start: 1149,
            end: 1151,
        },
    },
    Instruction {
        val: Unprefixed(
            30,
        ),
        opcode: LD {
            src: N8(
                48,
            ),
            dest: R8(
                E,
            ),
        },
        span: Span {
            start: 1151,
            end: 1153,
        },
    },
    Instruction {
        val: Unprefixed(
            42,
        ),
        opcode: LD {
            src: MEM_HLI,
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1153,
            end: 1154,
        },
    },
    Instruction {
        val: Unprefixed(
            187,
        ),
        opcode: CP(
            Register(
                E,
            ),
        ),
        span: Span {
            start: 1154,
            end: 1155,
        },
    },
    Instruction {
        val: Unprefixed(
            32,
        ),
        opcode: JR {
            cc: Some(
                NZ,
            ),
            e8: 73,
        },
        span: Span {
            start: 1155,
            end: 1157,
        },
    },
    Instruction {
        val: Unprefixed(
            28,
        ),
        opcode: INC(
            R8(
                E,
            ),
        ),
        span: Span {
            start: 1157,
            end: 1158,
        },
    },
    Instruction {
        val: Unprefixed(
            24,
        ),
        opcode: JR {
            cc: None,
            e8: 4,
        },
        span: Span {
            start: 1158,
            end: 1160,
        },
    },
    Instruction {
        val: Unprefixed(
            46,
        ),
        opcode: LD {
            src: N8(
                75,
            ),
            dest: R8(
                L,
            ),
        },
        span: Span {
            start: 1160,
            end: 1162,
        },
    },
    Instruction {
        val: Unprefixed(
            30,
        ),
        opcode: LD {
            src: N8(
                1,
            ),
            dest: R8(
                E,
            ),
        },
        span: Span {
            start: 1162,
            end: 1164,
        },
    },
    Instruction {
        val: Unprefixed(
            42,
        ),
        opcode: LD {
            src: MEM_HLI,
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1164,
            end: 1165,
        },
    },
    Instruction {
        val: Unprefixed(
            187,
        ),
        opcode: CP(
            Register(
                E,
            ),
        ),
        span: Span {
            start: 1165,
            end: 1166,
        },
    },
    Instruction {
        val: Unprefixed(
            32,
        ),
        opcode: JR {
            cc: Some(
                NZ,
            ),
            e8: 62,
        },
        span: Span {
            start: 1166,
            end: 1168,
        },
    },
    Instruction {
        val: Unprefixed(
            46,
        ),
        opcode: LD {
            src: N8(
                52,
            ),
            dest: R8(
                L,
            ),
        },
        span: Span {
            start: 1168,
            end: 1170,
        },
    },
    Instruction {
        val: Unprefixed(
            1,
        ),
        opcode: LD {
            src: N16(
                4096,
            ),
            dest: R16(
                BC,
            ),
        },
        span: Span {
            start: 1170,
            end: 1173,
        },
    },
    Instruction {
        val: Unprefixed(
            42,
        ),
        opcode: LD {
            src: MEM_HLI,
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1173,
            end: 1174,
        },
    },
    Instruction {
        val: Unprefixed(
            128,
        ),
        opcode: ADD(
            Register(
                B,
            ),
        ),
        span: Span {
            start: 1174,
            end: 1175,
        },
    },
    Instruction {
        val: Unprefixed(
            71,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: R8(
                B,
            ),
        },
        span: Span {
            start: 1175,
            end: 1176,
        },
    },
    Instruction {
        val: Unprefixed(
            13,
        ),
        opcode: DEC(
            R8(
                C,
            ),
        ),
        span: Span {
            start: 1176,
            end: 1177,
        },
    },
    Instruction {
        val: Unprefixed(
            32,
        ),
        opcode: JR {
            cc: Some(
                NZ,
            ),
            e8: -6,
        },
        span: Span {
            start: 1177,
            end: 1179,
        },
    },
    Instruction {
        val: Unprefixed(
            234,
        ),
        opcode: LD {
            src: N16(
                208,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1179,
            end: 1182,
        },
    },
    Instruction {
        val: Unprefixed(
            33,
        ),
        opcode: LD {
            src: N16(
                50950,
            ),
            dest: R16(
                HL,
            ),
        },
        span: Span {
            start: 1182,
            end: 1185,
        },
    },
    Instruction {
        val: Unprefixed(
            14,
        ),
        opcode: LD {
            src: N8(
                0,
            ),
            dest: R8(
                C,
            ),
        },
        span: Span {
            start: 1185,
            end: 1187,
        },
    },
    Instruction {
        val: Unprefixed(
            42,
        ),
        opcode: LD {
            src: MEM_HLI,
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1187,
            end: 1188,
        },
    },
    Instruction {
        val: Unprefixed(
            184,
        ),
        opcode: CP(
            Register(
                B,
            ),
        ),
        span: Span {
            start: 1188,
            end: 1189,
        },
    },
    Instruction {
        val: Unprefixed(
            40,
        ),
        opcode: JR {
            cc: Some(
                Z,
            ),
            e8: 8,
        },
        span: Span {
            start: 1189,
            end: 1191,
        },
    },
    Instruction {
        val: Unprefixed(
            12,
        ),
        opcode: INC(
            R8(
                C,
            ),
        ),
        span: Span {
            start: 1191,
            end: 1192,
        },
    },
    Instruction {
        val: Unprefixed(
            121,
        ),
        opcode: LD {
            src: R8(
                C,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1192,
            end: 1193,
        },
    },
    Instruction {
        val: Unprefixed(
            254,
        ),
        opcode: CP(
            Constant(
                79,
            ),
        ),
        span: Span {
            start: 1193,
            end: 1195,
        },
    },
    Instruction {
        val: Unprefixed(
            32,
        ),
        opcode: JR {
            cc: Some(
                NZ,
            ),
            e8: -10,
        },
        span: Span {
            start: 1195,
            end: 1197,
        },
    },
    Instruction {
        val: Unprefixed(
            24,
        ),
        opcode: JR {
            cc: None,
            e8: 31,
        },
        span: Span {
            start: 1197,
            end: 1199,
        },
    },
    Instruction {
        val: Unprefixed(
            121,
        ),
        opcode: LD {
            src: R8(
                C,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1199,
            end: 1200,
        },
    },
    Instruction {
        val: Unprefixed(
            214,
        ),
        opcode: SUB(
            Constant(
                65,
            ),
        ),
        span: Span {
            start: 1200,
            end: 1202,
        },
    },
    Instruction {
        val: Unprefixed(
            56,
        ),
        opcode: JR {
            cc: Some(
                C,
            ),
            e8: 28,
        },
        span: Span {
            start: 1202,
            end: 1204,
        },
    },
    Instruction {
        val: Unprefixed(
            33,
        ),
        opcode: LD {
            src: N16(
                5639,
            ),
            dest: R16(
                HL,
            ),
        },
        span: Span {
            start: 1204,
            end: 1207,
        },
    },
    Instruction {
        val: Unprefixed(
            22,
        ),
        opcode: LD {
            src: N8(
                0,
            ),
            dest: R8(
                D,
            ),
        },
        span: Span {
            start: 1207,
            end: 1209,
        },
    },
    Instruction {
        val: Unprefixed(
            95,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: R8(
                E,
            ),
        },
        span: Span {
            start: 1209,
            end: 1210,
        },
    },
    Instruction {
        val: Unprefixed(
            25,
        ),
        opcode: ADD_HL(
            DE,
        ),
        span: Span {
            start: 1210,
            end: 1211,
        },
    },
    Instruction {
        val: Unprefixed(
            250,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: N16(
                14081,
            ),
        },
        span: Span {
            start: 1211,
            end: 1214,
        },
    },
    Instruction {
        val: Unprefixed(
            87,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: R8(
                D,
            ),
        },
        span: Span {
            start: 1214,
            end: 1215,
        },
    },
    Instruction {
        val: Unprefixed(
            126,
        ),
        opcode: LD {
            src: R8(
                HL,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1215,
            end: 1216,
        },
    },
    Instruction {
        val: Unprefixed(
            186,
        ),
        opcode: CP(
            Register(
                D,
            ),
        ),
        span: Span {
            start: 1216,
            end: 1217,
        },
    },
    Instruction {
        val: Unprefixed(
            40,
        ),
        opcode: JR {
            cc: Some(
                Z,
            ),
            e8: 13,
        },
        span: Span {
            start: 1217,
            end: 1219,
        },
    },
    Instruction {
        val: Unprefixed(
            17,
        ),
        opcode: LD {
            src: N16(
                3584,
            ),
            dest: R16(
                DE,
            ),
        },
        span: Span {
            start: 1219,
            end: 1222,
        },
    },
    Instruction {
        val: Unprefixed(
            25,
        ),
        opcode: ADD_HL(
            DE,
        ),
        span: Span {
            start: 1222,
            end: 1223,
        },
    },
    Instruction {
        val: Unprefixed(
            121,
        ),
        opcode: LD {
            src: R8(
                C,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1223,
            end: 1224,
        },
    },
    Instruction {
        val: Unprefixed(
            131,
        ),
        opcode: ADD(
            Register(
                E,
            ),
        ),
        span: Span {
            start: 1224,
            end: 1225,
        },
    },
    Instruction {
        val: Unprefixed(
            79,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: R8(
                C,
            ),
        },
        span: Span {
            start: 1225,
            end: 1226,
        },
    },
    Instruction {
        val: Unprefixed(
            214,
        ),
        opcode: SUB(
            Constant(
                94,
            ),
        ),
        span: Span {
            start: 1226,
            end: 1228,
        },
    },
    Instruction {
        val: Unprefixed(
            56,
        ),
        opcode: JR {
            cc: Some(
                C,
            ),
            e8: -19,
        },
        span: Span {
            start: 1228,
            end: 1230,
        },
    },
    Instruction {
        val: Unprefixed(
            14,
        ),
        opcode: LD {
            src: N8(
                0,
            ),
            dest: R8(
                C,
            ),
        },
        span: Span {
            start: 1230,
            end: 1232,
        },
    },
    Instruction {
        val: Unprefixed(
            33,
        ),
        opcode: LD {
            src: N16(
                13063,
            ),
            dest: R16(
                HL,
            ),
        },
        span: Span {
            start: 1232,
            end: 1235,
        },
    },
    Instruction {
        val: Unprefixed(
            6,
        ),
        opcode: LD {
            src: N8(
                0,
            ),
            dest: R8(
                B,
            ),
        },
        span: Span {
            start: 1235,
            end: 1237,
        },
    },
    Instruction {
        val: Unprefixed(
            9,
        ),
        opcode: ADD_HL(
            BC,
        ),
        span: Span {
            start: 1237,
            end: 1238,
        },
    },
    Instruction {
        val: Unprefixed(
            126,
        ),
        opcode: LD {
            src: R8(
                HL,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1238,
            end: 1239,
        },
    },
    Instruction {
        val: Unprefixed(
            230,
        ),
        opcode: AND(
            Constant(
                31,
            ),
        ),
        span: Span {
            start: 1239,
            end: 1241,
        },
    },
    Instruction {
        val: Unprefixed(
            234,
        ),
        opcode: LD {
            src: N16(
                2256,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1241,
            end: 1244,
        },
    },
    Instruction {
        val: Unprefixed(
            126,
        ),
        opcode: LD {
            src: R8(
                HL,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1244,
            end: 1245,
        },
    },
    Instruction {
        val: Unprefixed(
            230,
        ),
        opcode: AND(
            Constant(
                224,
            ),
        ),
        span: Span {
            start: 1245,
            end: 1247,
        },
    },
    Instruction {
        val: Unprefixed(
            7,
        ),
        opcode: RLCA,
        span: Span {
            start: 1247,
            end: 1248,
        },
    },
    Instruction {
        val: Unprefixed(
            7,
        ),
        opcode: RLCA,
        span: Span {
            start: 1248,
            end: 1249,
        },
    },
    Instruction {
        val: Unprefixed(
            7,
        ),
        opcode: RLCA,
        span: Span {
            start: 1249,
            end: 1250,
        },
    },
    Instruction {
        val: Unprefixed(
            234,
        ),
        opcode: LD {
            src: N16(
                3024,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1250,
            end: 1253,
        },
    },
    Instruction {
        val: Unprefixed(
            205,
        ),
        opcode: CALL {
            cc: None,
            n16: 59652,
        },
        span: Span {
            start: 1253,
            end: 1256,
        },
    },
    Instruction {
        val: Unprefixed(
            201,
        ),
        opcode: RET(
            None,
        ),
        span: Span {
            start: 1256,
            end: 1257,
        },
    },
    Instruction {
        val: Unprefixed(
            17,
        ),
        opcode: LD {
            src: N16(
                37127,
            ),
            dest: R16(
                DE,
            ),
        },
        span: Span {
            start: 1257,
            end: 1260,
        },
    },
    Instruction {
        val: Unprefixed(
            33,
        ),
        opcode: LD {
            src: N16(
                217,
            ),
            dest: R16(
                HL,
            ),
        },
        span: Span {
            start: 1260,
            end: 1263,
        },
    },
    Instruction {
        val: Unprefixed(
            250,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: N16(
                3024,
            ),
        },
        span: Span {
            start: 1263,
            end: 1266,
        },
    },
    Instruction {
        val: Unprefixed(
            71,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: R8(
                B,
            ),
        },
        span: Span {
            start: 1266,
            end: 1267,
        },
    },
    Instruction {
        val: Unprefixed(
            14,
        ),
        opcode: LD {
            src: N8(
                30,
            ),
            dest: R8(
                C,
            ),
        },
        span: Span {
            start: 1267,
            end: 1269,
        },
    },
    Instruction {
        val: Prefixed(
            203,
        ),
        opcode: SET(
            BitArg {
                bit: 1,
                register: E,
            },
        ),
        span: Span {
            start: 1269,
            end: 1270,
        },
    },
    Instruction {
        val: Unprefixed(
            64,
        ),
        opcode: LD {
            src: R8(
                B,
            ),
            dest: R8(
                B,
            ),
        },
        span: Span {
            start: 1270,
            end: 1271,
        },
    },
    Instruction {
        val: Unprefixed(
            32,
        ),
        opcode: JR {
            cc: Some(
                NZ,
            ),
            e8: 2,
        },
        span: Span {
            start: 1271,
            end: 1273,
        },
    },
    Instruction {
        val: Unprefixed(
            19,
        ),
        opcode: INC(
            R16(
                DE,
            ),
        ),
        span: Span {
            start: 1273,
            end: 1274,
        },
    },
    Instruction {
        val: Unprefixed(
            19,
        ),
        opcode: INC(
            R16(
                DE,
            ),
        ),
        span: Span {
            start: 1274,
            end: 1275,
        },
    },
    Instruction {
        val: Unprefixed(
            26,
        ),
        opcode: LD {
            src: MEM_R16(
                DE,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1275,
            end: 1276,
        },
    },
    Instruction {
        val: Unprefixed(
            34,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: MEM_HLI,
        },
        span: Span {
            start: 1276,
            end: 1277,
        },
    },
    Instruction {
        val: Unprefixed(
            32,
        ),
        opcode: JR {
            cc: Some(
                NZ,
            ),
            e8: 2,
        },
        span: Span {
            start: 1277,
            end: 1279,
        },
    },
    Instruction {
        val: Unprefixed(
            27,
        ),
        opcode: DEC(
            R16(
                DE,
            ),
        ),
        span: Span {
            start: 1279,
            end: 1280,
        },
    },
    Instruction {
        val: Unprefixed(
            27,
        ),
        opcode: DEC(
            R16(
                DE,
            ),
        ),
        span: Span {
            start: 1280,
            end: 1281,
        },
    },
    Instruction {
        val: Prefixed(
            203,
        ),
        opcode: SET(
            BitArg {
                bit: 1,
                register: E,
            },
        ),
        span: Span {
            start: 1281,
            end: 1282,
        },
    },
    Instruction {
        val: Unprefixed(
            72,
        ),
        opcode: LD {
            src: R8(
                B,
            ),
            dest: R8(
                C,
            ),
        },
        span: Span {
            start: 1282,
            end: 1283,
        },
    },
    Instruction {
        val: Unprefixed(
            32,
        ),
        opcode: JR {
            cc: Some(
                NZ,
            ),
            e8: 2,
        },
        span: Span {
            start: 1283,
            end: 1285,
        },
    },
    Instruction {
        val: Unprefixed(
            19,
        ),
        opcode: INC(
            R16(
                DE,
            ),
        ),
        span: Span {
            start: 1285,
            end: 1286,
        },
    },
    Instruction {
        val: Unprefixed(
            19,
        ),
        opcode: INC(
            R16(
                DE,
            ),
        ),
        span: Span {
            start: 1286,
            end: 1287,
        },
    },
    Instruction {
        val: Unprefixed(
            26,
        ),
        opcode: LD {
            src: MEM_R16(
                DE,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1287,
            end: 1288,
        },
    },
    Instruction {
        val: Unprefixed(
            34,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: MEM_HLI,
        },
        span: Span {
            start: 1288,
            end: 1289,
        },
    },
    Instruction {
        val: Unprefixed(
            19,
        ),
        opcode: INC(
            R16(
                DE,
            ),
        ),
        span: Span {
            start: 1289,
            end: 1290,
        },
    },
    Instruction {
        val: Unprefixed(
            19,
        ),
        opcode: INC(
            R16(
                DE,
            ),
        ),
        span: Span {
            start: 1290,
            end: 1291,
        },
    },
    Instruction {
        val: Unprefixed(
            32,
        ),
        opcode: JR {
            cc: Some(
                NZ,
            ),
            e8: 2,
        },
        span: Span {
            start: 1291,
            end: 1293,
        },
    },
    Instruction {
        val: Unprefixed(
            27,
        ),
        opcode: DEC(
            R16(
                DE,
            ),
        ),
        span: Span {
            start: 1293,
            end: 1294,
        },
    },
    Instruction {
        val: Unprefixed(
            27,
        ),
        opcode: DEC(
            R16(
                DE,
            ),
        ),
        span: Span {
            start: 1294,
            end: 1295,
        },
    },
    Instruction {
        val: Prefixed(
            203,
        ),
        opcode: SET(
            BitArg {
                bit: 1,
                register: E,
            },
        ),
        span: Span {
            start: 1295,
            end: 1296,
        },
    },
    Instruction {
        val: Unprefixed(
            80,
        ),
        opcode: LD {
            src: R8(
                B,
            ),
            dest: R8(
                D,
            ),
        },
        span: Span {
            start: 1296,
            end: 1297,
        },
    },
    Instruction {
        val: Unprefixed(
            40,
        ),
        opcode: JR {
            cc: Some(
                Z,
            ),
            e8: 5,
        },
        span: Span {
            start: 1297,
            end: 1299,
        },
    },
    Instruction {
        val: Unprefixed(
            27,
        ),
        opcode: DEC(
            R16(
                DE,
            ),
        ),
        span: Span {
            start: 1299,
            end: 1300,
        },
    },
    Instruction {
        val: Unprefixed(
            43,
        ),
        opcode: DEC(
            R16(
                HL,
            ),
        ),
        span: Span {
            start: 1300,
            end: 1301,
        },
    },
    Instruction {
        val: Unprefixed(
            26,
        ),
        opcode: LD {
            src: MEM_R16(
                DE,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1301,
            end: 1302,
        },
    },
    Instruction {
        val: Unprefixed(
            34,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: MEM_HLI,
        },
        span: Span {
            start: 1302,
            end: 1303,
        },
    },
    Instruction {
        val: Unprefixed(
            19,
        ),
        opcode: INC(
            R16(
                DE,
            ),
        ),
        span: Span {
            start: 1303,
            end: 1304,
        },
    },
    Instruction {
        val: Unprefixed(
            26,
        ),
        opcode: LD {
            src: MEM_R16(
                DE,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1304,
            end: 1305,
        },
    },
    Instruction {
        val: Unprefixed(
            34,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: MEM_HLI,
        },
        span: Span {
            start: 1305,
            end: 1306,
        },
    },
    Instruction {
        val: Unprefixed(
            19,
        ),
        opcode: INC(
            R16(
                DE,
            ),
        ),
        span: Span {
            start: 1306,
            end: 1307,
        },
    },
    Instruction {
        val: Unprefixed(
            13,
        ),
        opcode: DEC(
            R8(
                C,
            ),
        ),
        span: Span {
            start: 1307,
            end: 1308,
        },
    },
    Instruction {
        val: Unprefixed(
            32,
        ),
        opcode: JR {
            cc: Some(
                NZ,
            ),
            e8: -41,
        },
        span: Span {
            start: 1308,
            end: 1310,
        },
    },
    Instruction {
        val: Unprefixed(
            33,
        ),
        opcode: LD {
            src: N16(
                217,
            ),
            dest: R16(
                HL,
            ),
        },
        span: Span {
            start: 1310,
            end: 1313,
        },
    },
    Instruction {
        val: Unprefixed(
            17,
        ),
        opcode: LD {
            src: N16(
                218,
            ),
            dest: R16(
                DE,
            ),
        },
        span: Span {
            start: 1313,
            end: 1316,
        },
    },
    Instruction {
        val: Unprefixed(
            205,
        ),
        opcode: CALL {
            cc: None,
            n16: 25605,
        },
        span: Span {
            start: 1316,
            end: 1319,
        },
    },
    Instruction {
        val: Unprefixed(
            201,
        ),
        opcode: RET(
            None,
        ),
        span: Span {
            start: 1319,
            end: 1320,
        },
    },
    Instruction {
        val: Unprefixed(
            33,
        ),
        opcode: LD {
            src: N16(
                4608,
            ),
            dest: R16(
                HL,
            ),
        },
        span: Span {
            start: 1320,
            end: 1323,
        },
    },
    Instruction {
        val: Unprefixed(
            250,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: N16(
                1488,
            ),
        },
        span: Span {
            start: 1323,
            end: 1326,
        },
    },
    Instruction {
        val: Unprefixed(
            7,
        ),
        opcode: RLCA,
        span: Span {
            start: 1326,
            end: 1327,
        },
    },
    Instruction {
        val: Unprefixed(
            7,
        ),
        opcode: RLCA,
        span: Span {
            start: 1327,
            end: 1328,
        },
    },
    Instruction {
        val: Unprefixed(
            6,
        ),
        opcode: LD {
            src: N8(
                0,
            ),
            dest: R8(
                B,
            ),
        },
        span: Span {
            start: 1328,
            end: 1330,
        },
    },
    Instruction {
        val: Unprefixed(
            79,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: R8(
                C,
            ),
        },
        span: Span {
            start: 1330,
            end: 1331,
        },
    },
    Instruction {
        val: Unprefixed(
            9,
        ),
        opcode: ADD_HL(
            BC,
        ),
        span: Span {
            start: 1331,
            end: 1332,
        },
    },
    Instruction {
        val: Unprefixed(
            17,
        ),
        opcode: LD {
            src: N16(
                16600,
            ),
            dest: R16(
                DE,
            ),
        },
        span: Span {
            start: 1332,
            end: 1335,
        },
    },
    Instruction {
        val: Unprefixed(
            6,
        ),
        opcode: LD {
            src: N8(
                8,
            ),
            dest: R8(
                B,
            ),
        },
        span: Span {
            start: 1335,
            end: 1337,
        },
    },
    Instruction {
        val: Unprefixed(
            229,
        ),
        opcode: PUSH(
            HL,
        ),
        span: Span {
            start: 1337,
            end: 1338,
        },
    },
    Instruction {
        val: Unprefixed(
            14,
        ),
        opcode: LD {
            src: N8(
                2,
            ),
            dest: R8(
                C,
            ),
        },
        span: Span {
            start: 1338,
            end: 1340,
        },
    },
    Instruction {
        val: Unprefixed(
            205,
        ),
        opcode: CALL {
            cc: None,
            n16: 2562,
        },
        span: Span {
            start: 1340,
            end: 1343,
        },
    },
    Instruction {
        val: Unprefixed(
            19,
        ),
        opcode: INC(
            R16(
                DE,
            ),
        ),
        span: Span {
            start: 1343,
            end: 1344,
        },
    },
    Instruction {
        val: Unprefixed(
            19,
        ),
        opcode: INC(
            R16(
                DE,
            ),
        ),
        span: Span {
            start: 1344,
            end: 1345,
        },
    },
    Instruction {
        val: Unprefixed(
            19,
        ),
        opcode: INC(
            R16(
                DE,
            ),
        ),
        span: Span {
            start: 1345,
            end: 1346,
        },
    },
    Instruction {
        val: Unprefixed(
            19,
        ),
        opcode: INC(
            R16(
                DE,
            ),
        ),
        span: Span {
            start: 1346,
            end: 1347,
        },
    },
    Instruction {
        val: Unprefixed(
            19,
        ),
        opcode: INC(
            R16(
                DE,
            ),
        ),
        span: Span {
            start: 1347,
            end: 1348,
        },
    },
    Instruction {
        val: Unprefixed(
            19,
        ),
        opcode: INC(
            R16(
                DE,
            ),
        ),
        span: Span {
            start: 1348,
            end: 1349,
        },
    },
    Instruction {
        val: Unprefixed(
            225,
        ),
        opcode: POP(
            HL,
        ),
        span: Span {
            start: 1349,
            end: 1350,
        },
    },
    Instruction {
        val: Unprefixed(
            5,
        ),
        opcode: DEC(
            R8(
                B,
            ),
        ),
        span: Span {
            start: 1350,
            end: 1351,
        },
    },
    Instruction {
        val: Unprefixed(
            32,
        ),
        opcode: JR {
            cc: Some(
                NZ,
            ),
            e8: -16,
        },
        span: Span {
            start: 1351,
            end: 1353,
        },
    },
    Instruction {
        val: Unprefixed(
            17,
        ),
        opcode: LD {
            src: N16(
                17112,
            ),
            dest: R16(
                DE,
            ),
        },
        span: Span {
            start: 1353,
            end: 1356,
        },
    },
    Instruction {
        val: Unprefixed(
            14,
        ),
        opcode: LD {
            src: N8(
                2,
            ),
            dest: R8(
                C,
            ),
        },
        span: Span {
            start: 1356,
            end: 1358,
        },
    },
    Instruction {
        val: Unprefixed(
            205,
        ),
        opcode: CALL {
            cc: None,
            n16: 2562,
        },
        span: Span {
            start: 1358,
            end: 1361,
        },
    },
    Instruction {
        val: Unprefixed(
            17,
        ),
        opcode: LD {
            src: N16(
                19160,
            ),
            dest: R16(
                DE,
            ),
        },
        span: Span {
            start: 1361,
            end: 1364,
        },
    },
    Instruction {
        val: Unprefixed(
            14,
        ),
        opcode: LD {
            src: N8(
                2,
            ),
            dest: R8(
                C,
            ),
        },
        span: Span {
            start: 1364,
            end: 1366,
        },
    },
    Instruction {
        val: Unprefixed(
            205,
        ),
        opcode: CALL {
            cc: None,
            n16: 2562,
        },
        span: Span {
            start: 1366,
            end: 1369,
        },
    },
    Instruction {
        val: Unprefixed(
            43,
        ),
        opcode: DEC(
            R16(
                HL,
            ),
        ),
        span: Span {
            start: 1369,
            end: 1370,
        },
    },
    Instruction {
        val: Unprefixed(
            43,
        ),
        opcode: DEC(
            R16(
                HL,
            ),
        ),
        span: Span {
            start: 1370,
            end: 1371,
        },
    },
    Instruction {
        val: Unprefixed(
            17,
        ),
        opcode: LD {
            src: N16(
                17624,
            ),
            dest: R16(
                DE,
            ),
        },
        span: Span {
            start: 1371,
            end: 1374,
        },
    },
    Instruction {
        val: Unprefixed(
            14,
        ),
        opcode: LD {
            src: N8(
                2,
            ),
            dest: R8(
                C,
            ),
        },
        span: Span {
            start: 1374,
            end: 1376,
        },
    },
    Instruction {
        val: Unprefixed(
            205,
        ),
        opcode: CALL {
            cc: None,
            n16: 2562,
        },
        span: Span {
            start: 1376,
            end: 1379,
        },
    },
    Instruction {
        val: Unprefixed(
            201,
        ),
        opcode: RET(
            None,
        ),
        span: Span {
            start: 1379,
            end: 1380,
        },
    },
    Instruction {
        val: Unprefixed(
            14,
        ),
        opcode: LD {
            src: N8(
                96,
            ),
            dest: R8(
                C,
            ),
        },
        span: Span {
            start: 1380,
            end: 1382,
        },
    },
    Instruction {
        val: Unprefixed(
            42,
        ),
        opcode: LD {
            src: MEM_HLI,
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1382,
            end: 1383,
        },
    },
    Instruction {
        val: Unprefixed(
            229,
        ),
        opcode: PUSH(
            HL,
        ),
        span: Span {
            start: 1383,
            end: 1384,
        },
    },
    Instruction {
        val: Unprefixed(
            197,
        ),
        opcode: PUSH(
            BC,
        ),
        span: Span {
            start: 1384,
            end: 1385,
        },
    },
    Instruction {
        val: Unprefixed(
            33,
        ),
        opcode: LD {
            src: N16(
                59399,
            ),
            dest: R16(
                HL,
            ),
        },
        span: Span {
            start: 1385,
            end: 1388,
        },
    },
    Instruction {
        val: Unprefixed(
            6,
        ),
        opcode: LD {
            src: N8(
                0,
            ),
            dest: R8(
                B,
            ),
        },
        span: Span {
            start: 1388,
            end: 1390,
        },
    },
    Instruction {
        val: Unprefixed(
            79,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: R8(
                C,
            ),
        },
        span: Span {
            start: 1390,
            end: 1391,
        },
    },
    Instruction {
        val: Unprefixed(
            9,
        ),
        opcode: ADD_HL(
            BC,
        ),
        span: Span {
            start: 1391,
            end: 1392,
        },
    },
    Instruction {
        val: Unprefixed(
            14,
        ),
        opcode: LD {
            src: N8(
                8,
            ),
            dest: R8(
                C,
            ),
        },
        span: Span {
            start: 1392,
            end: 1394,
        },
    },
    Instruction {
        val: Unprefixed(
            205,
        ),
        opcode: CALL {
            cc: None,
            n16: 2562,
        },
        span: Span {
            start: 1394,
            end: 1397,
        },
    },
    Instruction {
        val: Unprefixed(
            193,
        ),
        opcode: POP(
            BC,
        ),
        span: Span {
            start: 1397,
            end: 1398,
        },
    },
    Instruction {
        val: Unprefixed(
            225,
        ),
        opcode: POP(
            HL,
        ),
        span: Span {
            start: 1398,
            end: 1399,
        },
    },
    Instruction {
        val: Unprefixed(
            13,
        ),
        opcode: DEC(
            R8(
                C,
            ),
        ),
        span: Span {
            start: 1399,
            end: 1400,
        },
    },
    Instruction {
        val: Unprefixed(
            32,
        ),
        opcode: JR {
            cc: Some(
                NZ,
            ),
            e8: -20,
        },
        span: Span {
            start: 1400,
            end: 1402,
        },
    },
    Instruction {
        val: Unprefixed(
            201,
        ),
        opcode: RET(
            None,
        ),
        span: Span {
            start: 1402,
            end: 1403,
        },
    },
    Instruction {
        val: Unprefixed(
            250,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: N16(
                2256,
            ),
        },
        span: Span {
            start: 1403,
            end: 1406,
        },
    },
    Instruction {
        val: Unprefixed(
            17,
        ),
        opcode: LD {
            src: N16(
                6144,
            ),
            dest: R16(
                DE,
            ),
        },
        span: Span {
            start: 1406,
            end: 1409,
        },
    },
    Instruction {
        val: Unprefixed(
            60,
        ),
        opcode: INC(
            R8(
                A,
            ),
        ),
        span: Span {
            start: 1409,
            end: 1410,
        },
    },
    Instruction {
        val: Unprefixed(
            61,
        ),
        opcode: DEC(
            R8(
                A,
            ),
        ),
        span: Span {
            start: 1410,
            end: 1411,
        },
    },
    Instruction {
        val: Unprefixed(
            40,
        ),
        opcode: JR {
            cc: Some(
                Z,
            ),
            e8: 3,
        },
        span: Span {
            start: 1411,
            end: 1413,
        },
    },
    Instruction {
        val: Unprefixed(
            25,
        ),
        opcode: ADD_HL(
            DE,
        ),
        span: Span {
            start: 1413,
            end: 1414,
        },
    },
    Instruction {
        val: Unprefixed(
            32,
        ),
        opcode: JR {
            cc: Some(
                NZ,
            ),
            e8: -6,
        },
        span: Span {
            start: 1414,
            end: 1416,
        },
    },
    Instruction {
        val: Unprefixed(
            201,
        ),
        opcode: RET(
            None,
        ),
        span: Span {
            start: 1416,
            end: 1417,
        },
    },
    Instruction {
        val: Unprefixed(
            205,
        ),
        opcode: CALL {
            cc: None,
            n16: 7426,
        },
        span: Span {
            start: 1417,
            end: 1420,
        },
    },
    Instruction {
        val: Unprefixed(
            120,
        ),
        opcode: LD {
            src: R8(
                B,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1420,
            end: 1421,
        },
    },
    Instruction {
        val: Unprefixed(
            230,
        ),
        opcode: AND(
            Constant(
                255,
            ),
        ),
        span: Span {
            start: 1421,
            end: 1423,
        },
    },
    Instruction {
        val: Unprefixed(
            40,
        ),
        opcode: JR {
            cc: Some(
                Z,
            ),
            e8: 15,
        },
        span: Span {
            start: 1423,
            end: 1425,
        },
    },
    Instruction {
        val: Unprefixed(
            33,
        ),
        opcode: LD {
            src: N16(
                58376,
            ),
            dest: R16(
                HL,
            ),
        },
        span: Span {
            start: 1425,
            end: 1428,
        },
    },
    Instruction {
        val: Unprefixed(
            6,
        ),
        opcode: LD {
            src: N8(
                0,
            ),
            dest: R8(
                B,
            ),
        },
        span: Span {
            start: 1428,
            end: 1430,
        },
    },
    Instruction {
        val: Unprefixed(
            42,
        ),
        opcode: LD {
            src: MEM_HLI,
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1430,
            end: 1431,
        },
    },
    Instruction {
        val: Unprefixed(
            185,
        ),
        opcode: CP(
            Register(
                C,
            ),
        ),
        span: Span {
            start: 1431,
            end: 1432,
        },
    },
    Instruction {
        val: Unprefixed(
            40,
        ),
        opcode: JR {
            cc: Some(
                Z,
            ),
            e8: 8,
        },
        span: Span {
            start: 1432,
            end: 1434,
        },
    },
    Instruction {
        val: Unprefixed(
            4,
        ),
        opcode: INC(
            R8(
                B,
            ),
        ),
        span: Span {
            start: 1434,
            end: 1435,
        },
    },
    Instruction {
        val: Unprefixed(
            120,
        ),
        opcode: LD {
            src: R8(
                B,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1435,
            end: 1436,
        },
    },
    Instruction {
        val: Unprefixed(
            254,
        ),
        opcode: CP(
            Constant(
                12,
            ),
        ),
        span: Span {
            start: 1436,
            end: 1438,
        },
    },
    Instruction {
        val: Unprefixed(
            32,
        ),
        opcode: JR {
            cc: Some(
                NZ,
            ),
            e8: -10,
        },
        span: Span {
            start: 1438,
            end: 1440,
        },
    },
    Instruction {
        val: Unprefixed(
            24,
        ),
        opcode: JR {
            cc: None,
            e8: 45,
        },
        span: Span {
            start: 1440,
            end: 1442,
        },
    },
    Instruction {
        val: Unprefixed(
            120,
        ),
        opcode: LD {
            src: R8(
                B,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1442,
            end: 1443,
        },
    },
    Instruction {
        val: Unprefixed(
            234,
        ),
        opcode: LD {
            src: N16(
                1488,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1443,
            end: 1446,
        },
    },
    Instruction {
        val: Unprefixed(
            62,
        ),
        opcode: LD {
            src: N8(
                30,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1446,
            end: 1448,
        },
    },
    Instruction {
        val: Unprefixed(
            234,
        ),
        opcode: LD {
            src: N16(
                720,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1448,
            end: 1451,
        },
    },
    Instruction {
        val: Unprefixed(
            17,
        ),
        opcode: LD {
            src: N16(
                2816,
            ),
            dest: R16(
                DE,
            ),
        },
        span: Span {
            start: 1451,
            end: 1454,
        },
    },
    Instruction {
        val: Unprefixed(
            25,
        ),
        opcode: ADD_HL(
            DE,
        ),
        span: Span {
            start: 1454,
            end: 1455,
        },
    },
    Instruction {
        val: Unprefixed(
            86,
        ),
        opcode: LD {
            src: R8(
                HL,
            ),
            dest: R8(
                D,
            ),
        },
        span: Span {
            start: 1455,
            end: 1456,
        },
    },
    Instruction {
        val: Unprefixed(
            122,
        ),
        opcode: LD {
            src: R8(
                D,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1456,
            end: 1457,
        },
    },
    Instruction {
        val: Unprefixed(
            230,
        ),
        opcode: AND(
            Constant(
                31,
            ),
        ),
        span: Span {
            start: 1457,
            end: 1459,
        },
    },
    Instruction {
        val: Unprefixed(
            95,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: R8(
                E,
            ),
        },
        span: Span {
            start: 1459,
            end: 1460,
        },
    },
    Instruction {
        val: Unprefixed(
            33,
        ),
        opcode: LD {
            src: N16(
                2256,
            ),
            dest: R16(
                HL,
            ),
        },
        span: Span {
            start: 1460,
            end: 1463,
        },
    },
    Instruction {
        val: Unprefixed(
            58,
        ),
        opcode: LD {
            src: MEM_HLD,
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1463,
            end: 1464,
        },
    },
    Instruction {
        val: Unprefixed(
            34,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: MEM_HLI,
        },
        span: Span {
            start: 1464,
            end: 1465,
        },
    },
    Instruction {
        val: Unprefixed(
            123,
        ),
        opcode: LD {
            src: R8(
                E,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1465,
            end: 1466,
        },
    },
    Instruction {
        val: Unprefixed(
            119,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: R8(
                HL,
            ),
        },
        span: Span {
            start: 1466,
            end: 1467,
        },
    },
    Instruction {
        val: Unprefixed(
            122,
        ),
        opcode: LD {
            src: R8(
                D,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1467,
            end: 1468,
        },
    },
    Instruction {
        val: Unprefixed(
            230,
        ),
        opcode: AND(
            Constant(
                224,
            ),
        ),
        span: Span {
            start: 1468,
            end: 1470,
        },
    },
    Instruction {
        val: Unprefixed(
            7,
        ),
        opcode: RLCA,
        span: Span {
            start: 1470,
            end: 1471,
        },
    },
    Instruction {
        val: Unprefixed(
            7,
        ),
        opcode: RLCA,
        span: Span {
            start: 1471,
            end: 1472,
        },
    },
    Instruction {
        val: Unprefixed(
            7,
        ),
        opcode: RLCA,
        span: Span {
            start: 1472,
            end: 1473,
        },
    },
    Instruction {
        val: Unprefixed(
            95,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: R8(
                E,
            ),
        },
        span: Span {
            start: 1473,
            end: 1474,
        },
    },
    Instruction {
        val: Unprefixed(
            33,
        ),
        opcode: LD {
            src: N16(
                3024,
            ),
            dest: R16(
                HL,
            ),
        },
        span: Span {
            start: 1474,
            end: 1477,
        },
    },
    Instruction {
        val: Unprefixed(
            58,
        ),
        opcode: LD {
            src: MEM_HLD,
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1477,
            end: 1478,
        },
    },
    Instruction {
        val: Unprefixed(
            34,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: MEM_HLI,
        },
        span: Span {
            start: 1478,
            end: 1479,
        },
    },
    Instruction {
        val: Unprefixed(
            123,
        ),
        opcode: LD {
            src: R8(
                E,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1479,
            end: 1480,
        },
    },
    Instruction {
        val: Unprefixed(
            119,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: R8(
                HL,
            ),
        },
        span: Span {
            start: 1480,
            end: 1481,
        },
    },
    Instruction {
        val: Unprefixed(
            205,
        ),
        opcode: CALL {
            cc: None,
            n16: 59652,
        },
        span: Span {
            start: 1481,
            end: 1484,
        },
    },
    Instruction {
        val: Unprefixed(
            205,
        ),
        opcode: CALL {
            cc: None,
            n16: 10245,
        },
        span: Span {
            start: 1484,
            end: 1487,
        },
    },
    Instruction {
        val: Unprefixed(
            201,
        ),
        opcode: RET(
            None,
        ),
        span: Span {
            start: 1487,
            end: 1488,
        },
    },
    Instruction {
        val: Unprefixed(
            205,
        ),
        opcode: CALL {
            cc: None,
            n16: 4354,
        },
        span: Span {
            start: 1488,
            end: 1491,
        },
    },
    Instruction {
        val: Unprefixed(
            250,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: N16(
                17153,
            ),
        },
        span: Span {
            start: 1491,
            end: 1494,
        },
    },
    Instruction {
        val: Prefixed(
            203,
        ),
        opcode: SET(
            BitArg {
                bit: 1,
                register: E,
            },
        ),
        span: Span {
            start: 1494,
            end: 1495,
        },
    },
    Instruction {
        val: Unprefixed(
            127,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1495,
            end: 1496,
        },
    },
    Instruction {
        val: Unprefixed(
            40,
        ),
        opcode: JR {
            cc: Some(
                Z,
            ),
            e8: 4,
        },
        span: Span {
            start: 1496,
            end: 1498,
        },
    },
    Instruction {
        val: Unprefixed(
            224,
        ),
        opcode: LDH {
            src: MEM_N16(
                65356,
            ),
            dest: A,
        },
        span: Span {
            start: 1498,
            end: 1500,
        },
    },
    Instruction {
        val: Unprefixed(
            24,
        ),
        opcode: JR {
            cc: None,
            e8: 40,
        },
        span: Span {
            start: 1500,
            end: 1502,
        },
    },
    Instruction {
        val: Unprefixed(
            62,
        ),
        opcode: LD {
            src: N8(
                4,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1502,
            end: 1504,
        },
    },
    Instruction {
        val: Unprefixed(
            224,
        ),
        opcode: LDH {
            src: MEM_N16(
                65356,
            ),
            dest: A,
        },
        span: Span {
            start: 1504,
            end: 1506,
        },
    },
    Instruction {
        val: Unprefixed(
            62,
        ),
        opcode: LD {
            src: N8(
                1,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1506,
            end: 1508,
        },
    },
    Instruction {
        val: Unprefixed(
            224,
        ),
        opcode: LDH {
            src: MEM_N16(
                65388,
            ),
            dest: A,
        },
        span: Span {
            start: 1508,
            end: 1510,
        },
    },
    Instruction {
        val: Unprefixed(
            33,
        ),
        opcode: LD {
            src: N16(
                218,
            ),
            dest: R16(
                HL,
            ),
        },
        span: Span {
            start: 1510,
            end: 1513,
        },
    },
    Instruction {
        val: Unprefixed(
            205,
        ),
        opcode: CALL {
            cc: None,
            n16: 31493,
        },
        span: Span {
            start: 1513,
            end: 1516,
        },
    },
    Instruction {
        val: Unprefixed(
            6,
        ),
        opcode: LD {
            src: N8(
                16,
            ),
            dest: R8(
                B,
            ),
        },
        span: Span {
            start: 1516,
            end: 1518,
        },
    },
    Instruction {
        val: Unprefixed(
            22,
        ),
        opcode: LD {
            src: N8(
                0,
            ),
            dest: R8(
                D,
            ),
        },
        span: Span {
            start: 1518,
            end: 1520,
        },
    },
    Instruction {
        val: Unprefixed(
            30,
        ),
        opcode: LD {
            src: N8(
                8,
            ),
            dest: R8(
                E,
            ),
        },
        span: Span {
            start: 1520,
            end: 1522,
        },
    },
    Instruction {
        val: Unprefixed(
            205,
        ),
        opcode: CALL {
            cc: None,
            n16: 18946,
        },
        span: Span {
            start: 1522,
            end: 1525,
        },
    },
    Instruction {
        val: Unprefixed(
            33,
        ),
        opcode: LD {
            src: N16(
                31232,
            ),
            dest: R16(
                HL,
            ),
        },
        span: Span {
            start: 1525,
            end: 1528,
        },
    },
    Instruction {
        val: Unprefixed(
            250,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: N16(
                208,
            ),
        },
        span: Span {
            start: 1528,
            end: 1531,
        },
    },
    Instruction {
        val: Unprefixed(
            71,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: R8(
                B,
            ),
        },
        span: Span {
            start: 1531,
            end: 1532,
        },
    },
    Instruction {
        val: Unprefixed(
            14,
        ),
        opcode: LD {
            src: N8(
                2,
            ),
            dest: R8(
                C,
            ),
        },
        span: Span {
            start: 1532,
            end: 1534,
        },
    },
    Instruction {
        val: Unprefixed(
            42,
        ),
        opcode: LD {
            src: MEM_HLI,
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1534,
            end: 1535,
        },
    },
    Instruction {
        val: Unprefixed(
            184,
        ),
        opcode: CP(
            Register(
                B,
            ),
        ),
        span: Span {
            start: 1535,
            end: 1536,
        },
    },
    Instruction {
        val: Unprefixed(
            204,
        ),
        opcode: CALL {
            cc: Some(
                Z,
            ),
            n16: 55811,
        },
        span: Span {
            start: 1536,
            end: 1539,
        },
    },
    Instruction {
        val: Unprefixed(
            13,
        ),
        opcode: DEC(
            R8(
                C,
            ),
        ),
        span: Span {
            start: 1539,
            end: 1540,
        },
    },
    Instruction {
        val: Unprefixed(
            32,
        ),
        opcode: JR {
            cc: Some(
                NZ,
            ),
            e8: -8,
        },
        span: Span {
            start: 1540,
            end: 1542,
        },
    },
    Instruction {
        val: Unprefixed(
            201,
        ),
        opcode: RET(
            None,
        ),
        span: Span {
            start: 1542,
            end: 1543,
        },
    },
    Instruction {
        val: Unprefixed(
            1,
        ),
        opcode: LD {
            src: N16(
                3903,
            ),
            dest: R16(
                BC,
            ),
        },
        span: Span {
            start: 1543,
            end: 1546,
        },
    },
    Instruction {
        val: Unprefixed(
            126,
        ),
        opcode: LD {
            src: R8(
                HL,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1546,
            end: 1547,
        },
    },
    Instruction {
        val: Unprefixed(
            255,
        ),
        opcode: RST(
            56,
        ),
        span: Span {
            start: 1547,
            end: 1548,
        },
    },
    Instruction {
        val: Unprefixed(
            255,
        ),
        opcode: RST(
            56,
        ),
        span: Span {
            start: 1548,
            end: 1549,
        },
    },
    Instruction {
        val: Unprefixed(
            192,
        ),
        opcode: RET(
            Some(
                NZ,
            ),
        ),
        span: Span {
            start: 1549,
            end: 1550,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 1550,
            end: 1551,
        },
    },
    Instruction {
        val: Unprefixed(
            192,
        ),
        opcode: RET(
            Some(
                NZ,
            ),
        ),
        span: Span {
            start: 1551,
            end: 1552,
        },
    },
    Instruction {
        val: Unprefixed(
            240,
        ),
        opcode: LDH {
            src: A,
            dest: MEM_N16(
                65521,
            ),
        },
        span: Span {
            start: 1552,
            end: 1554,
        },
    },
    Instruction {
        val: Unprefixed(
            3,
        ),
        opcode: INC(
            R16(
                BC,
            ),
        ),
        span: Span {
            start: 1554,
            end: 1555,
        },
    },
    Instruction {
        val: Unprefixed(
            124,
        ),
        opcode: LD {
            src: R8(
                H,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1555,
            end: 1556,
        },
    },
    Instruction {
        val: Unprefixed(
            252,
        ),
        opcode: Invalid(
            252,
        ),
        span: Span {
            start: 1556,
            end: 1557,
        },
    },
    Instruction {
        val: Unprefixed(
            254,
        ),
        opcode: CP(
            Constant(
                254,
            ),
        ),
        span: Span {
            start: 1557,
            end: 1559,
        },
    },
    Instruction {
        val: Unprefixed(
            3,
        ),
        opcode: INC(
            R16(
                BC,
            ),
        ),
        span: Span {
            start: 1559,
            end: 1560,
        },
    },
    Instruction {
        val: Unprefixed(
            7,
        ),
        opcode: RLCA,
        span: Span {
            start: 1560,
            end: 1561,
        },
    },
    Instruction {
        val: Unprefixed(
            7,
        ),
        opcode: RLCA,
        span: Span {
            start: 1561,
            end: 1562,
        },
    },
    Instruction {
        val: Unprefixed(
            15,
        ),
        opcode: RRCA,
        span: Span {
            start: 1562,
            end: 1563,
        },
    },
    Instruction {
        val: Unprefixed(
            224,
        ),
        opcode: LDH {
            src: MEM_N16(
                65504,
            ),
            dest: A,
        },
        span: Span {
            start: 1563,
            end: 1565,
        },
    },
    Instruction {
        val: Unprefixed(
            240,
        ),
        opcode: LDH {
            src: A,
            dest: MEM_N16(
                65520,
            ),
        },
        span: Span {
            start: 1565,
            end: 1567,
        },
    },
    Instruction {
        val: Unprefixed(
            30,
        ),
        opcode: LD {
            src: N8(
                62,
            ),
            dest: R8(
                E,
            ),
        },
        span: Span {
            start: 1567,
            end: 1569,
        },
    },
    Instruction {
        val: Unprefixed(
            126,
        ),
        opcode: LD {
            src: R8(
                HL,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1569,
            end: 1570,
        },
    },
    Instruction {
        val: Unprefixed(
            254,
        ),
        opcode: CP(
            Constant(
                15,
            ),
        ),
        span: Span {
            start: 1570,
            end: 1572,
        },
    },
    Instruction {
        val: Unprefixed(
            15,
        ),
        opcode: RRCA,
        span: Span {
            start: 1572,
            end: 1573,
        },
    },
    Instruction {
        val: Unprefixed(
            31,
        ),
        opcode: RRA,
        span: Span {
            start: 1573,
            end: 1574,
        },
    },
    Instruction {
        val: Unprefixed(
            31,
        ),
        opcode: RRA,
        span: Span {
            start: 1574,
            end: 1575,
        },
    },
    Instruction {
        val: Unprefixed(
            255,
        ),
        opcode: RST(
            56,
        ),
        span: Span {
            start: 1575,
            end: 1576,
        },
    },
    Instruction {
        val: Unprefixed(
            255,
        ),
        opcode: RST(
            56,
        ),
        span: Span {
            start: 1576,
            end: 1577,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 1577,
            end: 1578,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 1578,
            end: 1579,
        },
    },
    Instruction {
        val: Unprefixed(
            1,
        ),
        opcode: LD {
            src: N16(
                257,
            ),
            dest: R16(
                BC,
            ),
        },
        span: Span {
            start: 1579,
            end: 1582,
        },
    },
    Instruction {
        val: Unprefixed(
            3,
        ),
        opcode: INC(
            R16(
                BC,
            ),
        ),
        span: Span {
            start: 1582,
            end: 1583,
        },
    },
    Instruction {
        val: Unprefixed(
            255,
        ),
        opcode: RST(
            56,
        ),
        span: Span {
            start: 1583,
            end: 1584,
        },
    },
    Instruction {
        val: Unprefixed(
            255,
        ),
        opcode: RST(
            56,
        ),
        span: Span {
            start: 1584,
            end: 1585,
        },
    },
    Instruction {
        val: Unprefixed(
            225,
        ),
        opcode: POP(
            HL,
        ),
        span: Span {
            start: 1585,
            end: 1586,
        },
    },
    Instruction {
        val: Unprefixed(
            224,
        ),
        opcode: LDH {
            src: MEM_N16(
                65472,
            ),
            dest: A,
        },
        span: Span {
            start: 1586,
            end: 1588,
        },
    },
    Instruction {
        val: Unprefixed(
            240,
        ),
        opcode: LDH {
            src: A,
            dest: MEM_N16(
                65529,
            ),
        },
        span: Span {
            start: 1588,
            end: 1590,
        },
    },
    Instruction {
        val: Unprefixed(
            251,
        ),
        opcode: EI,
        span: Span {
            start: 1590,
            end: 1591,
        },
    },
    Instruction {
        val: Unprefixed(
            31,
        ),
        opcode: RRA,
        span: Span {
            start: 1591,
            end: 1592,
        },
    },
    Instruction {
        val: Unprefixed(
            127,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1592,
            end: 1593,
        },
    },
    Instruction {
        val: Unprefixed(
            248,
        ),
        opcode: LD_HL_SP_E8_OFFSET(
            -32,
        ),
        span: Span {
            start: 1593,
            end: 1595,
        },
    },
    Instruction {
        val: Unprefixed(
            243,
        ),
        opcode: DI,
        span: Span {
            start: 1595,
            end: 1596,
        },
    },
    Instruction {
        val: Unprefixed(
            253,
        ),
        opcode: Invalid(
            253,
        ),
        span: Span {
            start: 1596,
            end: 1597,
        },
    },
    Instruction {
        val: Unprefixed(
            62,
        ),
        opcode: LD {
            src: N8(
                30,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1597,
            end: 1599,
        },
    },
    Instruction {
        val: Unprefixed(
            224,
        ),
        opcode: LDH {
            src: MEM_N16(
                65520,
            ),
            dest: A,
        },
        span: Span {
            start: 1599,
            end: 1601,
        },
    },
    Instruction {
        val: Unprefixed(
            249,
        ),
        opcode: LD_SP_HL,
        span: Span {
            start: 1601,
            end: 1602,
        },
    },
    Instruction {
        val: Unprefixed(
            127,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1602,
            end: 1603,
        },
    },
    Instruction {
        val: Unprefixed(
            62,
        ),
        opcode: LD {
            src: N8(
                124,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1603,
            end: 1605,
        },
    },
    Instruction {
        val: Unprefixed(
            248,
        ),
        opcode: LD_HL_SP_E8_OFFSET(
            -32,
        ),
        span: Span {
            start: 1605,
            end: 1607,
        },
    },
    Instruction {
        val: Unprefixed(
            248,
        ),
        opcode: LD_HL_SP_E8_OFFSET(
            -16,
        ),
        span: Span {
            start: 1607,
            end: 1609,
        },
    },
    Instruction {
        val: Unprefixed(
            240,
        ),
        opcode: LDH {
            src: A,
            dest: MEM_N16(
                65528,
            ),
        },
        span: Span {
            start: 1609,
            end: 1611,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 1611,
            end: 1612,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 1612,
            end: 1613,
        },
    },
    Instruction {
        val: Unprefixed(
            127,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1613,
            end: 1614,
        },
    },
    Instruction {
        val: Unprefixed(
            127,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1614,
            end: 1615,
        },
    },
    Instruction {
        val: Unprefixed(
            7,
        ),
        opcode: RLCA,
        span: Span {
            start: 1615,
            end: 1616,
        },
    },
    Instruction {
        val: Unprefixed(
            15,
        ),
        opcode: RRCA,
        span: Span {
            start: 1616,
            end: 1617,
        },
    },
    Instruction {
        val: Unprefixed(
            159,
        ),
        opcode: SBC(
            Register(
                A,
            ),
        ),
        span: Span {
            start: 1617,
            end: 1618,
        },
    },
    Instruction {
        val: Unprefixed(
            191,
        ),
        opcode: CP(
            Register(
                A,
            ),
        ),
        span: Span {
            start: 1618,
            end: 1619,
        },
    },
    Instruction {
        val: Unprefixed(
            158,
        ),
        opcode: SBC(
            Register(
                HL,
            ),
        ),
        span: Span {
            start: 1619,
            end: 1620,
        },
    },
    Instruction {
        val: Unprefixed(
            31,
        ),
        opcode: RRA,
        span: Span {
            start: 1620,
            end: 1621,
        },
    },
    Instruction {
        val: Unprefixed(
            255,
        ),
        opcode: RST(
            56,
        ),
        span: Span {
            start: 1621,
            end: 1622,
        },
    },
    Instruction {
        val: Unprefixed(
            255,
        ),
        opcode: RST(
            56,
        ),
        span: Span {
            start: 1622,
            end: 1623,
        },
    },
    Instruction {
        val: Unprefixed(
            15,
        ),
        opcode: RRCA,
        span: Span {
            start: 1623,
            end: 1624,
        },
    },
    Instruction {
        val: Unprefixed(
            30,
        ),
        opcode: LD {
            src: N8(
                62,
            ),
            dest: R8(
                E,
            ),
        },
        span: Span {
            start: 1624,
            end: 1626,
        },
    },
    Instruction {
        val: Unprefixed(
            60,
        ),
        opcode: INC(
            R8(
                A,
            ),
        ),
        span: Span {
            start: 1626,
            end: 1627,
        },
    },
    Instruction {
        val: Unprefixed(
            241,
        ),
        opcode: POP(
            AF,
        ),
        span: Span {
            start: 1627,
            end: 1628,
        },
    },
    Instruction {
        val: Unprefixed(
            251,
        ),
        opcode: EI,
        span: Span {
            start: 1628,
            end: 1629,
        },
    },
    Instruction {
        val: Unprefixed(
            127,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1629,
            end: 1630,
        },
    },
    Instruction {
        val: Unprefixed(
            127,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1630,
            end: 1631,
        },
    },
    Instruction {
        val: Unprefixed(
            254,
        ),
        opcode: CP(
            Constant(
                222,
            ),
        ),
        span: Span {
            start: 1631,
            end: 1633,
        },
    },
    Instruction {
        val: Unprefixed(
            223,
        ),
        opcode: RST(
            24,
        ),
        span: Span {
            start: 1633,
            end: 1634,
        },
    },
    Instruction {
        val: Unprefixed(
            159,
        ),
        opcode: SBC(
            Register(
                A,
            ),
        ),
        span: Span {
            start: 1634,
            end: 1635,
        },
    },
    Instruction {
        val: Unprefixed(
            31,
        ),
        opcode: RRA,
        span: Span {
            start: 1635,
            end: 1636,
        },
    },
    Instruction {
        val: Unprefixed(
            63,
        ),
        opcode: CCF,
        span: Span {
            start: 1636,
            end: 1637,
        },
    },
    Instruction {
        val: Unprefixed(
            62,
        ),
        opcode: LD {
            src: N8(
                60,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1637,
            end: 1639,
        },
    },
    Instruction {
        val: Unprefixed(
            248,
        ),
        opcode: LD_HL_SP_E8_OFFSET(
            -8,
        ),
        span: Span {
            start: 1639,
            end: 1641,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 1641,
            end: 1642,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 1642,
            end: 1643,
        },
    },
    Instruction {
        val: Unprefixed(
            3,
        ),
        opcode: INC(
            R16(
                BC,
            ),
        ),
        span: Span {
            start: 1643,
            end: 1644,
        },
    },
    Instruction {
        val: Unprefixed(
            3,
        ),
        opcode: INC(
            R16(
                BC,
            ),
        ),
        span: Span {
            start: 1644,
            end: 1645,
        },
    },
    Instruction {
        val: Unprefixed(
            7,
        ),
        opcode: RLCA,
        span: Span {
            start: 1645,
            end: 1646,
        },
    },
    Instruction {
        val: Unprefixed(
            7,
        ),
        opcode: RLCA,
        span: Span {
            start: 1646,
            end: 1647,
        },
    },
    Instruction {
        val: Unprefixed(
            255,
        ),
        opcode: RST(
            56,
        ),
        span: Span {
            start: 1647,
            end: 1648,
        },
    },
    Instruction {
        val: Unprefixed(
            255,
        ),
        opcode: RST(
            56,
        ),
        span: Span {
            start: 1648,
            end: 1649,
        },
    },
    Instruction {
        val: Unprefixed(
            193,
        ),
        opcode: POP(
            BC,
        ),
        span: Span {
            start: 1649,
            end: 1650,
        },
    },
    Instruction {
        val: Unprefixed(
            192,
        ),
        opcode: RET(
            Some(
                NZ,
            ),
        ),
        span: Span {
            start: 1650,
            end: 1651,
        },
    },
    Instruction {
        val: Unprefixed(
            243,
        ),
        opcode: DI,
        span: Span {
            start: 1651,
            end: 1652,
        },
    },
    Instruction {
        val: Unprefixed(
            231,
        ),
        opcode: RST(
            32,
        ),
        span: Span {
            start: 1652,
            end: 1653,
        },
    },
    Instruction {
        val: Unprefixed(
            247,
        ),
        opcode: RST(
            48,
        ),
        span: Span {
            start: 1653,
            end: 1654,
        },
    },
    Instruction {
        val: Unprefixed(
            243,
        ),
        opcode: DI,
        span: Span {
            start: 1654,
            end: 1655,
        },
    },
    Instruction {
        val: Unprefixed(
            192,
        ),
        opcode: RET(
            Some(
                NZ,
            ),
        ),
        span: Span {
            start: 1655,
            end: 1656,
        },
    },
    Instruction {
        val: Unprefixed(
            192,
        ),
        opcode: RET(
            Some(
                NZ,
            ),
        ),
        span: Span {
            start: 1656,
            end: 1657,
        },
    },
    Instruction {
        val: Unprefixed(
            192,
        ),
        opcode: RET(
            Some(
                NZ,
            ),
        ),
        span: Span {
            start: 1657,
            end: 1658,
        },
    },
    Instruction {
        val: Unprefixed(
            192,
        ),
        opcode: RET(
            Some(
                NZ,
            ),
        ),
        span: Span {
            start: 1658,
            end: 1659,
        },
    },
    Instruction {
        val: Unprefixed(
            31,
        ),
        opcode: RRA,
        span: Span {
            start: 1659,
            end: 1660,
        },
    },
    Instruction {
        val: Unprefixed(
            31,
        ),
        opcode: RRA,
        span: Span {
            start: 1660,
            end: 1661,
        },
    },
    Instruction {
        val: Unprefixed(
            30,
        ),
        opcode: LD {
            src: N8(
                62,
            ),
            dest: R8(
                E,
            ),
        },
        span: Span {
            start: 1661,
            end: 1663,
        },
    },
    Instruction {
        val: Unprefixed(
            63,
        ),
        opcode: CCF,
        span: Span {
            start: 1663,
            end: 1664,
        },
    },
    Instruction {
        val: Unprefixed(
            31,
        ),
        opcode: RRA,
        span: Span {
            start: 1664,
            end: 1665,
        },
    },
    Instruction {
        val: Unprefixed(
            62,
        ),
        opcode: LD {
            src: N8(
                62,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1665,
            end: 1667,
        },
    },
    Instruction {
        val: Unprefixed(
            128,
        ),
        opcode: ADD(
            Register(
                B,
            ),
        ),
        span: Span {
            start: 1667,
            end: 1668,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 1668,
            end: 1669,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 1669,
            end: 1670,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 1670,
            end: 1671,
        },
    },
    Instruction {
        val: Unprefixed(
            124,
        ),
        opcode: LD {
            src: R8(
                H,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1671,
            end: 1672,
        },
    },
    Instruction {
        val: Unprefixed(
            31,
        ),
        opcode: RRA,
        span: Span {
            start: 1672,
            end: 1673,
        },
    },
    Instruction {
        val: Unprefixed(
            7,
        ),
        opcode: RLCA,
        span: Span {
            start: 1673,
            end: 1674,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 1674,
            end: 1675,
        },
    },
    Instruction {
        val: Unprefixed(
            15,
        ),
        opcode: RRCA,
        span: Span {
            start: 1675,
            end: 1676,
        },
    },
    Instruction {
        val: Unprefixed(
            255,
        ),
        opcode: RST(
            56,
        ),
        span: Span {
            start: 1676,
            end: 1677,
        },
    },
    Instruction {
        val: Unprefixed(
            254,
        ),
        opcode: CP(
            Constant(
                0,
            ),
        ),
        span: Span {
            start: 1677,
            end: 1679,
        },
    },
    Instruction {
        val: Unprefixed(
            124,
        ),
        opcode: LD {
            src: R8(
                H,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1679,
            end: 1680,
        },
    },
    Instruction {
        val: Unprefixed(
            248,
        ),
        opcode: LD_HL_SP_E8_OFFSET(
            -16,
        ),
        span: Span {
            start: 1680,
            end: 1682,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 1682,
            end: 1683,
        },
    },
    Instruction {
        val: Unprefixed(
            31,
        ),
        opcode: RRA,
        span: Span {
            start: 1683,
            end: 1684,
        },
    },
    Instruction {
        val: Unprefixed(
            15,
        ),
        opcode: RRCA,
        span: Span {
            start: 1684,
            end: 1685,
        },
    },
    Instruction {
        val: Unprefixed(
            15,
        ),
        opcode: RRCA,
        span: Span {
            start: 1685,
            end: 1686,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 1686,
            end: 1687,
        },
    },
    Instruction {
        val: Unprefixed(
            124,
        ),
        opcode: LD {
            src: R8(
                H,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1687,
            end: 1688,
        },
    },
    Instruction {
        val: Unprefixed(
            248,
        ),
        opcode: LD_HL_SP_E8_OFFSET(
            -8,
        ),
        span: Span {
            start: 1688,
            end: 1690,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 1690,
            end: 1691,
        },
    },
    Instruction {
        val: Unprefixed(
            63,
        ),
        opcode: CCF,
        span: Span {
            start: 1691,
            end: 1692,
        },
    },
    Instruction {
        val: Unprefixed(
            62,
        ),
        opcode: LD {
            src: N8(
                28,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1692,
            end: 1694,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 1694,
            end: 1695,
        },
    },
    Instruction {
        val: Unprefixed(
            15,
        ),
        opcode: RRCA,
        span: Span {
            start: 1695,
            end: 1696,
        },
    },
    Instruction {
        val: Unprefixed(
            15,
        ),
        opcode: RRCA,
        span: Span {
            start: 1696,
            end: 1697,
        },
    },
    Instruction {
        val: Unprefixed(
            15,
        ),
        opcode: RRCA,
        span: Span {
            start: 1697,
            end: 1698,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 1698,
            end: 1699,
        },
    },
    Instruction {
        val: Unprefixed(
            124,
        ),
        opcode: LD {
            src: R8(
                H,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1699,
            end: 1700,
        },
    },
    Instruction {
        val: Unprefixed(
            255,
        ),
        opcode: RST(
            56,
        ),
        span: Span {
            start: 1700,
            end: 1701,
        },
    },
    Instruction {
        val: Unprefixed(
            255,
        ),
        opcode: RST(
            56,
        ),
        span: Span {
            start: 1701,
            end: 1702,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 1702,
            end: 1703,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 1703,
            end: 1704,
        },
    },
    Instruction {
        val: Unprefixed(
            248,
        ),
        opcode: LD_HL_SP_E8_OFFSET(
            -8,
        ),
        span: Span {
            start: 1704,
            end: 1706,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 1706,
            end: 1707,
        },
    },
    Instruction {
        val: Unprefixed(
            7,
        ),
        opcode: RLCA,
        span: Span {
            start: 1707,
            end: 1708,
        },
    },
    Instruction {
        val: Unprefixed(
            15,
        ),
        opcode: RRCA,
        span: Span {
            start: 1708,
            end: 1709,
        },
    },
    Instruction {
        val: Unprefixed(
            15,
        ),
        opcode: RRCA,
        span: Span {
            start: 1709,
            end: 1710,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 1710,
            end: 1711,
        },
    },
    Instruction {
        val: Unprefixed(
            129,
        ),
        opcode: ADD(
            Register(
                C,
            ),
        ),
        span: Span {
            start: 1711,
            end: 1712,
        },
    },
    Instruction {
        val: Unprefixed(
            255,
        ),
        opcode: RST(
            56,
        ),
        span: Span {
            start: 1712,
            end: 1713,
        },
    },
    Instruction {
        val: Unprefixed(
            255,
        ),
        opcode: RST(
            56,
        ),
        span: Span {
            start: 1713,
            end: 1714,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 1714,
            end: 1715,
        },
    },
    Instruction {
        val: Unprefixed(
            243,
        ),
        opcode: DI,
        span: Span {
            start: 1715,
            end: 1716,
        },
    },
    Instruction {
        val: Unprefixed(
            225,
        ),
        opcode: POP(
            HL,
        ),
        span: Span {
            start: 1716,
            end: 1717,
        },
    },
    Instruction {
        val: Unprefixed(
            128,
        ),
        opcode: ADD(
            Register(
                B,
            ),
        ),
        span: Span {
            start: 1717,
            end: 1718,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 1718,
            end: 1719,
        },
    },
    Instruction {
        val: Unprefixed(
            224,
        ),
        opcode: LDH {
            src: MEM_N16(
                65535,
            ),
            dest: A,
        },
        span: Span {
            start: 1719,
            end: 1721,
        },
    },
    Instruction {
        val: Unprefixed(
            127,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1721,
            end: 1722,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 1722,
            end: 1723,
        },
    },
    Instruction {
        val: Unprefixed(
            252,
        ),
        opcode: Invalid(
            252,
        ),
        span: Span {
            start: 1723,
            end: 1724,
        },
    },
    Instruction {
        val: Unprefixed(
            240,
        ),
        opcode: LDH {
            src: A,
            dest: MEM_N16(
                65472,
            ),
        },
        span: Span {
            start: 1724,
            end: 1726,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 1726,
            end: 1727,
        },
    },
    Instruction {
        val: Unprefixed(
            62,
        ),
        opcode: LD {
            src: N8(
                124,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1727,
            end: 1729,
        },
    },
    Instruction {
        val: Unprefixed(
            124,
        ),
        opcode: LD {
            src: R8(
                H,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1729,
            end: 1730,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 1730,
            end: 1731,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 1731,
            end: 1732,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 1732,
            end: 1733,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 1733,
            end: 1734,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 1734,
            end: 1735,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 1735,
            end: 1736,
        },
    },
    Instruction {
        val: Unprefixed(
            136,
        ),
        opcode: ADC(
            Register(
                B,
            ),
        ),
        span: Span {
            start: 1736,
            end: 1737,
        },
    },
    Instruction {
        val: Unprefixed(
            22,
        ),
        opcode: LD {
            src: N8(
                54,
            ),
            dest: R8(
                D,
            ),
        },
        span: Span {
            start: 1737,
            end: 1739,
        },
    },
    Instruction {
        val: Unprefixed(
            209,
        ),
        opcode: POP(
            DE,
        ),
        span: Span {
            start: 1739,
            end: 1740,
        },
    },
    Instruction {
        val: Unprefixed(
            219,
        ),
        opcode: Invalid(
            219,
        ),
        span: Span {
            start: 1740,
            end: 1741,
        },
    },
    Instruction {
        val: Unprefixed(
            242,
        ),
        opcode: LDH {
            src: A,
            dest: MEM_C,
        },
        span: Span {
            start: 1741,
            end: 1743,
        },
    },
    Instruction {
        val: Unprefixed(
            140,
        ),
        opcode: ADC(
            Register(
                H,
            ),
        ),
        span: Span {
            start: 1743,
            end: 1744,
        },
    },
    Instruction {
        val: Unprefixed(
            146,
        ),
        opcode: SUB(
            Register(
                D,
            ),
        ),
        span: Span {
            start: 1744,
            end: 1745,
        },
    },
    Instruction {
        val: Unprefixed(
            61,
        ),
        opcode: DEC(
            R8(
                A,
            ),
        ),
        span: Span {
            start: 1745,
            end: 1746,
        },
    },
    Instruction {
        val: Unprefixed(
            92,
        ),
        opcode: LD {
            src: R8(
                H,
            ),
            dest: R8(
                E,
            ),
        },
        span: Span {
            start: 1746,
            end: 1747,
        },
    },
    Instruction {
        val: Unprefixed(
            88,
        ),
        opcode: LD {
            src: R8(
                B,
            ),
            dest: R8(
                E,
            ),
        },
        span: Span {
            start: 1747,
            end: 1748,
        },
    },
    Instruction {
        val: Unprefixed(
            201,
        ),
        opcode: RET(
            None,
        ),
        span: Span {
            start: 1748,
            end: 1749,
        },
    },
    Instruction {
        val: Unprefixed(
            62,
        ),
        opcode: LD {
            src: N8(
                112,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1749,
            end: 1751,
        },
    },
    Instruction {
        val: Unprefixed(
            29,
        ),
        opcode: DEC(
            R8(
                E,
            ),
        ),
        span: Span {
            start: 1751,
            end: 1752,
        },
    },
    Instruction {
        val: Unprefixed(
            89,
        ),
        opcode: LD {
            src: R8(
                C,
            ),
            dest: R8(
                E,
            ),
        },
        span: Span {
            start: 1752,
            end: 1753,
        },
    },
    Instruction {
        val: Unprefixed(
            105,
        ),
        opcode: LD {
            src: R8(
                C,
            ),
            dest: R8(
                L,
            ),
        },
        span: Span {
            start: 1753,
            end: 1754,
        },
    },
    Instruction {
        val: Unprefixed(
            25,
        ),
        opcode: ADD_HL(
            DE,
        ),
        span: Span {
            start: 1754,
            end: 1755,
        },
    },
    Instruction {
        val: Unprefixed(
            53,
        ),
        opcode: DEC(
            R8(
                HL,
            ),
        ),
        span: Span {
            start: 1755,
            end: 1756,
        },
    },
    Instruction {
        val: Unprefixed(
            168,
        ),
        opcode: XOR(
            Register(
                B,
            ),
        ),
        span: Span {
            start: 1756,
            end: 1757,
        },
    },
    Instruction {
        val: Unprefixed(
            20,
        ),
        opcode: INC(
            R8(
                D,
            ),
        ),
        span: Span {
            start: 1757,
            end: 1758,
        },
    },
    Instruction {
        val: Unprefixed(
            170,
        ),
        opcode: XOR(
            Register(
                D,
            ),
        ),
        span: Span {
            start: 1758,
            end: 1759,
        },
    },
    Instruction {
        val: Unprefixed(
            117,
        ),
        opcode: LD {
            src: R8(
                L,
            ),
            dest: R8(
                HL,
            ),
        },
        span: Span {
            start: 1759,
            end: 1760,
        },
    },
    Instruction {
        val: Unprefixed(
            149,
        ),
        opcode: SUB(
            Register(
                L,
            ),
        ),
        span: Span {
            start: 1760,
            end: 1761,
        },
    },
    Instruction {
        val: Unprefixed(
            153,
        ),
        opcode: SBC(
            Register(
                C,
            ),
        ),
        span: Span {
            start: 1761,
            end: 1762,
        },
    },
    Instruction {
        val: Unprefixed(
            52,
        ),
        opcode: INC(
            R8(
                HL,
            ),
        ),
        span: Span {
            start: 1762,
            end: 1763,
        },
    },
    Instruction {
        val: Unprefixed(
            111,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: R8(
                L,
            ),
        },
        span: Span {
            start: 1763,
            end: 1764,
        },
    },
    Instruction {
        val: Unprefixed(
            21,
        ),
        opcode: DEC(
            R8(
                D,
            ),
        ),
        span: Span {
            start: 1764,
            end: 1765,
        },
    },
    Instruction {
        val: Unprefixed(
            255,
        ),
        opcode: RST(
            56,
        ),
        span: Span {
            start: 1765,
            end: 1766,
        },
    },
    Instruction {
        val: Unprefixed(
            151,
        ),
        opcode: SUB(
            Register(
                A,
            ),
        ),
        span: Span {
            start: 1766,
            end: 1767,
        },
    },
    Instruction {
        val: Unprefixed(
            75,
        ),
        opcode: LD {
            src: R8(
                E,
            ),
            dest: R8(
                C,
            ),
        },
        span: Span {
            start: 1767,
            end: 1768,
        },
    },
    Instruction {
        val: Unprefixed(
            144,
        ),
        opcode: SUB(
            Register(
                B,
            ),
        ),
        span: Span {
            start: 1768,
            end: 1769,
        },
    },
    Instruction {
        val: Unprefixed(
            23,
        ),
        opcode: RLA,
        span: Span {
            start: 1769,
            end: 1770,
        },
    },
    Instruction {
        val: Unprefixed(
            16,
        ),
        opcode: STOP,
        span: Span {
            start: 1770,
            end: 1771,
        },
    },
    Instruction {
        val: Unprefixed(
            57,
        ),
        opcode: ADD_HL_SP,
        span: Span {
            start: 1771,
            end: 1772,
        },
    },
    Instruction {
        val: Unprefixed(
            247,
        ),
        opcode: RST(
            48,
        ),
        span: Span {
            start: 1772,
            end: 1773,
        },
    },
    Instruction {
        val: Unprefixed(
            246,
        ),
        opcode: OR(
            Constant(
                162,
            ),
        ),
        span: Span {
            start: 1773,
            end: 1775,
        },
    },
    Instruction {
        val: Unprefixed(
            73,
        ),
        opcode: LD {
            src: R8(
                C,
            ),
            dest: R8(
                C,
            ),
        },
        span: Span {
            start: 1775,
            end: 1776,
        },
    },
    Instruction {
        val: Unprefixed(
            78,
        ),
        opcode: LD {
            src: R8(
                HL,
            ),
            dest: R8(
                C,
            ),
        },
        span: Span {
            start: 1776,
            end: 1777,
        },
    },
    Instruction {
        val: Unprefixed(
            67,
        ),
        opcode: LD {
            src: R8(
                E,
            ),
            dest: R8(
                B,
            ),
        },
        span: Span {
            start: 1777,
            end: 1778,
        },
    },
    Instruction {
        val: Unprefixed(
            104,
        ),
        opcode: LD {
            src: R8(
                B,
            ),
            dest: R8(
                L,
            ),
        },
        span: Span {
            start: 1778,
            end: 1779,
        },
    },
    Instruction {
        val: Unprefixed(
            224,
        ),
        opcode: LDH {
            src: MEM_N16(
                65419,
            ),
            dest: A,
        },
        span: Span {
            start: 1779,
            end: 1781,
        },
    },
    Instruction {
        val: Unprefixed(
            240,
        ),
        opcode: LDH {
            src: A,
            dest: MEM_N16(
                65486,
            ),
        },
        span: Span {
            start: 1781,
            end: 1783,
        },
    },
    Instruction {
        val: Unprefixed(
            12,
        ),
        opcode: INC(
            R8(
                C,
            ),
        ),
        span: Span {
            start: 1783,
            end: 1784,
        },
    },
    Instruction {
        val: Unprefixed(
            41,
        ),
        opcode: ADD_HL(
            HL,
        ),
        span: Span {
            start: 1784,
            end: 1785,
        },
    },
    Instruction {
        val: Unprefixed(
            232,
        ),
        opcode: ADD_SP(
            -73,
        ),
        span: Span {
            start: 1785,
            end: 1787,
        },
    },
    Instruction {
        val: Unprefixed(
            134,
        ),
        opcode: ADD(
            Register(
                HL,
            ),
        ),
        span: Span {
            start: 1787,
            end: 1788,
        },
    },
    Instruction {
        val: Unprefixed(
            154,
        ),
        opcode: SBC(
            Register(
                D,
            ),
        ),
        span: Span {
            start: 1788,
            end: 1789,
        },
    },
    Instruction {
        val: Unprefixed(
            82,
        ),
        opcode: LD {
            src: R8(
                D,
            ),
            dest: R8(
                D,
            ),
        },
        span: Span {
            start: 1789,
            end: 1790,
        },
    },
    Instruction {
        val: Unprefixed(
            1,
        ),
        opcode: LD {
            src: N16(
                40305,
            ),
            dest: R16(
                BC,
            ),
        },
        span: Span {
            start: 1790,
            end: 1793,
        },
    },
    Instruction {
        val: Unprefixed(
            156,
        ),
        opcode: SBC(
            Register(
                H,
            ),
        ),
        span: Span {
            start: 1793,
            end: 1794,
        },
    },
    Instruction {
        val: Unprefixed(
            189,
        ),
        opcode: CP(
            Register(
                L,
            ),
        ),
        span: Span {
            start: 1794,
            end: 1795,
        },
    },
    Instruction {
        val: Unprefixed(
            93,
        ),
        opcode: LD {
            src: R8(
                L,
            ),
            dest: R8(
                E,
            ),
        },
        span: Span {
            start: 1795,
            end: 1796,
        },
    },
    Instruction {
        val: Unprefixed(
            109,
        ),
        opcode: LD {
            src: R8(
                L,
            ),
            dest: R8(
                L,
            ),
        },
        span: Span {
            start: 1796,
            end: 1797,
        },
    },
    Instruction {
        val: Unprefixed(
            103,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: R8(
                H,
            ),
        },
        span: Span {
            start: 1797,
            end: 1798,
        },
    },
    Instruction {
        val: Unprefixed(
            63,
        ),
        opcode: CCF,
        span: Span {
            start: 1798,
            end: 1799,
        },
    },
    Instruction {
        val: Unprefixed(
            107,
        ),
        opcode: LD {
            src: R8(
                E,
            ),
            dest: R8(
                L,
            ),
        },
        span: Span {
            start: 1799,
            end: 1800,
        },
    },
    Instruction {
        val: Unprefixed(
            179,
        ),
        opcode: OR(
            Register(
                E,
            ),
        ),
        span: Span {
            start: 1800,
            end: 1801,
        },
    },
    Instruction {
        val: Unprefixed(
            70,
        ),
        opcode: LD {
            src: R8(
                HL,
            ),
            dest: R8(
                B,
            ),
        },
        span: Span {
            start: 1801,
            end: 1802,
        },
    },
    Instruction {
        val: Unprefixed(
            40,
        ),
        opcode: JR {
            cc: Some(
                Z,
            ),
            e8: -91,
        },
        span: Span {
            start: 1802,
            end: 1804,
        },
    },
    Instruction {
        val: Unprefixed(
            198,
        ),
        opcode: ADD(
            Constant(
                211,
            ),
        ),
        span: Span {
            start: 1804,
            end: 1806,
        },
    },
    Instruction {
        val: Unprefixed(
            39,
        ),
        opcode: DAA,
        span: Span {
            start: 1806,
            end: 1807,
        },
    },
    Instruction {
        val: Unprefixed(
            97,
        ),
        opcode: LD {
            src: R8(
                C,
            ),
            dest: R8(
                H,
            ),
        },
        span: Span {
            start: 1807,
            end: 1808,
        },
    },
    Instruction {
        val: Unprefixed(
            24,
        ),
        opcode: JR {
            cc: None,
            e8: 102,
        },
        span: Span {
            start: 1808,
            end: 1810,
        },
    },
    Instruction {
        val: Unprefixed(
            106,
        ),
        opcode: LD {
            src: R8(
                D,
            ),
            dest: R8(
                L,
            ),
        },
        span: Span {
            start: 1810,
            end: 1811,
        },
    },
    Instruction {
        val: Unprefixed(
            191,
        ),
        opcode: CP(
            Register(
                A,
            ),
        ),
        span: Span {
            start: 1811,
            end: 1812,
        },
    },
    Instruction {
        val: Unprefixed(
            13,
        ),
        opcode: DEC(
            R8(
                C,
            ),
        ),
        span: Span {
            start: 1812,
            end: 1813,
        },
    },
    Instruction {
        val: Unprefixed(
            244,
        ),
        opcode: Invalid(
            244,
        ),
        span: Span {
            start: 1813,
            end: 1814,
        },
    },
    Instruction {
        val: Unprefixed(
            66,
        ),
        opcode: LD {
            src: R8(
                D,
            ),
            dest: R8(
                B,
            ),
        },
        span: Span {
            start: 1814,
            end: 1815,
        },
    },
    Instruction {
        val: Unprefixed(
            69,
        ),
        opcode: LD {
            src: R8(
                L,
            ),
            dest: R8(
                B,
            ),
        },
        span: Span {
            start: 1815,
            end: 1816,
        },
    },
    Instruction {
        val: Unprefixed(
            70,
        ),
        opcode: LD {
            src: R8(
                HL,
            ),
            dest: R8(
                B,
            ),
        },
        span: Span {
            start: 1816,
            end: 1817,
        },
    },
    Instruction {
        val: Unprefixed(
            65,
        ),
        opcode: LD {
            src: R8(
                C,
            ),
            dest: R8(
                B,
            ),
        },
        span: Span {
            start: 1817,
            end: 1818,
        },
    },
    Instruction {
        val: Unprefixed(
            65,
        ),
        opcode: LD {
            src: R8(
                C,
            ),
            dest: R8(
                B,
            ),
        },
        span: Span {
            start: 1818,
            end: 1819,
        },
    },
    Instruction {
        val: Unprefixed(
            82,
        ),
        opcode: LD {
            src: R8(
                D,
            ),
            dest: R8(
                D,
            ),
        },
        span: Span {
            start: 1819,
            end: 1820,
        },
    },
    Instruction {
        val: Unprefixed(
            66,
        ),
        opcode: LD {
            src: R8(
                D,
            ),
            dest: R8(
                B,
            ),
        },
        span: Span {
            start: 1820,
            end: 1821,
        },
    },
    Instruction {
        val: Unprefixed(
            69,
        ),
        opcode: LD {
            src: R8(
                L,
            ),
            dest: R8(
                B,
            ),
        },
        span: Span {
            start: 1821,
            end: 1822,
        },
    },
    Instruction {
        val: Unprefixed(
            75,
        ),
        opcode: LD {
            src: R8(
                E,
            ),
            dest: R8(
                C,
            ),
        },
        span: Span {
            start: 1822,
            end: 1823,
        },
    },
    Instruction {
        val: Unprefixed(
            69,
        ),
        opcode: LD {
            src: R8(
                L,
            ),
            dest: R8(
                B,
            ),
        },
        span: Span {
            start: 1823,
            end: 1824,
        },
    },
    Instruction {
        val: Unprefixed(
            75,
        ),
        opcode: LD {
            src: R8(
                E,
            ),
            dest: R8(
                C,
            ),
        },
        span: Span {
            start: 1824,
            end: 1825,
        },
    },
    Instruction {
        val: Unprefixed(
            32,
        ),
        opcode: JR {
            cc: Some(
                NZ,
            ),
            e8: 82,
        },
        span: Span {
            start: 1825,
            end: 1827,
        },
    },
    Instruction {
        val: Unprefixed(
            45,
        ),
        opcode: DEC(
            R8(
                L,
            ),
        ),
        span: Span {
            start: 1827,
            end: 1828,
        },
    },
    Instruction {
        val: Unprefixed(
            85,
        ),
        opcode: LD {
            src: R8(
                L,
            ),
            dest: R8(
                D,
            ),
        },
        span: Span {
            start: 1828,
            end: 1829,
        },
    },
    Instruction {
        val: Unprefixed(
            82,
        ),
        opcode: LD {
            src: R8(
                D,
            ),
            dest: R8(
                D,
            ),
        },
        span: Span {
            start: 1829,
            end: 1830,
        },
    },
    Instruction {
        val: Unprefixed(
            65,
        ),
        opcode: LD {
            src: R8(
                C,
            ),
            dest: R8(
                B,
            ),
        },
        span: Span {
            start: 1830,
            end: 1831,
        },
    },
    Instruction {
        val: Unprefixed(
            82,
        ),
        opcode: LD {
            src: R8(
                D,
            ),
            dest: R8(
                D,
            ),
        },
        span: Span {
            start: 1831,
            end: 1832,
        },
    },
    Instruction {
        val: Unprefixed(
            32,
        ),
        opcode: JR {
            cc: Some(
                NZ,
            ),
            e8: 73,
        },
        span: Span {
            start: 1832,
            end: 1834,
        },
    },
    Instruction {
        val: Unprefixed(
            78,
        ),
        opcode: LD {
            src: R8(
                HL,
            ),
            dest: R8(
                C,
            ),
        },
        span: Span {
            start: 1834,
            end: 1835,
        },
    },
    Instruction {
        val: Unprefixed(
            65,
        ),
        opcode: LD {
            src: R8(
                C,
            ),
            dest: R8(
                B,
            ),
        },
        span: Span {
            start: 1835,
            end: 1836,
        },
    },
    Instruction {
        val: Unprefixed(
            73,
        ),
        opcode: LD {
            src: R8(
                C,
            ),
            dest: R8(
                C,
            ),
        },
        span: Span {
            start: 1836,
            end: 1837,
        },
    },
    Instruction {
        val: Unprefixed(
            76,
        ),
        opcode: LD {
            src: R8(
                H,
            ),
            dest: R8(
                C,
            ),
        },
        span: Span {
            start: 1837,
            end: 1838,
        },
    },
    Instruction {
        val: Unprefixed(
            73,
        ),
        opcode: LD {
            src: R8(
                C,
            ),
            dest: R8(
                C,
            ),
        },
        span: Span {
            start: 1838,
            end: 1839,
        },
    },
    Instruction {
        val: Unprefixed(
            67,
        ),
        opcode: LD {
            src: R8(
                E,
            ),
            dest: R8(
                B,
            ),
        },
        span: Span {
            start: 1839,
            end: 1840,
        },
    },
    Instruction {
        val: Unprefixed(
            69,
        ),
        opcode: LD {
            src: R8(
                L,
            ),
            dest: R8(
                B,
            ),
        },
        span: Span {
            start: 1840,
            end: 1841,
        },
    },
    Instruction {
        val: Unprefixed(
            32,
        ),
        opcode: JR {
            cc: Some(
                NZ,
            ),
            e8: 82,
        },
        span: Span {
            start: 1841,
            end: 1843,
        },
    },
    Instruction {
        val: Unprefixed(
            124,
        ),
        opcode: LD {
            src: R8(
                H,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1843,
            end: 1844,
        },
    },
    Instruction {
        val: Unprefixed(
            8,
        ),
        opcode: LD_SP(
            4771,
        ),
        span: Span {
            start: 1844,
            end: 1847,
        },
    },
    Instruction {
        val: Unprefixed(
            162,
        ),
        opcode: AND(
            Register(
                D,
            ),
        ),
        span: Span {
            start: 1847,
            end: 1848,
        },
    },
    Instruction {
        val: Unprefixed(
            7,
        ),
        opcode: RLCA,
        span: Span {
            start: 1848,
            end: 1849,
        },
    },
    Instruction {
        val: Unprefixed(
            135,
        ),
        opcode: ADD(
            Register(
                A,
            ),
        ),
        span: Span {
            start: 1849,
            end: 1850,
        },
    },
    Instruction {
        val: Unprefixed(
            75,
        ),
        opcode: LD {
            src: R8(
                E,
            ),
            dest: R8(
                C,
            ),
        },
        span: Span {
            start: 1850,
            end: 1851,
        },
    },
    Instruction {
        val: Unprefixed(
            32,
        ),
        opcode: JR {
            cc: Some(
                NZ,
            ),
            e8: 18,
        },
        span: Span {
            start: 1851,
            end: 1853,
        },
    },
    Instruction {
        val: Unprefixed(
            101,
        ),
        opcode: LD {
            src: R8(
                L,
            ),
            dest: R8(
                H,
            ),
        },
        span: Span {
            start: 1853,
            end: 1854,
        },
    },
    Instruction {
        val: Unprefixed(
            168,
        ),
        opcode: XOR(
            Register(
                B,
            ),
        ),
        span: Span {
            start: 1854,
            end: 1855,
        },
    },
    Instruction {
        val: Unprefixed(
            22,
        ),
        opcode: LD {
            src: N8(
                169,
            ),
            dest: R8(
                D,
            ),
        },
        span: Span {
            start: 1855,
            end: 1857,
        },
    },
    Instruction {
        val: Unprefixed(
            134,
        ),
        opcode: ADD(
            Register(
                HL,
            ),
        ),
        span: Span {
            start: 1857,
            end: 1858,
        },
    },
    Instruction {
        val: Unprefixed(
            177,
        ),
        opcode: OR(
            Register(
                C,
            ),
        ),
        span: Span {
            start: 1858,
            end: 1859,
        },
    },
    Instruction {
        val: Unprefixed(
            104,
        ),
        opcode: LD {
            src: R8(
                B,
            ),
            dest: R8(
                L,
            ),
        },
        span: Span {
            start: 1859,
            end: 1860,
        },
    },
    Instruction {
        val: Unprefixed(
            160,
        ),
        opcode: AND(
            Register(
                B,
            ),
        ),
        span: Span {
            start: 1860,
            end: 1861,
        },
    },
    Instruction {
        val: Unprefixed(
            135,
        ),
        opcode: ADD(
            Register(
                A,
            ),
        ),
        span: Span {
            start: 1861,
            end: 1862,
        },
    },
    Instruction {
        val: Unprefixed(
            102,
        ),
        opcode: LD {
            src: R8(
                HL,
            ),
            dest: R8(
                H,
            ),
        },
        span: Span {
            start: 1862,
            end: 1863,
        },
    },
    Instruction {
        val: Unprefixed(
            18,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: MEM_R16(
                DE,
            ),
        },
        span: Span {
            start: 1863,
            end: 1864,
        },
    },
    Instruction {
        val: Unprefixed(
            161,
        ),
        opcode: AND(
            Register(
                C,
            ),
        ),
        span: Span {
            start: 1864,
            end: 1865,
        },
    },
    Instruction {
        val: Unprefixed(
            48,
        ),
        opcode: JR {
            cc: Some(
                NC,
            ),
            e8: 60,
        },
        span: Span {
            start: 1865,
            end: 1867,
        },
    },
    Instruction {
        val: Unprefixed(
            18,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: MEM_R16(
                DE,
            ),
        },
        span: Span {
            start: 1867,
            end: 1868,
        },
    },
    Instruction {
        val: Unprefixed(
            133,
        ),
        opcode: ADD(
            Register(
                L,
            ),
        ),
        span: Span {
            start: 1868,
            end: 1869,
        },
    },
    Instruction {
        val: Unprefixed(
            18,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: MEM_R16(
                DE,
            ),
        },
        span: Span {
            start: 1869,
            end: 1870,
        },
    },
    Instruction {
        val: Unprefixed(
            100,
        ),
        opcode: LD {
            src: R8(
                H,
            ),
            dest: R8(
                H,
            ),
        },
        span: Span {
            start: 1870,
            end: 1871,
        },
    },
    Instruction {
        val: Unprefixed(
            27,
        ),
        opcode: DEC(
            R16(
                DE,
            ),
        ),
        span: Span {
            start: 1871,
            end: 1872,
        },
    },
    Instruction {
        val: Unprefixed(
            7,
        ),
        opcode: RLCA,
        span: Span {
            start: 1872,
            end: 1873,
        },
    },
    Instruction {
        val: Unprefixed(
            6,
        ),
        opcode: LD {
            src: N8(
                111,
            ),
            dest: R8(
                B,
            ),
        },
        span: Span {
            start: 1873,
            end: 1875,
        },
    },
    Instruction {
        val: Unprefixed(
            110,
        ),
        opcode: LD {
            src: R8(
                HL,
            ),
            dest: R8(
                L,
            ),
        },
        span: Span {
            start: 1875,
            end: 1876,
        },
    },
    Instruction {
        val: Unprefixed(
            110,
        ),
        opcode: LD {
            src: R8(
                HL,
            ),
            dest: R8(
                L,
            ),
        },
        span: Span {
            start: 1876,
            end: 1877,
        },
    },
    Instruction {
        val: Unprefixed(
            174,
        ),
        opcode: XOR(
            Register(
                HL,
            ),
        ),
        span: Span {
            start: 1877,
            end: 1878,
        },
    },
    Instruction {
        val: Unprefixed(
            175,
        ),
        opcode: XOR(
            Register(
                A,
            ),
        ),
        span: Span {
            start: 1878,
            end: 1879,
        },
    },
    Instruction {
        val: Unprefixed(
            111,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: R8(
                L,
            ),
        },
        span: Span {
            start: 1879,
            end: 1880,
        },
    },
    Instruction {
        val: Unprefixed(
            178,
        ),
        opcode: OR(
            Register(
                D,
            ),
        ),
        span: Span {
            start: 1880,
            end: 1881,
        },
    },
    Instruction {
        val: Unprefixed(
            175,
        ),
        opcode: XOR(
            Register(
                A,
            ),
        ),
        span: Span {
            start: 1881,
            end: 1882,
        },
    },
    Instruction {
        val: Unprefixed(
            178,
        ),
        opcode: OR(
            Register(
                D,
            ),
        ),
        span: Span {
            start: 1882,
            end: 1883,
        },
    },
    Instruction {
        val: Unprefixed(
            168,
        ),
        opcode: XOR(
            Register(
                B,
            ),
        ),
        span: Span {
            start: 1883,
            end: 1884,
        },
    },
    Instruction {
        val: Unprefixed(
            171,
        ),
        opcode: XOR(
            Register(
                E,
            ),
        ),
        span: Span {
            start: 1884,
            end: 1885,
        },
    },
    Instruction {
        val: Unprefixed(
            111,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: R8(
                L,
            ),
        },
        span: Span {
            start: 1885,
            end: 1886,
        },
    },
    Instruction {
        val: Unprefixed(
            175,
        ),
        opcode: XOR(
            Register(
                A,
            ),
        ),
        span: Span {
            start: 1886,
            end: 1887,
        },
    },
    Instruction {
        val: Unprefixed(
            134,
        ),
        opcode: ADD(
            Register(
                HL,
            ),
        ),
        span: Span {
            start: 1887,
            end: 1888,
        },
    },
    Instruction {
        val: Unprefixed(
            174,
        ),
        opcode: XOR(
            Register(
                HL,
            ),
        ),
        span: Span {
            start: 1888,
            end: 1889,
        },
    },
    Instruction {
        val: Unprefixed(
            162,
        ),
        opcode: AND(
            Register(
                D,
            ),
        ),
        span: Span {
            start: 1889,
            end: 1890,
        },
    },
    Instruction {
        val: Unprefixed(
            162,
        ),
        opcode: AND(
            Register(
                D,
            ),
        ),
        span: Span {
            start: 1890,
            end: 1891,
        },
    },
    Instruction {
        val: Unprefixed(
            18,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: MEM_R16(
                DE,
            ),
        },
        span: Span {
            start: 1891,
            end: 1892,
        },
    },
    Instruction {
        val: Unprefixed(
            175,
        ),
        opcode: XOR(
            Register(
                A,
            ),
        ),
        span: Span {
            start: 1892,
            end: 1893,
        },
    },
    Instruction {
        val: Unprefixed(
            19,
        ),
        opcode: INC(
            R16(
                DE,
            ),
        ),
        span: Span {
            start: 1893,
            end: 1894,
        },
    },
    Instruction {
        val: Unprefixed(
            18,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: MEM_R16(
                DE,
            ),
        },
        span: Span {
            start: 1894,
            end: 1895,
        },
    },
    Instruction {
        val: Unprefixed(
            161,
        ),
        opcode: AND(
            Register(
                C,
            ),
        ),
        span: Span {
            start: 1895,
            end: 1896,
        },
    },
    Instruction {
        val: Unprefixed(
            110,
        ),
        opcode: LD {
            src: R8(
                HL,
            ),
            dest: R8(
                L,
            ),
        },
        span: Span {
            start: 1896,
            end: 1897,
        },
    },
    Instruction {
        val: Unprefixed(
            175,
        ),
        opcode: XOR(
            Register(
                A,
            ),
        ),
        span: Span {
            start: 1897,
            end: 1898,
        },
    },
    Instruction {
        val: Unprefixed(
            175,
        ),
        opcode: XOR(
            Register(
                A,
            ),
        ),
        span: Span {
            start: 1898,
            end: 1899,
        },
    },
    Instruction {
        val: Unprefixed(
            173,
        ),
        opcode: XOR(
            Register(
                L,
            ),
        ),
        span: Span {
            start: 1899,
            end: 1900,
        },
    },
    Instruction {
        val: Unprefixed(
            6,
        ),
        opcode: LD {
            src: N8(
                76,
            ),
            dest: R8(
                B,
            ),
        },
        span: Span {
            start: 1900,
            end: 1902,
        },
    },
    Instruction {
        val: Unprefixed(
            110,
        ),
        opcode: LD {
            src: R8(
                HL,
            ),
            dest: R8(
                L,
            ),
        },
        span: Span {
            start: 1902,
            end: 1903,
        },
    },
    Instruction {
        val: Unprefixed(
            175,
        ),
        opcode: XOR(
            Register(
                A,
            ),
        ),
        span: Span {
            start: 1903,
            end: 1904,
        },
    },
    Instruction {
        val: Unprefixed(
            175,
        ),
        opcode: XOR(
            Register(
                A,
            ),
        ),
        span: Span {
            start: 1904,
            end: 1905,
        },
    },
    Instruction {
        val: Unprefixed(
            18,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: MEM_R16(
                DE,
            ),
        },
        span: Span {
            start: 1905,
            end: 1906,
        },
    },
    Instruction {
        val: Unprefixed(
            124,
        ),
        opcode: LD {
            src: R8(
                H,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1906,
            end: 1907,
        },
    },
    Instruction {
        val: Unprefixed(
            172,
        ),
        opcode: XOR(
            Register(
                H,
            ),
        ),
        span: Span {
            start: 1907,
            end: 1908,
        },
    },
    Instruction {
        val: Unprefixed(
            168,
        ),
        opcode: XOR(
            Register(
                B,
            ),
        ),
        span: Span {
            start: 1908,
            end: 1909,
        },
    },
    Instruction {
        val: Unprefixed(
            106,
        ),
        opcode: LD {
            src: R8(
                D,
            ),
            dest: R8(
                L,
            ),
        },
        span: Span {
            start: 1909,
            end: 1910,
        },
    },
    Instruction {
        val: Unprefixed(
            110,
        ),
        opcode: LD {
            src: R8(
                HL,
            ),
            dest: R8(
                L,
            ),
        },
        span: Span {
            start: 1910,
            end: 1911,
        },
    },
    Instruction {
        val: Unprefixed(
            19,
        ),
        opcode: INC(
            R16(
                DE,
            ),
        ),
        span: Span {
            start: 1911,
            end: 1912,
        },
    },
    Instruction {
        val: Unprefixed(
            160,
        ),
        opcode: AND(
            Register(
                B,
            ),
        ),
        span: Span {
            start: 1912,
            end: 1913,
        },
    },
    Instruction {
        val: Unprefixed(
            45,
        ),
        opcode: DEC(
            R8(
                L,
            ),
        ),
        span: Span {
            start: 1913,
            end: 1914,
        },
    },
    Instruction {
        val: Unprefixed(
            168,
        ),
        opcode: XOR(
            Register(
                B,
            ),
        ),
        span: Span {
            start: 1914,
            end: 1915,
        },
    },
    Instruction {
        val: Unprefixed(
            43,
        ),
        opcode: DEC(
            R16(
                HL,
            ),
        ),
        span: Span {
            start: 1915,
            end: 1916,
        },
    },
    Instruction {
        val: Unprefixed(
            172,
        ),
        opcode: XOR(
            Register(
                H,
            ),
        ),
        span: Span {
            start: 1916,
            end: 1917,
        },
    },
    Instruction {
        val: Unprefixed(
            100,
        ),
        opcode: LD {
            src: R8(
                H,
            ),
            dest: R8(
                H,
            ),
        },
        span: Span {
            start: 1917,
            end: 1918,
        },
    },
    Instruction {
        val: Unprefixed(
            172,
        ),
        opcode: XOR(
            Register(
                H,
            ),
        ),
        span: Span {
            start: 1918,
            end: 1919,
        },
    },
    Instruction {
        val: Unprefixed(
            109,
        ),
        opcode: LD {
            src: R8(
                L,
            ),
            dest: R8(
                L,
            ),
        },
        span: Span {
            start: 1919,
            end: 1920,
        },
    },
    Instruction {
        val: Unprefixed(
            135,
        ),
        opcode: ADD(
            Register(
                A,
            ),
        ),
        span: Span {
            start: 1920,
            end: 1921,
        },
    },
    Instruction {
        val: Unprefixed(
            188,
        ),
        opcode: CP(
            Register(
                H,
            ),
        ),
        span: Span {
            start: 1921,
            end: 1922,
        },
    },
    Instruction {
        val: Unprefixed(
            96,
        ),
        opcode: LD {
            src: R8(
                B,
            ),
            dest: R8(
                H,
            ),
        },
        span: Span {
            start: 1922,
            end: 1923,
        },
    },
    Instruction {
        val: Unprefixed(
            180,
        ),
        opcode: OR(
            Register(
                H,
            ),
        ),
        span: Span {
            start: 1923,
            end: 1924,
        },
    },
    Instruction {
        val: Unprefixed(
            19,
        ),
        opcode: INC(
            R16(
                DE,
            ),
        ),
        span: Span {
            start: 1924,
            end: 1925,
        },
    },
    Instruction {
        val: Unprefixed(
            114,
        ),
        opcode: LD {
            src: R8(
                D,
            ),
            dest: R8(
                HL,
            ),
        },
        span: Span {
            start: 1925,
            end: 1926,
        },
    },
    Instruction {
        val: Unprefixed(
            124,
        ),
        opcode: LD {
            src: R8(
                H,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1926,
            end: 1927,
        },
    },
    Instruction {
        val: Unprefixed(
            181,
        ),
        opcode: OR(
            Register(
                L,
            ),
        ),
        span: Span {
            start: 1927,
            end: 1928,
        },
    },
    Instruction {
        val: Unprefixed(
            174,
        ),
        opcode: XOR(
            Register(
                HL,
            ),
        ),
        span: Span {
            start: 1928,
            end: 1929,
        },
    },
    Instruction {
        val: Unprefixed(
            174,
        ),
        opcode: XOR(
            Register(
                HL,
            ),
        ),
        span: Span {
            start: 1929,
            end: 1930,
        },
    },
    Instruction {
        val: Unprefixed(
            124,
        ),
        opcode: LD {
            src: R8(
                H,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1930,
            end: 1931,
        },
    },
    Instruction {
        val: Unprefixed(
            124,
        ),
        opcode: LD {
            src: R8(
                H,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1931,
            end: 1932,
        },
    },
    Instruction {
        val: Unprefixed(
            101,
        ),
        opcode: LD {
            src: R8(
                L,
            ),
            dest: R8(
                H,
            ),
        },
        span: Span {
            start: 1932,
            end: 1933,
        },
    },
    Instruction {
        val: Unprefixed(
            162,
        ),
        opcode: AND(
            Register(
                D,
            ),
        ),
        span: Span {
            start: 1933,
            end: 1934,
        },
    },
    Instruction {
        val: Unprefixed(
            108,
        ),
        opcode: LD {
            src: R8(
                H,
            ),
            dest: R8(
                L,
            ),
        },
        span: Span {
            start: 1934,
            end: 1935,
        },
    },
    Instruction {
        val: Unprefixed(
            100,
        ),
        opcode: LD {
            src: R8(
                H,
            ),
            dest: R8(
                H,
            ),
        },
        span: Span {
            start: 1935,
            end: 1936,
        },
    },
    Instruction {
        val: Unprefixed(
            133,
        ),
        opcode: ADD(
            Register(
                L,
            ),
        ),
        span: Span {
            start: 1936,
            end: 1937,
        },
    },
    Instruction {
        val: Unprefixed(
            128,
        ),
        opcode: ADD(
            Register(
                B,
            ),
        ),
        span: Span {
            start: 1937,
            end: 1938,
        },
    },
    Instruction {
        val: Unprefixed(
            176,
        ),
        opcode: OR(
            Register(
                B,
            ),
        ),
        span: Span {
            start: 1938,
            end: 1939,
        },
    },
    Instruction {
        val: Unprefixed(
            64,
        ),
        opcode: LD {
            src: R8(
                B,
            ),
            dest: R8(
                B,
            ),
        },
        span: Span {
            start: 1939,
            end: 1940,
        },
    },
    Instruction {
        val: Unprefixed(
            136,
        ),
        opcode: ADC(
            Register(
                B,
            ),
        ),
        span: Span {
            start: 1940,
            end: 1941,
        },
    },
    Instruction {
        val: Unprefixed(
            32,
        ),
        opcode: JR {
            cc: Some(
                NZ,
            ),
            e8: 104,
        },
        span: Span {
            start: 1941,
            end: 1943,
        },
    },
    Instruction {
        val: Unprefixed(
            222,
        ),
        opcode: SBC(
            Constant(
                0,
            ),
        ),
        span: Span {
            start: 1943,
            end: 1945,
        },
    },
    Instruction {
        val: Unprefixed(
            112,
        ),
        opcode: LD {
            src: R8(
                B,
            ),
            dest: R8(
                HL,
            ),
        },
        span: Span {
            start: 1945,
            end: 1946,
        },
    },
    Instruction {
        val: Unprefixed(
            222,
        ),
        opcode: SBC(
            Constant(
                32,
            ),
        ),
        span: Span {
            start: 1946,
            end: 1948,
        },
    },
    Instruction {
        val: Unprefixed(
            120,
        ),
        opcode: LD {
            src: R8(
                B,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 1948,
            end: 1949,
        },
    },
    Instruction {
        val: Unprefixed(
            32,
        ),
        opcode: JR {
            cc: Some(
                NZ,
            ),
            e8: 32,
        },
        span: Span {
            start: 1949,
            end: 1951,
        },
    },
    Instruction {
        val: Unprefixed(
            56,
        ),
        opcode: JR {
            cc: Some(
                C,
            ),
            e8: 32,
        },
        span: Span {
            start: 1951,
            end: 1953,
        },
    },
    Instruction {
        val: Unprefixed(
            176,
        ),
        opcode: OR(
            Register(
                B,
            ),
        ),
        span: Span {
            start: 1953,
            end: 1954,
        },
    },
    Instruction {
        val: Unprefixed(
            144,
        ),
        opcode: SUB(
            Register(
                B,
            ),
        ),
        span: Span {
            start: 1954,
            end: 1955,
        },
    },
    Instruction {
        val: Unprefixed(
            32,
        ),
        opcode: JR {
            cc: Some(
                NZ,
            ),
            e8: -80,
        },
        span: Span {
            start: 1955,
            end: 1957,
        },
    },
    Instruction {
        val: Unprefixed(
            160,
        ),
        opcode: AND(
            Register(
                B,
            ),
        ),
        span: Span {
            start: 1957,
            end: 1958,
        },
    },
    Instruction {
        val: Unprefixed(
            224,
        ),
        opcode: LDH {
            src: MEM_N16(
                65456,
            ),
            dest: A,
        },
        span: Span {
            start: 1958,
            end: 1960,
        },
    },
    Instruction {
        val: Unprefixed(
            192,
        ),
        opcode: RET(
            Some(
                NZ,
            ),
        ),
        span: Span {
            start: 1960,
            end: 1961,
        },
    },
    Instruction {
        val: Unprefixed(
            152,
        ),
        opcode: SBC(
            Register(
                B,
            ),
        ),
        span: Span {
            start: 1961,
            end: 1962,
        },
    },
    Instruction {
        val: Unprefixed(
            182,
        ),
        opcode: OR(
            Register(
                HL,
            ),
        ),
        span: Span {
            start: 1962,
            end: 1963,
        },
    },
    Instruction {
        val: Unprefixed(
            72,
        ),
        opcode: LD {
            src: R8(
                B,
            ),
            dest: R8(
                C,
            ),
        },
        span: Span {
            start: 1963,
            end: 1964,
        },
    },
    Instruction {
        val: Unprefixed(
            128,
        ),
        opcode: ADD(
            Register(
                B,
            ),
        ),
        span: Span {
            start: 1964,
            end: 1965,
        },
    },
    Instruction {
        val: Unprefixed(
            224,
        ),
        opcode: LDH {
            src: MEM_N16(
                65360,
            ),
            dest: A,
        },
        span: Span {
            start: 1965,
            end: 1967,
        },
    },
    Instruction {
        val: Unprefixed(
            30,
        ),
        opcode: LD {
            src: N8(
                30,
            ),
            dest: R8(
                E,
            ),
        },
        span: Span {
            start: 1967,
            end: 1969,
        },
    },
    Instruction {
        val: Unprefixed(
            88,
        ),
        opcode: LD {
            src: R8(
                B,
            ),
            dest: R8(
                E,
            ),
        },
        span: Span {
            start: 1969,
            end: 1970,
        },
    },
    Instruction {
        val: Unprefixed(
            32,
        ),
        opcode: JR {
            cc: Some(
                NZ,
            ),
            e8: -72,
        },
        span: Span {
            start: 1970,
            end: 1972,
        },
    },
    Instruction {
        val: Unprefixed(
            224,
        ),
        opcode: LDH {
            src: MEM_N16(
                65416,
            ),
            dest: A,
        },
        span: Span {
            start: 1972,
            end: 1974,
        },
    },
    Instruction {
        val: Unprefixed(
            176,
        ),
        opcode: OR(
            Register(
                B,
            ),
        ),
        span: Span {
            start: 1974,
            end: 1975,
        },
    },
    Instruction {
        val: Unprefixed(
            16,
        ),
        opcode: STOP,
        span: Span {
            start: 1975,
            end: 1976,
        },
    },
    Instruction {
        val: Unprefixed(
            32,
        ),
        opcode: JR {
            cc: Some(
                NZ,
            ),
            e8: 0,
        },
        span: Span {
            start: 1976,
            end: 1978,
        },
    },
    Instruction {
        val: Unprefixed(
            16,
        ),
        opcode: STOP,
        span: Span {
            start: 1978,
            end: 1979,
        },
    },
    Instruction {
        val: Unprefixed(
            32,
        ),
        opcode: JR {
            cc: Some(
                NZ,
            ),
            e8: -32,
        },
        span: Span {
            start: 1979,
            end: 1981,
        },
    },
    Instruction {
        val: Unprefixed(
            24,
        ),
        opcode: JR {
            cc: None,
            e8: -32,
        },
        span: Span {
            start: 1981,
            end: 1983,
        },
    },
    Instruction {
        val: Unprefixed(
            24,
        ),
        opcode: JR {
            cc: None,
            e8: 0,
        },
        span: Span {
            start: 1983,
            end: 1985,
        },
    },
    Instruction {
        val: Unprefixed(
            24,
        ),
        opcode: JR {
            cc: None,
            e8: -32,
        },
        span: Span {
            start: 1985,
            end: 1987,
        },
    },
    Instruction {
        val: Unprefixed(
            32,
        ),
        opcode: JR {
            cc: Some(
                NZ,
            ),
            e8: -88,
        },
        span: Span {
            start: 1987,
            end: 1989,
        },
    },
    Instruction {
        val: Unprefixed(
            224,
        ),
        opcode: LDH {
            src: MEM_N16(
                65312,
            ),
            dest: A,
        },
        span: Span {
            start: 1989,
            end: 1991,
        },
    },
    Instruction {
        val: Unprefixed(
            24,
        ),
        opcode: JR {
            cc: None,
            e8: -32,
        },
        span: Span {
            start: 1991,
            end: 1993,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 1993,
            end: 1994,
        },
    },
    Instruction {
        val: Unprefixed(
            32,
        ),
        opcode: JR {
            cc: Some(
                NZ,
            ),
            e8: 24,
        },
        span: Span {
            start: 1994,
            end: 1996,
        },
    },
    Instruction {
        val: Unprefixed(
            216,
        ),
        opcode: RET(
            Some(
                C,
            ),
        ),
        span: Span {
            start: 1996,
            end: 1997,
        },
    },
    Instruction {
        val: Unprefixed(
            200,
        ),
        opcode: RET(
            Some(
                Z,
            ),
        ),
        span: Span {
            start: 1997,
            end: 1998,
        },
    },
    Instruction {
        val: Unprefixed(
            24,
        ),
        opcode: JR {
            cc: None,
            e8: -32,
        },
        span: Span {
            start: 1998,
            end: 2000,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 2000,
            end: 2001,
        },
    },
    Instruction {
        val: Unprefixed(
            224,
        ),
        opcode: LDH {
            src: MEM_N16(
                65344,
            ),
            dest: A,
        },
        span: Span {
            start: 2001,
            end: 2003,
        },
    },
    Instruction {
        val: Unprefixed(
            40,
        ),
        opcode: JR {
            cc: Some(
                Z,
            ),
            e8: 40,
        },
        span: Span {
            start: 2003,
            end: 2005,
        },
    },
    Instruction {
        val: Unprefixed(
            40,
        ),
        opcode: JR {
            cc: Some(
                Z,
            ),
            e8: 24,
        },
        span: Span {
            start: 2005,
            end: 2007,
        },
    },
    Instruction {
        val: Unprefixed(
            224,
        ),
        opcode: LDH {
            src: MEM_N16(
                65376,
            ),
            dest: A,
        },
        span: Span {
            start: 2007,
            end: 2009,
        },
    },
    Instruction {
        val: Unprefixed(
            32,
        ),
        opcode: JR {
            cc: Some(
                NZ,
            ),
            e8: 24,
        },
        span: Span {
            start: 2009,
            end: 2011,
        },
    },
    Instruction {
        val: Unprefixed(
            224,
        ),
        opcode: LDH {
            src: MEM_N16(
                65280,
            ),
            dest: A,
        },
        span: Span {
            start: 2011,
            end: 2013,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 2013,
            end: 2014,
        },
    },
    Instruction {
        val: Unprefixed(
            8,
        ),
        opcode: LD_SP(
            57368,
        ),
        span: Span {
            start: 2014,
            end: 2017,
        },
    },
    Instruction {
        val: Unprefixed(
            48,
        ),
        opcode: JR {
            cc: Some(
                NC,
            ),
            e8: -48,
        },
        span: Span {
            start: 2017,
            end: 2019,
        },
    },
    Instruction {
        val: Unprefixed(
            208,
        ),
        opcode: RET(
            Some(
                NC,
            ),
        ),
        span: Span {
            start: 2019,
            end: 2020,
        },
    },
    Instruction {
        val: Unprefixed(
            208,
        ),
        opcode: RET(
            Some(
                NC,
            ),
        ),
        span: Span {
            start: 2020,
            end: 2021,
        },
    },
    Instruction {
        val: Unprefixed(
            32,
        ),
        opcode: JR {
            cc: Some(
                NZ,
            ),
            e8: -32,
        },
        span: Span {
            start: 2021,
            end: 2023,
        },
    },
    Instruction {
        val: Unprefixed(
            232,
        ),
        opcode: ADD_SP(
            -1,
        ),
        span: Span {
            start: 2023,
            end: 2025,
        },
    },
    Instruction {
        val: Unprefixed(
            127,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 2025,
            end: 2026,
        },
    },
    Instruction {
        val: Unprefixed(
            191,
        ),
        opcode: CP(
            Register(
                A,
            ),
        ),
        span: Span {
            start: 2026,
            end: 2027,
        },
    },
    Instruction {
        val: Unprefixed(
            50,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: MEM_HLD,
        },
        span: Span {
            start: 2027,
            end: 2028,
        },
    },
    Instruction {
        val: Unprefixed(
            208,
        ),
        opcode: RET(
            Some(
                NC,
            ),
        ),
        span: Span {
            start: 2028,
            end: 2029,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 2029,
            end: 2030,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 2030,
            end: 2031,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 2031,
            end: 2032,
        },
    },
    Instruction {
        val: Unprefixed(
            159,
        ),
        opcode: SBC(
            Register(
                A,
            ),
        ),
        span: Span {
            start: 2032,
            end: 2033,
        },
    },
    Instruction {
        val: Unprefixed(
            99,
        ),
        opcode: LD {
            src: R8(
                E,
            ),
            dest: R8(
                H,
            ),
        },
        span: Span {
            start: 2033,
            end: 2034,
        },
    },
    Instruction {
        val: Unprefixed(
            121,
        ),
        opcode: LD {
            src: R8(
                C,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 2034,
            end: 2035,
        },
    },
    Instruction {
        val: Unprefixed(
            66,
        ),
        opcode: LD {
            src: R8(
                D,
            ),
            dest: R8(
                B,
            ),
        },
        span: Span {
            start: 2035,
            end: 2036,
        },
    },
    Instruction {
        val: Unprefixed(
            176,
        ),
        opcode: OR(
            Register(
                B,
            ),
        ),
        span: Span {
            start: 2036,
            end: 2037,
        },
    },
    Instruction {
        val: Unprefixed(
            21,
        ),
        opcode: DEC(
            R8(
                D,
            ),
        ),
        span: Span {
            start: 2037,
            end: 2038,
        },
    },
    Instruction {
        val: Prefixed(
            203,
        ),
        opcode: SET(
            BitArg {
                bit: 1,
                register: E,
            },
        ),
        span: Span {
            start: 2038,
            end: 2039,
        },
    },
    Instruction {
        val: Unprefixed(
            4,
        ),
        opcode: INC(
            R8(
                B,
            ),
        ),
        span: Span {
            start: 2039,
            end: 2040,
        },
    },
    Instruction {
        val: Unprefixed(
            255,
        ),
        opcode: RST(
            56,
        ),
        span: Span {
            start: 2040,
            end: 2041,
        },
    },
    Instruction {
        val: Unprefixed(
            127,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 2041,
            end: 2042,
        },
    },
    Instruction {
        val: Unprefixed(
            49,
        ),
        opcode: LD_SP(
            28234,
        ),
        span: Span {
            start: 2042,
            end: 2045,
        },
    },
    Instruction {
        val: Unprefixed(
            69,
        ),
        opcode: LD {
            src: R8(
                L,
            ),
            dest: R8(
                B,
            ),
        },
        span: Span {
            start: 2045,
            end: 2046,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 2046,
            end: 2047,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 2047,
            end: 2048,
        },
    },
    Instruction {
        val: Unprefixed(
            255,
        ),
        opcode: RST(
            56,
        ),
        span: Span {
            start: 2048,
            end: 2049,
        },
    },
    Instruction {
        val: Unprefixed(
            127,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 2049,
            end: 2050,
        },
    },
    Instruction {
        val: Unprefixed(
            239,
        ),
        opcode: RST(
            40,
        ),
        span: Span {
            start: 2050,
            end: 2051,
        },
    },
    Instruction {
        val: Unprefixed(
            27,
        ),
        opcode: DEC(
            R16(
                DE,
            ),
        ),
        span: Span {
            start: 2051,
            end: 2052,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 2052,
            end: 2053,
        },
    },
    Instruction {
        val: Unprefixed(
            2,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: MEM_R16(
                BC,
            ),
        },
        span: Span {
            start: 2053,
            end: 2054,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 2054,
            end: 2055,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 2055,
            end: 2056,
        },
    },
    Instruction {
        val: Unprefixed(
            255,
        ),
        opcode: RST(
            56,
        ),
        span: Span {
            start: 2056,
            end: 2057,
        },
    },
    Instruction {
        val: Unprefixed(
            127,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 2057,
            end: 2058,
        },
    },
    Instruction {
        val: Unprefixed(
            31,
        ),
        opcode: RRA,
        span: Span {
            start: 2058,
            end: 2059,
        },
    },
    Instruction {
        val: Unprefixed(
            66,
        ),
        opcode: LD {
            src: R8(
                D,
            ),
            dest: R8(
                B,
            ),
        },
        span: Span {
            start: 2059,
            end: 2060,
        },
    },
    Instruction {
        val: Unprefixed(
            242,
        ),
        opcode: LDH {
            src: A,
            dest: MEM_C,
        },
        span: Span {
            start: 2060,
            end: 2062,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 2062,
            end: 2063,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 2063,
            end: 2064,
        },
    },
    Instruction {
        val: Unprefixed(
            255,
        ),
        opcode: RST(
            56,
        ),
        span: Span {
            start: 2064,
            end: 2065,
        },
    },
    Instruction {
        val: Unprefixed(
            127,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 2065,
            end: 2066,
        },
    },
    Instruction {
        val: Unprefixed(
            148,
        ),
        opcode: SUB(
            Register(
                H,
            ),
        ),
        span: Span {
            start: 2066,
            end: 2067,
        },
    },
    Instruction {
        val: Unprefixed(
            82,
        ),
        opcode: LD {
            src: R8(
                D,
            ),
            dest: R8(
                D,
            ),
        },
        span: Span {
            start: 2067,
            end: 2068,
        },
    },
    Instruction {
        val: Unprefixed(
            74,
        ),
        opcode: LD {
            src: R8(
                D,
            ),
            dest: R8(
                C,
            ),
        },
        span: Span {
            start: 2068,
            end: 2069,
        },
    },
    Instruction {
        val: Unprefixed(
            41,
        ),
        opcode: ADD_HL(
            HL,
        ),
        span: Span {
            start: 2069,
            end: 2070,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 2070,
            end: 2071,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 2071,
            end: 2072,
        },
    },
    Instruction {
        val: Unprefixed(
            255,
        ),
        opcode: RST(
            56,
        ),
        span: Span {
            start: 2072,
            end: 2073,
        },
    },
    Instruction {
        val: Unprefixed(
            127,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 2073,
            end: 2074,
        },
    },
    Instruction {
        val: Unprefixed(
            255,
        ),
        opcode: RST(
            56,
        ),
        span: Span {
            start: 2074,
            end: 2075,
        },
    },
    Instruction {
        val: Unprefixed(
            3,
        ),
        opcode: INC(
            R16(
                BC,
            ),
        ),
        span: Span {
            start: 2075,
            end: 2076,
        },
    },
    Instruction {
        val: Unprefixed(
            47,
        ),
        opcode: CPL,
        span: Span {
            start: 2076,
            end: 2077,
        },
    },
    Instruction {
        val: Unprefixed(
            1,
        ),
        opcode: LD {
            src: N16(
                0,
            ),
            dest: R16(
                BC,
            ),
        },
        span: Span {
            start: 2077,
            end: 2080,
        },
    },
    Instruction {
        val: Unprefixed(
            255,
        ),
        opcode: RST(
            56,
        ),
        span: Span {
            start: 2080,
            end: 2081,
        },
    },
    Instruction {
        val: Unprefixed(
            127,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 2081,
            end: 2082,
        },
    },
    Instruction {
        val: Unprefixed(
            239,
        ),
        opcode: RST(
            40,
        ),
        span: Span {
            start: 2082,
            end: 2083,
        },
    },
    Instruction {
        val: Unprefixed(
            3,
        ),
        opcode: INC(
            R16(
                BC,
            ),
        ),
        span: Span {
            start: 2083,
            end: 2084,
        },
    },
    Instruction {
        val: Unprefixed(
            214,
        ),
        opcode: SUB(
            Constant(
                1,
            ),
        ),
        span: Span {
            start: 2084,
            end: 2086,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 2086,
            end: 2087,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 2087,
            end: 2088,
        },
    },
    Instruction {
        val: Unprefixed(
            255,
        ),
        opcode: RST(
            56,
        ),
        span: Span {
            start: 2088,
            end: 2089,
        },
    },
    Instruction {
        val: Unprefixed(
            127,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 2089,
            end: 2090,
        },
    },
    Instruction {
        val: Unprefixed(
            181,
        ),
        opcode: OR(
            Register(
                L,
            ),
        ),
        span: Span {
            start: 2090,
            end: 2091,
        },
    },
    Instruction {
        val: Unprefixed(
            66,
        ),
        opcode: LD {
            src: R8(
                D,
            ),
            dest: R8(
                B,
            ),
        },
        span: Span {
            start: 2091,
            end: 2092,
        },
    },
    Instruction {
        val: Unprefixed(
            200,
        ),
        opcode: RET(
            Some(
                Z,
            ),
        ),
        span: Span {
            start: 2092,
            end: 2093,
        },
    },
    Instruction {
        val: Unprefixed(
            61,
        ),
        opcode: DEC(
            R8(
                A,
            ),
        ),
        span: Span {
            start: 2093,
            end: 2094,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 2094,
            end: 2095,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 2095,
            end: 2096,
        },
    },
    Instruction {
        val: Unprefixed(
            116,
        ),
        opcode: LD {
            src: R8(
                H,
            ),
            dest: R8(
                HL,
            ),
        },
        span: Span {
            start: 2096,
            end: 2097,
        },
    },
    Instruction {
        val: Unprefixed(
            126,
        ),
        opcode: LD {
            src: R8(
                HL,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 2097,
            end: 2098,
        },
    },
    Instruction {
        val: Unprefixed(
            255,
        ),
        opcode: RST(
            56,
        ),
        span: Span {
            start: 2098,
            end: 2099,
        },
    },
    Instruction {
        val: Unprefixed(
            3,
        ),
        opcode: INC(
            R16(
                BC,
            ),
        ),
        span: Span {
            start: 2099,
            end: 2100,
        },
    },
    Instruction {
        val: Unprefixed(
            128,
        ),
        opcode: ADD(
            Register(
                B,
            ),
        ),
        span: Span {
            start: 2100,
            end: 2101,
        },
    },
    Instruction {
        val: Unprefixed(
            1,
        ),
        opcode: LD {
            src: N16(
                0,
            ),
            dest: R16(
                BC,
            ),
        },
        span: Span {
            start: 2101,
            end: 2104,
        },
    },
    Instruction {
        val: Unprefixed(
            255,
        ),
        opcode: RST(
            56,
        ),
        span: Span {
            start: 2104,
            end: 2105,
        },
    },
    Instruction {
        val: Unprefixed(
            103,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: R8(
                H,
            ),
        },
        span: Span {
            start: 2105,
            end: 2106,
        },
    },
    Instruction {
        val: Unprefixed(
            172,
        ),
        opcode: XOR(
            Register(
                H,
            ),
        ),
        span: Span {
            start: 2106,
            end: 2107,
        },
    },
    Instruction {
        val: Unprefixed(
            119,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: R8(
                HL,
            ),
        },
        span: Span {
            start: 2107,
            end: 2108,
        },
    },
    Instruction {
        val: Unprefixed(
            19,
        ),
        opcode: INC(
            R16(
                DE,
            ),
        ),
        span: Span {
            start: 2108,
            end: 2109,
        },
    },
    Instruction {
        val: Unprefixed(
            26,
        ),
        opcode: LD {
            src: MEM_R16(
                DE,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 2109,
            end: 2110,
        },
    },
    Instruction {
        val: Unprefixed(
            107,
        ),
        opcode: LD {
            src: R8(
                E,
            ),
            dest: R8(
                L,
            ),
        },
        span: Span {
            start: 2110,
            end: 2111,
        },
    },
    Instruction {
        val: Unprefixed(
            45,
        ),
        opcode: DEC(
            R8(
                L,
            ),
        ),
        span: Span {
            start: 2111,
            end: 2112,
        },
    },
    Instruction {
        val: Unprefixed(
            214,
        ),
        opcode: SUB(
            Constant(
                126,
            ),
        ),
        span: Span {
            start: 2112,
            end: 2114,
        },
    },
    Instruction {
        val: Unprefixed(
            255,
        ),
        opcode: RST(
            56,
        ),
        span: Span {
            start: 2114,
            end: 2115,
        },
    },
    Instruction {
        val: Unprefixed(
            75,
        ),
        opcode: LD {
            src: R8(
                E,
            ),
            dest: R8(
                C,
            ),
        },
        span: Span {
            start: 2115,
            end: 2116,
        },
    },
    Instruction {
        val: Unprefixed(
            117,
        ),
        opcode: LD {
            src: R8(
                L,
            ),
            dest: R8(
                HL,
            ),
        },
        span: Span {
            start: 2116,
            end: 2117,
        },
    },
    Instruction {
        val: Unprefixed(
            33,
        ),
        opcode: LD {
            src: N16(
                0,
            ),
            dest: R16(
                HL,
            ),
        },
        span: Span {
            start: 2117,
            end: 2120,
        },
    },
    Instruction {
        val: Unprefixed(
            255,
        ),
        opcode: RST(
            56,
        ),
        span: Span {
            start: 2120,
            end: 2121,
        },
    },
    Instruction {
        val: Unprefixed(
            83,
        ),
        opcode: LD {
            src: R8(
                E,
            ),
            dest: R8(
                D,
            ),
        },
        span: Span {
            start: 2121,
            end: 2122,
        },
    },
    Instruction {
        val: Unprefixed(
            95,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: R8(
                E,
            ),
        },
        span: Span {
            start: 2122,
            end: 2123,
        },
    },
    Instruction {
        val: Unprefixed(
            74,
        ),
        opcode: LD {
            src: R8(
                D,
            ),
            dest: R8(
                C,
            ),
        },
        span: Span {
            start: 2123,
            end: 2124,
        },
    },
    Instruction {
        val: Unprefixed(
            82,
        ),
        opcode: LD {
            src: R8(
                D,
            ),
            dest: R8(
                D,
            ),
        },
        span: Span {
            start: 2124,
            end: 2125,
        },
    },
    Instruction {
        val: Unprefixed(
            126,
        ),
        opcode: LD {
            src: R8(
                HL,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 2125,
            end: 2126,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 2126,
            end: 2127,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 2127,
            end: 2128,
        },
    },
    Instruction {
        val: Unprefixed(
            255,
        ),
        opcode: RST(
            56,
        ),
        span: Span {
            start: 2128,
            end: 2129,
        },
    },
    Instruction {
        val: Unprefixed(
            79,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: R8(
                C,
            ),
        },
        span: Span {
            start: 2129,
            end: 2130,
        },
    },
    Instruction {
        val: Unprefixed(
            210,
        ),
        opcode: JP {
            cc: Some(
                NC,
            ),
            n16: 32332,
        },
        span: Span {
            start: 2130,
            end: 2133,
        },
    },
    Instruction {
        val: Unprefixed(
            58,
        ),
        opcode: LD {
            src: MEM_HLD,
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 2133,
            end: 2134,
        },
    },
    Instruction {
        val: Unprefixed(
            224,
        ),
        opcode: LDH {
            src: MEM_N16(
                65308,
            ),
            dest: A,
        },
        span: Span {
            start: 2134,
            end: 2136,
        },
    },
    Instruction {
        val: Unprefixed(
            237,
        ),
        opcode: Invalid(
            237,
        ),
        span: Span {
            start: 2136,
            end: 2137,
        },
    },
    Instruction {
        val: Unprefixed(
            3,
        ),
        opcode: INC(
            R16(
                BC,
            ),
        ),
        span: Span {
            start: 2137,
            end: 2138,
        },
    },
    Instruction {
        val: Unprefixed(
            255,
        ),
        opcode: RST(
            56,
        ),
        span: Span {
            start: 2138,
            end: 2139,
        },
    },
    Instruction {
        val: Unprefixed(
            127,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 2139,
            end: 2140,
        },
    },
    Instruction {
        val: Unprefixed(
            95,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: R8(
                E,
            ),
        },
        span: Span {
            start: 2140,
            end: 2141,
        },
    },
    Instruction {
        val: Unprefixed(
            37,
        ),
        opcode: DEC(
            R8(
                H,
            ),
        ),
        span: Span {
            start: 2141,
            end: 2142,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 2142,
            end: 2143,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 2143,
            end: 2144,
        },
    },
    Instruction {
        val: Unprefixed(
            106,
        ),
        opcode: LD {
            src: R8(
                D,
            ),
            dest: R8(
                L,
            ),
        },
        span: Span {
            start: 2144,
            end: 2145,
        },
    },
    Instruction {
        val: Unprefixed(
            3,
        ),
        opcode: INC(
            R16(
                BC,
            ),
        ),
        span: Span {
            start: 2145,
            end: 2146,
        },
    },
    Instruction {
        val: Unprefixed(
            31,
        ),
        opcode: RRA,
        span: Span {
            start: 2146,
            end: 2147,
        },
    },
    Instruction {
        val: Unprefixed(
            2,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: MEM_R16(
                BC,
            ),
        },
        span: Span {
            start: 2147,
            end: 2148,
        },
    },
    Instruction {
        val: Unprefixed(
            255,
        ),
        opcode: RST(
            56,
        ),
        span: Span {
            start: 2148,
            end: 2149,
        },
    },
    Instruction {
        val: Unprefixed(
            3,
        ),
        opcode: INC(
            R16(
                BC,
            ),
        ),
        span: Span {
            start: 2149,
            end: 2150,
        },
    },
    Instruction {
        val: Unprefixed(
            255,
        ),
        opcode: RST(
            56,
        ),
        span: Span {
            start: 2150,
            end: 2151,
        },
    },
    Instruction {
        val: Unprefixed(
            127,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 2151,
            end: 2152,
        },
    },
    Instruction {
        val: Unprefixed(
            255,
        ),
        opcode: RST(
            56,
        ),
        span: Span {
            start: 2152,
            end: 2153,
        },
    },
    Instruction {
        val: Unprefixed(
            127,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 2153,
            end: 2154,
        },
    },
    Instruction {
        val: Unprefixed(
            223,
        ),
        opcode: RST(
            24,
        ),
        span: Span {
            start: 2154,
            end: 2155,
        },
    },
    Instruction {
        val: Unprefixed(
            1,
        ),
        opcode: LD {
            src: N16(
                4609,
            ),
            dest: R16(
                BC,
            ),
        },
        span: Span {
            start: 2155,
            end: 2158,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 2158,
            end: 2159,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 2159,
            end: 2160,
        },
    },
    Instruction {
        val: Unprefixed(
            31,
        ),
        opcode: RRA,
        span: Span {
            start: 2160,
            end: 2161,
        },
    },
    Instruction {
        val: Unprefixed(
            35,
        ),
        opcode: INC(
            R16(
                HL,
            ),
        ),
        span: Span {
            start: 2161,
            end: 2162,
        },
    },
    Instruction {
        val: Unprefixed(
            95,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: R8(
                E,
            ),
        },
        span: Span {
            start: 2162,
            end: 2163,
        },
    },
    Instruction {
        val: Unprefixed(
            3,
        ),
        opcode: INC(
            R16(
                BC,
            ),
        ),
        span: Span {
            start: 2163,
            end: 2164,
        },
    },
    Instruction {
        val: Unprefixed(
            242,
        ),
        opcode: LDH {
            src: A,
            dest: MEM_C,
        },
        span: Span {
            start: 2164,
            end: 2166,
        },
    },
    Instruction {
        val: Unprefixed(
            9,
        ),
        opcode: ADD_HL(
            BC,
        ),
        span: Span {
            start: 2166,
            end: 2167,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 2167,
            end: 2168,
        },
    },
    Instruction {
        val: Unprefixed(
            255,
        ),
        opcode: RST(
            56,
        ),
        span: Span {
            start: 2168,
            end: 2169,
        },
    },
    Instruction {
        val: Unprefixed(
            127,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 2169,
            end: 2170,
        },
    },
    Instruction {
        val: Unprefixed(
            234,
        ),
        opcode: LD {
            src: N16(
                799,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 2170,
            end: 2173,
        },
    },
    Instruction {
        val: Unprefixed(
            1,
        ),
        opcode: LD {
            src: N16(
                0,
            ),
            dest: R16(
                BC,
            ),
        },
        span: Span {
            start: 2173,
            end: 2176,
        },
    },
    Instruction {
        val: Unprefixed(
            159,
        ),
        opcode: SBC(
            Register(
                A,
            ),
        ),
        span: Span {
            start: 2176,
            end: 2177,
        },
    },
    Instruction {
        val: Unprefixed(
            41,
        ),
        opcode: ADD_HL(
            HL,
        ),
        span: Span {
            start: 2177,
            end: 2178,
        },
    },
    Instruction {
        val: Unprefixed(
            26,
        ),
        opcode: LD {
            src: MEM_R16(
                DE,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 2178,
            end: 2179,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 2179,
            end: 2180,
        },
    },
    Instruction {
        val: Unprefixed(
            12,
        ),
        opcode: INC(
            R8(
                C,
            ),
        ),
        span: Span {
            start: 2180,
            end: 2181,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 2181,
            end: 2182,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 2182,
            end: 2183,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 2183,
            end: 2184,
        },
    },
    Instruction {
        val: Unprefixed(
            255,
        ),
        opcode: RST(
            56,
        ),
        span: Span {
            start: 2184,
            end: 2185,
        },
    },
    Instruction {
        val: Unprefixed(
            127,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 2185,
            end: 2186,
        },
    },
    Instruction {
        val: Unprefixed(
            127,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 2186,
            end: 2187,
        },
    },
    Instruction {
        val: Unprefixed(
            2,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: MEM_R16(
                BC,
            ),
        },
        span: Span {
            start: 2187,
            end: 2188,
        },
    },
    Instruction {
        val: Unprefixed(
            31,
        ),
        opcode: RRA,
        span: Span {
            start: 2188,
            end: 2189,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 2189,
            end: 2190,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 2190,
            end: 2191,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 2191,
            end: 2192,
        },
    },
    Instruction {
        val: Unprefixed(
            255,
        ),
        opcode: RST(
            56,
        ),
        span: Span {
            start: 2192,
            end: 2193,
        },
    },
    Instruction {
        val: Unprefixed(
            127,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 2193,
            end: 2194,
        },
    },
    Instruction {
        val: Unprefixed(
            224,
        ),
        opcode: LDH {
            src: MEM_N16(
                65283,
            ),
            dest: A,
        },
        span: Span {
            start: 2194,
            end: 2196,
        },
    },
    Instruction {
        val: Unprefixed(
            6,
        ),
        opcode: LD {
            src: N8(
                2,
            ),
            dest: R8(
                B,
            ),
        },
        span: Span {
            start: 2196,
            end: 2198,
        },
    },
    Instruction {
        val: Unprefixed(
            32,
        ),
        opcode: JR {
            cc: Some(
                NZ,
            ),
            e8: 1,
        },
        span: Span {
            start: 2198,
            end: 2200,
        },
    },
    Instruction {
        val: Unprefixed(
            255,
        ),
        opcode: RST(
            56,
        ),
        span: Span {
            start: 2200,
            end: 2201,
        },
    },
    Instruction {
        val: Unprefixed(
            127,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 2201,
            end: 2202,
        },
    },
    Instruction {
        val: Unprefixed(
            235,
        ),
        opcode: Invalid(
            235,
        ),
        span: Span {
            start: 2202,
            end: 2203,
        },
    },
    Instruction {
        val: Unprefixed(
            126,
        ),
        opcode: LD {
            src: R8(
                HL,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 2203,
            end: 2204,
        },
    },
    Instruction {
        val: Unprefixed(
            31,
        ),
        opcode: RRA,
        span: Span {
            start: 2204,
            end: 2205,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 2205,
            end: 2206,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 2206,
            end: 2207,
        },
    },
    Instruction {
        val: Unprefixed(
            124,
        ),
        opcode: LD {
            src: R8(
                H,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 2207,
            end: 2208,
        },
    },
    Instruction {
        val: Unprefixed(
            255,
        ),
        opcode: RST(
            56,
        ),
        span: Span {
            start: 2208,
            end: 2209,
        },
    },
    Instruction {
        val: Unprefixed(
            127,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 2209,
            end: 2210,
        },
    },
    Instruction {
        val: Unprefixed(
            255,
        ),
        opcode: RST(
            56,
        ),
        span: Span {
            start: 2210,
            end: 2211,
        },
    },
    Instruction {
        val: Unprefixed(
            63,
        ),
        opcode: CCF,
        span: Span {
            start: 2211,
            end: 2212,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 2212,
            end: 2213,
        },
    },
    Instruction {
        val: Unprefixed(
            126,
        ),
        opcode: LD {
            src: R8(
                HL,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 2213,
            end: 2214,
        },
    },
    Instruction {
        val: Unprefixed(
            31,
        ),
        opcode: RRA,
        span: Span {
            start: 2214,
            end: 2215,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 2215,
            end: 2216,
        },
    },
    Instruction {
        val: Unprefixed(
            255,
        ),
        opcode: RST(
            56,
        ),
        span: Span {
            start: 2216,
            end: 2217,
        },
    },
    Instruction {
        val: Unprefixed(
            127,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 2217,
            end: 2218,
        },
    },
    Instruction {
        val: Unprefixed(
            255,
        ),
        opcode: RST(
            56,
        ),
        span: Span {
            start: 2218,
            end: 2219,
        },
    },
    Instruction {
        val: Unprefixed(
            3,
        ),
        opcode: INC(
            R16(
                BC,
            ),
        ),
        span: Span {
            start: 2219,
            end: 2220,
        },
    },
    Instruction {
        val: Unprefixed(
            31,
        ),
        opcode: RRA,
        span: Span {
            start: 2220,
            end: 2221,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 2221,
            end: 2222,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 2222,
            end: 2223,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 2223,
            end: 2224,
        },
    },
    Instruction {
        val: Unprefixed(
            255,
        ),
        opcode: RST(
            56,
        ),
        span: Span {
            start: 2224,
            end: 2225,
        },
    },
    Instruction {
        val: Unprefixed(
            3,
        ),
        opcode: INC(
            R16(
                BC,
            ),
        ),
        span: Span {
            start: 2225,
            end: 2226,
        },
    },
    Instruction {
        val: Unprefixed(
            31,
        ),
        opcode: RRA,
        span: Span {
            start: 2226,
            end: 2227,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 2227,
            end: 2228,
        },
    },
    Instruction {
        val: Unprefixed(
            12,
        ),
        opcode: INC(
            R8(
                C,
            ),
        ),
        span: Span {
            start: 2228,
            end: 2229,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 2229,
            end: 2230,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 2230,
            end: 2231,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 2231,
            end: 2232,
        },
    },
    Instruction {
        val: Unprefixed(
            255,
        ),
        opcode: RST(
            56,
        ),
        span: Span {
            start: 2232,
            end: 2233,
        },
    },
    Instruction {
        val: Unprefixed(
            127,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 2233,
            end: 2234,
        },
    },
    Instruction {
        val: Unprefixed(
            63,
        ),
        opcode: CCF,
        span: Span {
            start: 2234,
            end: 2235,
        },
    },
    Instruction {
        val: Unprefixed(
            3,
        ),
        opcode: INC(
            R16(
                BC,
            ),
        ),
        span: Span {
            start: 2235,
            end: 2236,
        },
    },
    Instruction {
        val: Unprefixed(
            147,
        ),
        opcode: SUB(
            Register(
                E,
            ),
        ),
        span: Span {
            start: 2236,
            end: 2237,
        },
    },
    Instruction {
        val: Unprefixed(
            1,
        ),
        opcode: LD {
            src: N16(
                0,
            ),
            dest: R16(
                BC,
            ),
        },
        span: Span {
            start: 2237,
            end: 2240,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 2240,
            end: 2241,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 2241,
            end: 2242,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 2242,
            end: 2243,
        },
    },
    Instruction {
        val: Unprefixed(
            66,
        ),
        opcode: LD {
            src: R8(
                D,
            ),
            dest: R8(
                B,
            ),
        },
        span: Span {
            start: 2243,
            end: 2244,
        },
    },
    Instruction {
        val: Unprefixed(
            127,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 2244,
            end: 2245,
        },
    },
    Instruction {
        val: Unprefixed(
            3,
        ),
        opcode: INC(
            R16(
                BC,
            ),
        ),
        span: Span {
            start: 2245,
            end: 2246,
        },
    },
    Instruction {
        val: Unprefixed(
            255,
        ),
        opcode: RST(
            56,
        ),
        span: Span {
            start: 2246,
            end: 2247,
        },
    },
    Instruction {
        val: Unprefixed(
            127,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 2247,
            end: 2248,
        },
    },
    Instruction {
        val: Unprefixed(
            255,
        ),
        opcode: RST(
            56,
        ),
        span: Span {
            start: 2248,
            end: 2249,
        },
    },
    Instruction {
        val: Unprefixed(
            127,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 2249,
            end: 2250,
        },
    },
    Instruction {
        val: Unprefixed(
            140,
        ),
        opcode: ADC(
            Register(
                H,
            ),
        ),
        span: Span {
            start: 2250,
            end: 2251,
        },
    },
    Instruction {
        val: Unprefixed(
            126,
        ),
        opcode: LD {
            src: R8(
                HL,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 2251,
            end: 2252,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 2252,
            end: 2253,
        },
    },
    Instruction {
        val: Unprefixed(
            124,
        ),
        opcode: LD {
            src: R8(
                H,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 2253,
            end: 2254,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 2254,
            end: 2255,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 2255,
            end: 2256,
        },
    },
    Instruction {
        val: Unprefixed(
            255,
        ),
        opcode: RST(
            56,
        ),
        span: Span {
            start: 2256,
            end: 2257,
        },
    },
    Instruction {
        val: Unprefixed(
            127,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 2257,
            end: 2258,
        },
    },
    Instruction {
        val: Unprefixed(
            239,
        ),
        opcode: RST(
            40,
        ),
        span: Span {
            start: 2258,
            end: 2259,
        },
    },
    Instruction {
        val: Unprefixed(
            27,
        ),
        opcode: DEC(
            R16(
                DE,
            ),
        ),
        span: Span {
            start: 2259,
            end: 2260,
        },
    },
    Instruction {
        val: Unprefixed(
            128,
        ),
        opcode: ADD(
            Register(
                B,
            ),
        ),
        span: Span {
            start: 2260,
            end: 2261,
        },
    },
    Instruction {
        val: Unprefixed(
            97,
        ),
        opcode: LD {
            src: R8(
                C,
            ),
            dest: R8(
                H,
            ),
        },
        span: Span {
            start: 2261,
            end: 2262,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 2262,
            end: 2263,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 2263,
            end: 2264,
        },
    },
    Instruction {
        val: Unprefixed(
            255,
        ),
        opcode: RST(
            56,
        ),
        span: Span {
            start: 2264,
            end: 2265,
        },
    },
    Instruction {
        val: Unprefixed(
            127,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 2265,
            end: 2266,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 2266,
            end: 2267,
        },
    },
    Instruction {
        val: Unprefixed(
            124,
        ),
        opcode: LD {
            src: R8(
                H,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 2267,
            end: 2268,
        },
    },
    Instruction {
        val: Unprefixed(
            224,
        ),
        opcode: LDH {
            src: MEM_N16(
                65283,
            ),
            dest: A,
        },
        span: Span {
            start: 2268,
            end: 2270,
        },
    },
    Instruction {
        val: Unprefixed(
            31,
        ),
        opcode: RRA,
        span: Span {
            start: 2270,
            end: 2271,
        },
    },
    Instruction {
        val: Unprefixed(
            124,
        ),
        opcode: LD {
            src: R8(
                H,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 2271,
            end: 2272,
        },
    },
    Instruction {
        val: Unprefixed(
            31,
        ),
        opcode: RRA,
        span: Span {
            start: 2272,
            end: 2273,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 2273,
            end: 2274,
        },
    },
    Instruction {
        val: Unprefixed(
            255,
        ),
        opcode: RST(
            56,
        ),
        span: Span {
            start: 2274,
            end: 2275,
        },
    },
    Instruction {
        val: Unprefixed(
            3,
        ),
        opcode: INC(
            R16(
                BC,
            ),
        ),
        span: Span {
            start: 2275,
            end: 2276,
        },
    },
    Instruction {
        val: Unprefixed(
            64,
        ),
        opcode: LD {
            src: R8(
                B,
            ),
            dest: R8(
                B,
            ),
        },
        span: Span {
            start: 2276,
            end: 2277,
        },
    },
    Instruction {
        val: Unprefixed(
            65,
        ),
        opcode: LD {
            src: R8(
                C,
            ),
            dest: R8(
                B,
            ),
        },
        span: Span {
            start: 2277,
            end: 2278,
        },
    },
    Instruction {
        val: Unprefixed(
            66,
        ),
        opcode: LD {
            src: R8(
                D,
            ),
            dest: R8(
                B,
            ),
        },
        span: Span {
            start: 2278,
            end: 2279,
        },
    },
    Instruction {
        val: Unprefixed(
            32,
        ),
        opcode: JR {
            cc: Some(
                NZ,
            ),
            e8: 33,
        },
        span: Span {
            start: 2279,
            end: 2281,
        },
    },
    Instruction {
        val: Unprefixed(
            34,
        ),
        opcode: LD {
            src: R8(
                A,
            ),
            dest: MEM_HLI,
        },
        span: Span {
            start: 2281,
            end: 2282,
        },
    },
    Instruction {
        val: Unprefixed(
            128,
        ),
        opcode: ADD(
            Register(
                B,
            ),
        ),
        span: Span {
            start: 2282,
            end: 2283,
        },
    },
    Instruction {
        val: Unprefixed(
            129,
        ),
        opcode: ADD(
            Register(
                C,
            ),
        ),
        span: Span {
            start: 2283,
            end: 2284,
        },
    },
    Instruction {
        val: Unprefixed(
            130,
        ),
        opcode: ADD(
            Register(
                D,
            ),
        ),
        span: Span {
            start: 2284,
            end: 2285,
        },
    },
    Instruction {
        val: Unprefixed(
            16,
        ),
        opcode: STOP,
        span: Span {
            start: 2285,
            end: 2286,
        },
    },
    Instruction {
        val: Unprefixed(
            17,
        ),
        opcode: LD {
            src: N16(
                4626,
            ),
            dest: R16(
                DE,
            ),
        },
        span: Span {
            start: 2286,
            end: 2289,
        },
    },
    Instruction {
        val: Unprefixed(
            176,
        ),
        opcode: OR(
            Register(
                B,
            ),
        ),
        span: Span {
            start: 2289,
            end: 2290,
        },
    },
    Instruction {
        val: Unprefixed(
            121,
        ),
        opcode: LD {
            src: R8(
                C,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 2290,
            end: 2291,
        },
    },
    Instruction {
        val: Unprefixed(
            184,
        ),
        opcode: CP(
            Register(
                B,
            ),
        ),
        span: Span {
            start: 2291,
            end: 2292,
        },
    },
    Instruction {
        val: Unprefixed(
            173,
        ),
        opcode: XOR(
            Register(
                L,
            ),
        ),
        span: Span {
            start: 2292,
            end: 2293,
        },
    },
    Instruction {
        val: Unprefixed(
            22,
        ),
        opcode: LD {
            src: N8(
                23,
            ),
            dest: R8(
                D,
            ),
        },
        span: Span {
            start: 2293,
            end: 2295,
        },
    },
    Instruction {
        val: Unprefixed(
            7,
        ),
        opcode: RLCA,
        span: Span {
            start: 2295,
            end: 2296,
        },
    },
    Instruction {
        val: Unprefixed(
            186,
        ),
        opcode: CP(
            Register(
                D,
            ),
        ),
        span: Span {
            start: 2296,
            end: 2297,
        },
    },
    Instruction {
        val: Unprefixed(
            5,
        ),
        opcode: DEC(
            R8(
                B,
            ),
        ),
        span: Span {
            start: 2297,
            end: 2298,
        },
    },
    Instruction {
        val: Unprefixed(
            124,
        ),
        opcode: LD {
            src: R8(
                H,
            ),
            dest: R8(
                A,
            ),
        },
        span: Span {
            start: 2298,
            end: 2299,
        },
    },
    Instruction {
        val: Unprefixed(
            19,
        ),
        opcode: INC(
            R16(
                DE,
            ),
        ),
        span: Span {
            start: 2299,
            end: 2300,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 2300,
            end: 2301,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 2301,
            end: 2302,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 2302,
            end: 2303,
        },
    },
    Instruction {
        val: Unprefixed(
            0,
        ),
        opcode: NOP,
        span: Span {
            start: 2303,
            end: 2304,
        },
    },
]
